FORMAT: 1A

# Google Cloud Deployment Manager API V2

The Deployment Manager API allows users to declaratively configure, deploy and run complex solutions on the Google Cloud Platform.

### Resource /{project}/global/deployments/{deployment} [/deploymentmanager/v2beta2/projects/{project}/global/deployments/{deployment}{?createPolicy,deletePolicy,updatePolicy}]

#### deploymentmanager.deployments.delete [DELETE]

+ Parameters

    + project (required)
  
    + deployment (required)

+ Response 200

#### deploymentmanager.deployments.get [GET]

+ Parameters

    + project (required)
  
    + deployment (required)

+ Response 200

#### deploymentmanager.deployments.patch [PATCH]

+ Parameters

    + project (required)
  
    + deployment (required)
  
    + createPolicy
  
    + deletePolicy
  
    + updatePolicy

+ Request

    + Schema

            {
              "type": "object",
              "description": "",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "An optional user-provided description of the deployment."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time.\n\nThe fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.",
                  "format": "byte"
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "insertTime": {
                  "type": "string",
                  "description": "[Output Only] Timestamp when the deployment was created, in RFC3339 text format ."
                },
                "intent": {
                  "type": "string",
                  "description": "[Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL.\n\nPREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.\n\nUPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration.\n\nCANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made."
                },
                "manifest": {
                  "type": "string",
                  "description": "[Output Only] URL of the manifest representing the last manifest that was successfully deployed."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the deployment, which must be unique within the project."
                },
                "state": {
                  "type": "string",
                  "description": "[Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING."
                },
                "target": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "config": {
                      "type": "string",
                      "description": "The configuration to use for this deployment."
                    },
                    "imports": {
                      "type": "array",
                      "description": "Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template.",
                      "items": {
                        "type": "object",
                        "description": "",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "The contents of the file."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          }
                        }
                      }
                    }
                  }
                },
                "update": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "description": "[Output Only] List of all errors encountered while trying to enact the update.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "manifest": {
                      "type": "string",
                      "description": "[Output Only] URL of the manifest representing the update configuration of this deployment."
                    }
                  }
                },
                "updateTime": {
                  "type": "string",
                  "description": "[Output Only] Timestamp when the deployment was updated, in RFC3339 text format ."
                }
              }
            }

+ Response 200

#### deploymentmanager.deployments.update [PUT]

+ Parameters

    + project (required)
  
    + deployment (required)
  
    + createPolicy
  
    + deletePolicy
  
    + updatePolicy

+ Request

    + Schema

            {
              "type": "object",
              "description": "",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "An optional user-provided description of the deployment."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time.\n\nThe fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.",
                  "format": "byte"
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "insertTime": {
                  "type": "string",
                  "description": "[Output Only] Timestamp when the deployment was created, in RFC3339 text format ."
                },
                "intent": {
                  "type": "string",
                  "description": "[Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL.\n\nPREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.\n\nUPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration.\n\nCANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made."
                },
                "manifest": {
                  "type": "string",
                  "description": "[Output Only] URL of the manifest representing the last manifest that was successfully deployed."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the deployment, which must be unique within the project."
                },
                "state": {
                  "type": "string",
                  "description": "[Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING."
                },
                "target": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "config": {
                      "type": "string",
                      "description": "The configuration to use for this deployment."
                    },
                    "imports": {
                      "type": "array",
                      "description": "Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template.",
                      "items": {
                        "type": "object",
                        "description": "",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "The contents of the file."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          }
                        }
                      }
                    }
                  }
                },
                "update": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "description": "[Output Only] List of all errors encountered while trying to enact the update.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "manifest": {
                      "type": "string",
                      "description": "[Output Only] URL of the manifest representing the update configuration of this deployment."
                    }
                  }
                },
                "updateTime": {
                  "type": "string",
                  "description": "[Output Only] Timestamp when the deployment was updated, in RFC3339 text format ."
                }
              }
            }

+ Response 200

### Resource /{project}/global/deployments [/deploymentmanager/v2beta2/projects/{project}/global/deployments{?filter,maxResults,pageToken}]

#### deploymentmanager.deployments.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "An optional user-provided description of the deployment."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time.\n\nThe fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.",
                  "format": "byte"
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "insertTime": {
                  "type": "string",
                  "description": "[Output Only] Timestamp when the deployment was created, in RFC3339 text format ."
                },
                "intent": {
                  "type": "string",
                  "description": "[Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL.\n\nPREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.\n\nUPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration.\n\nCANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made."
                },
                "manifest": {
                  "type": "string",
                  "description": "[Output Only] URL of the manifest representing the last manifest that was successfully deployed."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the deployment, which must be unique within the project."
                },
                "state": {
                  "type": "string",
                  "description": "[Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING."
                },
                "target": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "config": {
                      "type": "string",
                      "description": "The configuration to use for this deployment."
                    },
                    "imports": {
                      "type": "array",
                      "description": "Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template.",
                      "items": {
                        "type": "object",
                        "description": "",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "The contents of the file."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          }
                        }
                      }
                    }
                  }
                },
                "update": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "description": "[Output Only] List of all errors encountered while trying to enact the update.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "manifest": {
                      "type": "string",
                      "description": "[Output Only] URL of the manifest representing the update configuration of this deployment."
                    }
                  }
                },
                "updateTime": {
                  "type": "string",
                  "description": "[Output Only] Timestamp when the deployment was updated, in RFC3339 text format ."
                }
              }
            }

+ Response 200

#### deploymentmanager.deployments.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/deployments/{deployment}/manifests/{manifest} [/{project}/global/deployments/{deployment}/manifests/{manifest}]

#### deploymentmanager.manifests.get [GET]

+ Parameters

    + project (required)
  
    + deployment (required)
  
    + manifest (required)

+ Response 200

### Resource /{project}/global/deployments/{deployment}/manifests [/deploymentmanager/v2beta2/projects/{project}/global/deployments/{deployment}/manifests{?filter,maxResults,pageToken}]

#### deploymentmanager.manifests.list [GET]

+ Parameters

    + project (required)
  
    + deployment (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/operations/{operation} [/{project}/global/operations/{operation}]

#### deploymentmanager.operations.get [GET]

+ Parameters

    + project (required)
  
    + operation (required)

+ Response 200

### Resource /{project}/global/operations [/deploymentmanager/v2beta2/projects/{project}/global/operations{?filter,maxResults,pageToken}]

#### deploymentmanager.operations.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/deployments/{deployment}/resources/{resource} [/{project}/global/deployments/{deployment}/resources/{resource}]

#### deploymentmanager.resources.get [GET]

+ Parameters

    + project (required)
  
    + deployment (required)
  
    + resource (required)

+ Response 200

### Resource /{project}/global/deployments/{deployment}/resources [/deploymentmanager/v2beta2/projects/{project}/global/deployments/{deployment}/resources{?filter,maxResults,pageToken}]

#### deploymentmanager.resources.list [GET]

+ Parameters

    + project (required)
  
    + deployment (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/types [/deploymentmanager/v2beta2/projects/{project}/global/types{?filter,maxResults,pageToken}]

#### deploymentmanager.types.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

