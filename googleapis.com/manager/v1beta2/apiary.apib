FORMAT: 1A

# Deployment Manager API

The Deployment Manager API allows users to declaratively configure, deploy and run complex solutions on the Google Cloud Platform.

### Resource /{projectId}/regions/{region}/deployments/{deploymentName} [/{projectId}/regions/{region}/deployments/{deploymentName}]

#### manager.deployments.delete [DELETE]

+ Parameters

    + projectId (required)
  
    + region (required)
  
    + deploymentName (required)

+ Response 200

#### manager.deployments.get [GET]

+ Parameters

    + projectId (required)
  
    + region (required)
  
    + deploymentName (required)

+ Response 200

### Resource /{projectId}/regions/{region}/deployments [/manager/v1beta2/projects/{projectId}/regions/{region}/deployments{?maxResults,pageToken}]

#### manager.deployments.insert [POST]

+ Parameters

    + projectId (required)
  
    + region (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A deployment represents a physical instantiation of a Template.",
              "properties": {
                "creationDate": {
                  "type": "string",
                  "description": "[Output Only] The time when this deployment was created."
                },
                "description": {
                  "type": "string",
                  "description": "A user-supplied description of this Deployment."
                },
                "modules": {
                  "type": "object",
                  "description": "[Output Only] List of status for the modules in this deployment.",
                  "additionalProperties": {
                    "type": "object",
                    "description": "[Output Only] Aggregate status for a module.",
                    "properties": {
                      "autoscalingModuleStatus": {
                        "type": "object",
                        "properties": {
                          "autoscalingConfigUrl": {
                            "type": "string",
                            "description": "[Output Only] The URL of the corresponding Autoscaling configuration."
                          }
                        }
                      },
                      "firewallModuleStatus": {
                        "type": "object",
                        "properties": {
                          "firewallUrl": {
                            "type": "string",
                            "description": "[Output Only] The URL of the corresponding Firewall resource."
                          }
                        }
                      },
                      "healthCheckModuleStatus": {
                        "type": "object",
                        "properties": {
                          "healthCheckUrl": {
                            "type": "string",
                            "description": "[Output Only] The HealthCheck URL."
                          }
                        }
                      },
                      "lbModuleStatus": {
                        "type": "object",
                        "properties": {
                          "forwardingRuleUrl": {
                            "type": "string",
                            "description": "[Output Only] The URL of the corresponding ForwardingRule in GCE."
                          },
                          "targetPoolUrl": {
                            "type": "string",
                            "description": "[Output Only] The URL of the corresponding TargetPool resource in GCE."
                          }
                        }
                      },
                      "networkModuleStatus": {
                        "type": "object",
                        "properties": {
                          "networkUrl": {
                            "type": "string",
                            "description": "[Output Only] The URL of the corresponding Network resource."
                          }
                        }
                      },
                      "replicaPoolModuleStatus": {
                        "type": "object",
                        "properties": {
                          "replicaPoolUrl": {
                            "type": "string",
                            "description": "[Output Only] The URL of the associated ReplicaPool resource."
                          },
                          "resourceViewUrl": {
                            "type": "string",
                            "description": "[Output Only] The URL of the Resource Group associated with this ReplicaPool."
                          }
                        }
                      },
                      "state": {
                        "type": "object",
                        "description": "[Output Only] The current state of a replica or module.",
                        "properties": {
                          "details": {
                            "type": "string",
                            "description": "[Output Only] Human readable details about the current state."
                          },
                          "status": {
                            "type": "string",
                            "description": "[Output Only] The status of the deployment. Possible values include: \n- UNKNOWN\n- DEPLOYING\n- DEPLOYED\n- DEPLOYMENT_FAILED\n- DELETING\n- DELETED\n- DELETE_FAILED"
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "description": "[Output Only] The type of the module."
                      }
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of this deployment. The name must conform to the following regular expression: [a-zA-Z0-9-_]{1,64}"
                },
                "overrides": {
                  "type": "array",
                  "description": "The set of parameter overrides to apply to the corresponding Template before deploying.",
                  "items": {
                    "type": "object",
                    "description": "A specification for overriding parameters in a Template that corresponds to the Deployment.",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "A JSON Path expression that specifies which parameter should be overridden."
                      },
                      "value": {
                        "type": "string",
                        "description": "The new value to assign to the overridden parameter."
                      }
                    }
                  }
                },
                "state": {
                  "type": "object",
                  "description": "[Output Only] The current state of a replica or module.",
                  "properties": {
                    "details": {
                      "type": "string",
                      "description": "[Output Only] Human readable details about the current state."
                    },
                    "status": {
                      "type": "string",
                      "description": "[Output Only] The status of the deployment. Possible values include: \n- UNKNOWN\n- DEPLOYING\n- DEPLOYED\n- DEPLOYMENT_FAILED\n- DELETING\n- DELETED\n- DELETE_FAILED"
                    }
                  }
                },
                "templateName": {
                  "type": "string",
                  "description": "The name of the Template on which this deployment is based."
                }
              }
            }

+ Response 200

#### manager.deployments.list [GET]

+ Parameters

    + projectId (required)
  
    + region (required)
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{projectId}/templates/{templateName} [/{projectId}/templates/{templateName}]

#### manager.templates.delete [DELETE]

+ Parameters

    + projectId (required)
  
    + templateName (required)

+ Response 200

#### manager.templates.get [GET]

+ Parameters

    + projectId (required)
  
    + templateName (required)

+ Response 200

### Resource /{projectId}/templates [/manager/v1beta2/projects/{projectId}/templates{?maxResults,pageToken}]

#### manager.templates.insert [POST]

+ Parameters

    + projectId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A Template represents a complete configuration for a Deployment.",
              "properties": {
                "actions": {
                  "type": "object",
                  "description": "Action definitions for use in Module intents in this Template.",
                  "additionalProperties": {
                    "type": "object",
                    "description": "An Action encapsulates a set of commands as a single runnable module with additional information needed during run-time.",
                    "properties": {
                      "commands": {
                        "type": "array",
                        "description": "A list of commands to run sequentially for this action.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "timeoutMs": {
                        "type": "integer",
                        "description": "The timeout in milliseconds for this action to run.",
                        "format": "int32"
                      }
                    }
                  }
                },
                "description": {
                  "type": "string",
                  "description": "A user-supplied description of this Template."
                },
                "modules": {
                  "type": "object",
                  "description": "A list of modules for this Template.",
                  "additionalProperties": {
                    "type": "object",
                    "description": "A module in a configuration. A module represents a single homogeneous, possibly replicated task.",
                    "properties": {
                      "autoscalingModule": {
                        "type": "object",
                        "properties": {
                          "coolDownPeriodSec": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": {
                            "type": "string"
                          },
                          "maxNumReplicas": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "minNumReplicas": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "signalType": {
                            "type": "string"
                          },
                          "targetModule": {
                            "type": "string"
                          },
                          "targetUtilization": {
                            "type": "number",
                            "description": "target_utilization should be in range [0,1].",
                            "format": "double"
                          }
                        }
                      },
                      "firewallModule": {
                        "type": "object",
                        "description": "A Firewall resource",
                        "properties": {
                          "allowed": {
                            "type": "array",
                            "description": "The allowed ports or port ranges.",
                            "items": {
                              "type": "object",
                              "description": "An allowed port resource.",
                              "properties": {
                                "IPProtocol": {
                                  "type": "string",
                                  "description": "?tcp?, ?udp? or ?icmp?"
                                },
                                "ports": {
                                  "type": "array",
                                  "description": "List of ports or port ranges (Example inputs include: [\"22\"], [?33?, \"12345-12349\"].",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the firewall (optional)"
                          },
                          "network": {
                            "type": "string",
                            "description": "The NetworkModule to which this firewall should apply. If not specified, or if specified as 'default', this firewall will be applied to the 'default' network."
                          },
                          "sourceRanges": {
                            "type": "array",
                            "description": "Source IP ranges to apply this firewall to, see the GCE Spec for details on syntax",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sourceTags": {
                            "type": "array",
                            "description": "Source Tags to apply this firewall to, see the GCE Spec for details on syntax",
                            "items": {
                              "type": "string"
                            }
                          },
                          "targetTags": {
                            "type": "array",
                            "description": "Target Tags to apply this firewall to, see the GCE Spec for details on syntax",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "healthCheckModule": {
                        "type": "object",
                        "properties": {
                          "checkIntervalSec": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": {
                            "type": "string"
                          },
                          "healthyThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "host": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "timeoutSec": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "unhealthyThreshold": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "lbModule": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "healthChecks": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "ipAddress": {
                            "type": "string"
                          },
                          "ipProtocol": {
                            "type": "string"
                          },
                          "portRange": {
                            "type": "string"
                          },
                          "sessionAffinity": {
                            "type": "string"
                          },
                          "targetModules": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "networkModule": {
                        "type": "object",
                        "properties": {
                          "IPv4Range": {
                            "type": "string",
                            "description": "Required; The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the network."
                          },
                          "gatewayIPv4": {
                            "type": "string",
                            "description": "An optional address that is used for default routing to other networks. This must be within the range specified by IPv4Range, and is typicall the first usable address in that range. If not specified, the default value is the first usable address in IPv4Range."
                          }
                        }
                      },
                      "replicaPoolModule": {
                        "type": "object",
                        "properties": {
                          "envVariables": {
                            "type": "object",
                            "description": "A list of environment variables.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "An environment variable.",
                              "properties": {
                                "hidden": {
                                  "type": "boolean",
                                  "description": "Whether this variable is hidden or visible."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value of the environment variable."
                                }
                              }
                            }
                          },
                          "healthChecks": {
                            "type": "array",
                            "description": "The Health Checks to configure for the ReplicaPoolModule",
                            "items": {
                              "type": "string"
                            }
                          },
                          "numReplicas": {
                            "type": "integer",
                            "description": "Number of replicas in this module.",
                            "format": "int32"
                          },
                          "replicaPoolParams": {
                            "type": "object",
                            "description": "Configuration information for a ReplicaPools resource. Specifying an item within will determine the ReplicaPools API version used for a ReplicaPoolModule. Only one may be specified.",
                            "properties": {
                              "v1beta1": {
                                "type": "object",
                                "description": "Configuration information for a ReplicaPools v1beta1 API resource. Directly maps to ReplicaPool InitTemplate.",
                                "properties": {
                                  "autoRestart": {
                                    "type": "boolean",
                                    "description": "Whether these replicas should be restarted if they experience a failure. The default value is true."
                                  },
                                  "baseInstanceName": {
                                    "type": "string",
                                    "description": "The base name for instances within this ReplicaPool."
                                  },
                                  "canIpForward": {
                                    "type": "boolean",
                                    "description": "Enables IP Forwarding"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "An optional textual description of the resource."
                                  },
                                  "disksToAttach": {
                                    "type": "array",
                                    "description": "A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk will be attached in read-only mode to every replica.",
                                    "items": {
                                      "type": "object",
                                      "description": "A pre-existing persistent disk that will be attached to every Replica in the Pool.",
                                      "properties": {
                                        "attachment": {
                                          "type": "object",
                                          "description": "How to attach a disk to a Replica.",
                                          "properties": {
                                            "deviceName": {
                                              "type": "string",
                                              "description": "The device name of this disk."
                                            },
                                            "index": {
                                              "type": "integer",
                                              "description": "A zero-based index to assign to this disk, where 0 is reserved for the boot disk. If not specified, this is assigned by the server.",
                                              "format": "uint32"
                                            }
                                          }
                                        },
                                        "source": {
                                          "type": "string",
                                          "description": "The fully-qualified URL of the Persistent Disk resource. It must be in the same zone as the Pool."
                                        }
                                      }
                                    }
                                  },
                                  "disksToCreate": {
                                    "type": "array",
                                    "description": "A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can only define one disk and it must be a root persistent disk. Note that Replica Pool will create a root persistent disk for each replica.",
                                    "items": {
                                      "type": "object",
                                      "description": "A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica.",
                                      "properties": {
                                        "attachment": {
                                          "type": "object",
                                          "description": "How to attach a disk to a Replica.",
                                          "properties": {
                                            "deviceName": {
                                              "type": "string",
                                              "description": "The device name of this disk."
                                            },
                                            "index": {
                                              "type": "integer",
                                              "description": "A zero-based index to assign to this disk, where 0 is reserved for the boot disk. If not specified, this is assigned by the server.",
                                              "format": "uint32"
                                            }
                                          }
                                        },
                                        "autoDelete": {
                                          "type": "boolean",
                                          "description": "If true, then this disk will be deleted when the instance is deleted."
                                        },
                                        "boot": {
                                          "type": "boolean",
                                          "description": "If true, indicates that this is the root persistent disk."
                                        },
                                        "initializeParams": {
                                          "type": "object",
                                          "description": "Initialization parameters for creating a new disk.",
                                          "properties": {
                                            "diskSizeGb": {
                                              "type": "string",
                                              "description": "The size of the created disk in gigabytes.",
                                              "format": "int64"
                                            },
                                            "diskType": {
                                              "type": "string",
                                              "description": "Name of the disk type resource describing which disk type to use to create the disk. For example 'pd-ssd' or 'pd-standard'. Default is 'pd-standard'"
                                            },
                                            "sourceImage": {
                                              "type": "string",
                                              "description": "The fully-qualified URL of a source image to use to create this disk."
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "initAction": {
                                    "type": "string",
                                    "description": "Name of the Action to be run during initialization of a ReplicaPoolModule."
                                  },
                                  "machineType": {
                                    "type": "string",
                                    "description": "The machine type for this instance. Either a complete URL, or the resource name (e.g. n1-standard-1)."
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "description": "A Compute Engine metadata entry. Identical to the metadata on the corresponding Compute Engine resource.",
                                    "properties": {
                                      "fingerPrint": {
                                        "type": "string",
                                        "description": "The fingerprint of the metadata."
                                      },
                                      "items": {
                                        "type": "array",
                                        "description": "A list of metadata items.",
                                        "items": {
                                          "type": "object",
                                          "description": "A Compute Engine metadata item, defined as a key:value pair. Identical to the metadata on the corresponding Compute Engine resource.",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "A metadata key."
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "A metadata value."
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "type": "array",
                                    "description": "A list of network interfaces for the instance. Currently only one interface is supported by Google Compute Engine.",
                                    "items": {
                                      "type": "object",
                                      "description": "A Compute Engine NetworkInterface resource. Identical to the NetworkInterface on the corresponding Compute Engine resource.",
                                      "properties": {
                                        "accessConfigs": {
                                          "type": "array",
                                          "description": "An array of configurations for this interface. This specifies how this interface is configured to interact with other network services",
                                          "items": {
                                            "type": "object",
                                            "description": "A Compute Engine network accessConfig. Identical to the accessConfig on corresponding Compute Engine resource.",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of this access configuration."
                                              },
                                              "natIp": {
                                                "type": "string",
                                                "description": "An external IP address associated with this instance."
                                              },
                                              "type": {
                                                "type": "string",
                                                "description": "Type of this access configuration file. (Currently only ONE_TO_ONE_NAT is legal.)"
                                              }
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the interface."
                                        },
                                        "network": {
                                          "type": "string",
                                          "description": "The name of the NetworkModule to which this interface applies. If not specified, or specified as 'default', this will use the 'default' network."
                                        },
                                        "networkIp": {
                                          "type": "string",
                                          "description": "An optional IPV4 internal network address to assign to the instance for this network interface."
                                        }
                                      }
                                    }
                                  },
                                  "onHostMaintenance": {
                                    "type": "string"
                                  },
                                  "serviceAccounts": {
                                    "type": "array",
                                    "description": "A list of Service Accounts to enable for this instance.",
                                    "items": {
                                      "type": "object",
                                      "description": "A Compute Engine service account, identical to the Compute Engine resource.",
                                      "properties": {
                                        "email": {
                                          "type": "string",
                                          "description": "Service account email address."
                                        },
                                        "scopes": {
                                          "type": "array",
                                          "description": "List of OAuth2 scopes to obtain for the service account.",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "object",
                                    "description": "A Compute Engine Instance tag, identical to the tags on the corresponding Compute Engine Instance resource.",
                                    "properties": {
                                      "fingerPrint": {
                                        "type": "string",
                                        "description": "The fingerprint of the tag."
                                      },
                                      "items": {
                                        "type": "array",
                                        "description": "Items contained in this tag.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The zone for this ReplicaPool."
                                  }
                                }
                              }
                            }
                          },
                          "resourceView": {
                            "type": "string",
                            "description": "[Output Only] The name of the Resource View associated with a ReplicaPoolModule. This field will be generated by the service."
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of this module. Valid values (\"AUTOSCALING\", \"FIREWALL\", \"HEALTH_CHECK\", \"LOAD_BALANCING\", \"NETWORK\", \"REPLICA_POOL\")"
                      }
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of this Template. The name must conform to the expression: [a-zA-Z0-9-_]{1,64}"
                }
              }
            }

+ Response 200

#### manager.templates.list [GET]

+ Parameters

    + projectId (required)
  
    + maxResults
  
    + pageToken

+ Response 200

