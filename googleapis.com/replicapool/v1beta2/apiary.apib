FORMAT: 1A

# Google Compute Engine Instance Group Manager API

The Google Compute Engine Instance Group Manager API provides groups of homogenous Compute Engine Instances.

### Resource /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances [/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances]

#### replicapool.instanceGroupManagers.abandonInstances [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "instances": {
                  "type": "array",
                  "description": "The names of one or more instances to abandon. For example:\n{ 'instances': [ 'instance-c3po', 'instance-r2d2' ] }",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager} [/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}]

#### replicapool.instanceGroupManagers.delete [DELETE]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)

+ Response 200

#### replicapool.instanceGroupManagers.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)

+ Response 200

### Resource /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances [/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances]

#### replicapool.instanceGroupManagers.deleteInstances [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "instances": {
                  "type": "array",
                  "description": "Names of instances to delete.\n\nExample: 'instance-foo', 'instance-bar'",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instanceGroupManagers [/replicapool/v1beta2/projects/{project}/zones/{zone}/instanceGroupManagers{?filter,maxResults,pageToken}]

#### replicapool.instanceGroupManagers.insert [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + size (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An Instance Group Manager resource.",
              "properties": {
                "autoHealingPolicies": {
                  "type": "array",
                  "description": "The autohealing policy for this managed instance group. You can specify only one value.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "healthCheck": {
                        "type": "string",
                        "description": "The URL for the HealthCheck that signals autohealing."
                      }
                    }
                  }
                },
                "baseInstanceName": {
                  "type": "string",
                  "description": "The base instance name to use for instances in this group. The value must be a valid RFC1035 name. Supported characters are lowercase letters, numbers, and hyphens (-). Instances are named by appending a hyphen and a random four-character string to the base instance name."
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output only] The time the instance group manager was created, in RFC3339 text format."
                },
                "currentSize": {
                  "type": "integer",
                  "description": "[Output only] The number of instances that currently exist and are a part of this group. This includes instances that are starting but are not yet RUNNING, and instances that are in the process of being deleted or abandoned.",
                  "format": "int32"
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the instance group manager."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "[Output only] Fingerprint of the instance group manager. This field is used for optimistic locking. An up-to-date fingerprint must be provided in order to modify the Instance Group Manager resource.",
                  "format": "byte"
                },
                "group": {
                  "type": "string",
                  "description": "[Output only] The full URL of the instance group created by the manager. This group contains all of the instances being managed, and cannot contain non-managed instances."
                },
                "id": {
                  "type": "string",
                  "description": "[Output only] A server-assigned unique identifier for the resource.",
                  "format": "uint64"
                },
                "instanceTemplate": {
                  "type": "string",
                  "description": "The full URL to an instance template from which all new instances will be created."
                },
                "kind": {
                  "type": "string",
                  "description": "[Output only] The resource type. Always replicapool#instanceGroupManager.",
                  "default": "replicapool#instanceGroupManager"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the instance group manager. Must be 1-63 characters long and comply with RFC1035. Supported characters include lowercase letters, numbers, and hyphens."
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output only] The fully qualified URL for this resource."
                },
                "targetPools": {
                  "type": "array",
                  "description": "The full URL of all target pools to which new instances in the group are added. Updating the target pool values does not affect existing instances.",
                  "items": {
                    "type": "string"
                  }
                },
                "targetSize": {
                  "type": "integer",
                  "description": "[Output only] The number of instances that the manager is attempting to maintain. Deleting or abandoning instances affects this number, as does resizing the group.",
                  "format": "int32"
                }
              }
            }

+ Response 200

#### replicapool.instanceGroupManagers.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances [/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances]

#### replicapool.instanceGroupManagers.recreateInstances [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "instances": {
                  "type": "array",
                  "description": "The names of one or more instances to recreate. For example:\n{ 'instances': [ 'instance-c3po', 'instance-r2d2' ] }",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize [/replicapool/v1beta2/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize{?size}]

#### replicapool.instanceGroupManagers.resize [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)
  
    + size (required)

+ Response 200

### Resource /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate [/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate]

#### replicapool.instanceGroupManagers.setInstanceTemplate [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "instanceTemplate": {
                  "type": "string",
                  "description": "The full URL to an Instance Template from which all new instances will be created."
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools [/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools]

#### replicapool.instanceGroupManagers.setTargetPools [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instanceGroupManager (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "fingerprint": {
                  "type": "string",
                  "description": "The current fingerprint of the Instance Group Manager resource. If this does not match the server-side fingerprint of the resource, then the request will be rejected.",
                  "format": "byte"
                },
                "targetPools": {
                  "type": "array",
                  "description": "A list of fully-qualified URLs to existing Target Pool resources. New instances in the Instance Group Manager will be added to the specified target pools; existing instances are not affected.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/operations/{operation} [/{project}/zones/{zone}/operations/{operation}]

#### replicapool.zoneOperations.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + operation (required)

+ Response 200

### Resource /{project}/zones/{zone}/operations [/replicapool/v1beta2/projects/{project}/zones/{zone}/operations{?filter,maxResults,pageToken}]

#### replicapool.zoneOperations.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

