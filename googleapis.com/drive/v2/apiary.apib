FORMAT: 1A

# Drive API

The API to interact with Drive.

### Resource /about [/drive/v2/about{?includeSubscribed,maxChangeIdCount,startChangeId}]

#### drive.about.get [GET]

+ Parameters

    + includeSubscribed
  
    + maxChangeIdCount
  
    + startChangeId

+ Response 200

### Resource /apps/{appId} [/apps/{appId}]

#### drive.apps.get [GET]

+ Parameters

    + appId (required)

+ Response 200

### Resource /apps [/drive/v2/apps{?appFilterExtensions,appFilterMimeTypes,languageCode}]

#### drive.apps.list [GET]

+ Parameters

    + appFilterExtensions
  
    + appFilterMimeTypes
  
    + languageCode

+ Response 200

### Resource /changes/{changeId} [/changes/{changeId}]

#### drive.changes.get [GET]

+ Parameters

    + changeId (required)

+ Response 200

### Resource /changes [/drive/v2/changes{?includeDeleted,includeSubscribed,maxResults,pageToken,spaces,startChangeId}]

#### drive.changes.list [GET]

+ Parameters

    + includeDeleted
  
    + includeSubscribed
  
    + maxResults
  
    + pageToken
  
    + spaces
  
    + startChangeId

+ Response 200

### Resource /changes/watch [/drive/v2/changes/watch{?includeDeleted,includeSubscribed,maxResults,pageToken,spaces,startChangeId}]

#### drive.changes.watch [POST]

+ Parameters

    + includeDeleted
  
    + includeSubscribed
  
    + maxResults
  
    + pageToken
  
    + spaces
  
    + startChangeId

+ Request

    + Schema

            {
              "type": "object",
              "description": "An notification channel used to watch for resource changes.",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The address where notifications are delivered for this channel."
                },
                "expiration": {
                  "type": "string",
                  "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "A UUID or similar unique string that identifies this channel."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
                  "default": "api#channel"
                },
                "params": {
                  "type": "object",
                  "description": "Additional parameters controlling delivery channel behavior. Optional.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Declares a new parameter by name."
                  }
                },
                "payload": {
                  "type": "boolean",
                  "description": "A Boolean value to indicate whether payload is wanted. Optional."
                },
                "resourceId": {
                  "type": "string",
                  "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
                },
                "resourceUri": {
                  "type": "string",
                  "description": "A version-specific identifier for the watched resource."
                },
                "token": {
                  "type": "string",
                  "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
                },
                "type": {
                  "type": "string",
                  "description": "The type of delivery mechanism used for this channel."
                }
              }
            }

+ Response 200

### Resource /channels/stop [/channels/stop]

#### drive.channels.stop [POST]

+ Request

    + Schema

            {
              "type": "object",
              "description": "An notification channel used to watch for resource changes.",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The address where notifications are delivered for this channel."
                },
                "expiration": {
                  "type": "string",
                  "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "A UUID or similar unique string that identifies this channel."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
                  "default": "api#channel"
                },
                "params": {
                  "type": "object",
                  "description": "Additional parameters controlling delivery channel behavior. Optional.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Declares a new parameter by name."
                  }
                },
                "payload": {
                  "type": "boolean",
                  "description": "A Boolean value to indicate whether payload is wanted. Optional."
                },
                "resourceId": {
                  "type": "string",
                  "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
                },
                "resourceUri": {
                  "type": "string",
                  "description": "A version-specific identifier for the watched resource."
                },
                "token": {
                  "type": "string",
                  "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
                },
                "type": {
                  "type": "string",
                  "description": "The type of delivery mechanism used for this channel."
                }
              }
            }

+ Response 200

### Resource /files/{folderId}/children/{childId} [/files/{folderId}/children/{childId}]

#### drive.children.delete [DELETE]

+ Parameters

    + folderId (required)
  
    + childId (required)

+ Response 200

#### drive.children.get [GET]

+ Parameters

    + folderId (required)
  
    + childId (required)

+ Response 200

### Resource /files/{folderId}/children [/drive/v2/files/{folderId}/children{?maxResults,pageToken,q}]

#### drive.children.insert [POST]

+ Parameters

    + folderId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A reference to a folder's child.",
              "properties": {
                "childLink": {
                  "type": "string",
                  "description": "A link to the child."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the child."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#childReference.",
                  "default": "drive#childReference"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this reference."
                }
              }
            }

+ Response 200

#### drive.children.list [GET]

+ Parameters

    + folderId (required)
  
    + maxResults
  
    + pageToken
  
    + q

+ Response 200

### Resource /files/{fileId}/comments/{commentId} [/files/{fileId}/comments/{commentId}]

#### drive.comments.delete [DELETE]

+ Parameters

    + fileId (required)
  
    + commentId (required)

+ Response 200

#### drive.comments.get [GET]

+ Parameters

    + fileId (required)
  
    + commentId (required)
  
    + includeDeleted

+ Response 200

#### drive.comments.patch [PATCH]

+ Parameters

    + fileId (required)
  
    + commentId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A JSON representation of a comment on a file in Google Drive.",
              "properties": {
                "anchor": {
                  "type": "string",
                  "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
                },
                "author": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "commentId": {
                  "type": "string",
                  "description": "The ID of the comment."
                },
                "content": {
                  "type": "string",
                  "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content."
                },
                "context": {
                  "type": "object",
                  "description": "The context of the file which is being commented on.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The MIME type of the context snippet."
                    },
                    "value": {
                      "type": "string",
                      "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
                    }
                  }
                },
                "createdDate": {
                  "type": "string",
                  "description": "The date when this comment was first created.",
                  "format": "date-time"
                },
                "deleted": {
                  "type": "boolean",
                  "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
                },
                "fileId": {
                  "type": "string",
                  "description": "The file which this comment is addressing."
                },
                "fileTitle": {
                  "type": "string",
                  "description": "The title of the file which this comment is addressing."
                },
                "htmlContent": {
                  "type": "string",
                  "description": "HTML formatted content for this comment."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#comment.",
                  "default": "drive#comment"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "The date when this comment or any of its replies were last modified.",
                  "format": "date-time"
                },
                "replies": {
                  "type": "array",
                  "description": "Replies to this post.",
                  "items": {
                    "type": "object",
                    "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
                    "properties": {
                      "author": {
                        "type": "object",
                        "description": "The JSON template for a user.",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "A plain text displayable name for this user."
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "The email address of the user."
                          },
                          "isAuthenticatedUser": {
                            "type": "boolean",
                            "description": "Whether this user is the same as the authenticated user for whom the request was made."
                          },
                          "kind": {
                            "type": "string",
                            "description": "This is always drive#user.",
                            "default": "drive#user"
                          },
                          "permissionId": {
                            "type": "string",
                            "description": "The user's ID as visible in the permissions collection."
                          },
                          "picture": {
                            "type": "object",
                            "description": "The user's profile picture.",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "A URL that points to a profile picture of this user."
                              }
                            }
                          }
                        }
                      },
                      "content": {
                        "type": "string",
                        "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
                      },
                      "createdDate": {
                        "type": "string",
                        "description": "The date when this reply was first created.",
                        "format": "date-time"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
                      },
                      "htmlContent": {
                        "type": "string",
                        "description": "HTML formatted content for this reply."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#commentReply.",
                        "default": "drive#commentReply"
                      },
                      "modifiedDate": {
                        "type": "string",
                        "description": "The date when this reply was last modified.",
                        "format": "date-time"
                      },
                      "replyId": {
                        "type": "string",
                        "description": "The ID of the reply."
                      },
                      "verb": {
                        "type": "string",
                        "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
                      }
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this comment."
                },
                "status": {
                  "type": "string",
                  "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
                }
              }
            }

+ Response 200

#### drive.comments.update [PUT]

+ Parameters

    + fileId (required)
  
    + commentId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A JSON representation of a comment on a file in Google Drive.",
              "properties": {
                "anchor": {
                  "type": "string",
                  "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
                },
                "author": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "commentId": {
                  "type": "string",
                  "description": "The ID of the comment."
                },
                "content": {
                  "type": "string",
                  "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content."
                },
                "context": {
                  "type": "object",
                  "description": "The context of the file which is being commented on.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The MIME type of the context snippet."
                    },
                    "value": {
                      "type": "string",
                      "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
                    }
                  }
                },
                "createdDate": {
                  "type": "string",
                  "description": "The date when this comment was first created.",
                  "format": "date-time"
                },
                "deleted": {
                  "type": "boolean",
                  "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
                },
                "fileId": {
                  "type": "string",
                  "description": "The file which this comment is addressing."
                },
                "fileTitle": {
                  "type": "string",
                  "description": "The title of the file which this comment is addressing."
                },
                "htmlContent": {
                  "type": "string",
                  "description": "HTML formatted content for this comment."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#comment.",
                  "default": "drive#comment"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "The date when this comment or any of its replies were last modified.",
                  "format": "date-time"
                },
                "replies": {
                  "type": "array",
                  "description": "Replies to this post.",
                  "items": {
                    "type": "object",
                    "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
                    "properties": {
                      "author": {
                        "type": "object",
                        "description": "The JSON template for a user.",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "A plain text displayable name for this user."
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "The email address of the user."
                          },
                          "isAuthenticatedUser": {
                            "type": "boolean",
                            "description": "Whether this user is the same as the authenticated user for whom the request was made."
                          },
                          "kind": {
                            "type": "string",
                            "description": "This is always drive#user.",
                            "default": "drive#user"
                          },
                          "permissionId": {
                            "type": "string",
                            "description": "The user's ID as visible in the permissions collection."
                          },
                          "picture": {
                            "type": "object",
                            "description": "The user's profile picture.",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "A URL that points to a profile picture of this user."
                              }
                            }
                          }
                        }
                      },
                      "content": {
                        "type": "string",
                        "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
                      },
                      "createdDate": {
                        "type": "string",
                        "description": "The date when this reply was first created.",
                        "format": "date-time"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
                      },
                      "htmlContent": {
                        "type": "string",
                        "description": "HTML formatted content for this reply."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#commentReply.",
                        "default": "drive#commentReply"
                      },
                      "modifiedDate": {
                        "type": "string",
                        "description": "The date when this reply was last modified.",
                        "format": "date-time"
                      },
                      "replyId": {
                        "type": "string",
                        "description": "The ID of the reply."
                      },
                      "verb": {
                        "type": "string",
                        "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
                      }
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this comment."
                },
                "status": {
                  "type": "string",
                  "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
                }
              }
            }

+ Response 200

### Resource /files/{fileId}/comments [/drive/v2/files/{fileId}/comments{?includeDeleted,maxResults,pageToken,updatedMin}]

#### drive.comments.insert [POST]

+ Parameters

    + fileId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A JSON representation of a comment on a file in Google Drive.",
              "properties": {
                "anchor": {
                  "type": "string",
                  "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
                },
                "author": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "commentId": {
                  "type": "string",
                  "description": "The ID of the comment."
                },
                "content": {
                  "type": "string",
                  "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content."
                },
                "context": {
                  "type": "object",
                  "description": "The context of the file which is being commented on.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The MIME type of the context snippet."
                    },
                    "value": {
                      "type": "string",
                      "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
                    }
                  }
                },
                "createdDate": {
                  "type": "string",
                  "description": "The date when this comment was first created.",
                  "format": "date-time"
                },
                "deleted": {
                  "type": "boolean",
                  "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
                },
                "fileId": {
                  "type": "string",
                  "description": "The file which this comment is addressing."
                },
                "fileTitle": {
                  "type": "string",
                  "description": "The title of the file which this comment is addressing."
                },
                "htmlContent": {
                  "type": "string",
                  "description": "HTML formatted content for this comment."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#comment.",
                  "default": "drive#comment"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "The date when this comment or any of its replies were last modified.",
                  "format": "date-time"
                },
                "replies": {
                  "type": "array",
                  "description": "Replies to this post.",
                  "items": {
                    "type": "object",
                    "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
                    "properties": {
                      "author": {
                        "type": "object",
                        "description": "The JSON template for a user.",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "A plain text displayable name for this user."
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "The email address of the user."
                          },
                          "isAuthenticatedUser": {
                            "type": "boolean",
                            "description": "Whether this user is the same as the authenticated user for whom the request was made."
                          },
                          "kind": {
                            "type": "string",
                            "description": "This is always drive#user.",
                            "default": "drive#user"
                          },
                          "permissionId": {
                            "type": "string",
                            "description": "The user's ID as visible in the permissions collection."
                          },
                          "picture": {
                            "type": "object",
                            "description": "The user's profile picture.",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "A URL that points to a profile picture of this user."
                              }
                            }
                          }
                        }
                      },
                      "content": {
                        "type": "string",
                        "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
                      },
                      "createdDate": {
                        "type": "string",
                        "description": "The date when this reply was first created.",
                        "format": "date-time"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
                      },
                      "htmlContent": {
                        "type": "string",
                        "description": "HTML formatted content for this reply."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#commentReply.",
                        "default": "drive#commentReply"
                      },
                      "modifiedDate": {
                        "type": "string",
                        "description": "The date when this reply was last modified.",
                        "format": "date-time"
                      },
                      "replyId": {
                        "type": "string",
                        "description": "The ID of the reply."
                      },
                      "verb": {
                        "type": "string",
                        "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
                      }
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this comment."
                },
                "status": {
                  "type": "string",
                  "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
                }
              }
            }

+ Response 200

#### drive.comments.list [GET]

+ Parameters

    + fileId (required)
  
    + includeDeleted
  
    + maxResults
  
    + pageToken
  
    + updatedMin

+ Response 200

### Resource /files/{fileId}/copy [/drive/v2/files/{fileId}/copy{?convert,ocr,ocrLanguage,pinned,timedTextLanguage,timedTextTrackName,visibility}]

#### drive.files.copy [POST]

+ Parameters

    + fileId (required)
  
    + convert
  
    + ocr
  
    + ocrLanguage
  
    + pinned
  
    + timedTextLanguage
  
    + timedTextTrackName
  
    + visibility

+ Request

    + Schema

            {
              "type": "object",
              "description": "The metadata for a file.",
              "properties": {
                "alternateLink": {
                  "type": "string",
                  "description": "A link for opening the file in a relevant Google editor or viewer."
                },
                "appDataContents": {
                  "type": "boolean",
                  "description": "Whether this file is in the Application Data folder."
                },
                "copyable": {
                  "type": "boolean",
                  "description": "Whether the file can be copied by the current user."
                },
                "createdDate": {
                  "type": "string",
                  "description": "Create time for this file (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "defaultOpenWithLink": {
                  "type": "string",
                  "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the file."
                },
                "downloadUrl": {
                  "type": "string",
                  "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
                },
                "editable": {
                  "type": "boolean",
                  "description": "Whether the file can be edited by the current user."
                },
                "embedLink": {
                  "type": "string",
                  "description": "A link for embedding the file."
                },
                "etag": {
                  "type": "string",
                  "description": "ETag of the file."
                },
                "explicitlyTrashed": {
                  "type": "boolean",
                  "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
                },
                "exportLinks": {
                  "type": "object",
                  "description": "Links for exporting Google Docs to specific formats.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "A mapping from export format to URL"
                  }
                },
                "fileExtension": {
                  "type": "string",
                  "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
                },
                "fileSize": {
                  "type": "string",
                  "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
                  "format": "int64"
                },
                "folderColorRgb": {
                  "type": "string",
                  "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
                },
                "headRevisionId": {
                  "type": "string",
                  "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
                },
                "iconLink": {
                  "type": "string",
                  "description": "A link to the file's icon."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the file."
                },
                "imageMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
                  "properties": {
                    "aperture": {
                      "type": "number",
                      "description": "The aperture used to create the photo (f-number).",
                      "format": "float"
                    },
                    "cameraMake": {
                      "type": "string",
                      "description": "The make of the camera used to create the photo."
                    },
                    "cameraModel": {
                      "type": "string",
                      "description": "The model of the camera used to create the photo."
                    },
                    "colorSpace": {
                      "type": "string",
                      "description": "The color space of the photo."
                    },
                    "date": {
                      "type": "string",
                      "description": "The date and time the photo was taken (EXIF format timestamp)."
                    },
                    "exposureBias": {
                      "type": "number",
                      "description": "The exposure bias of the photo (APEX value).",
                      "format": "float"
                    },
                    "exposureMode": {
                      "type": "string",
                      "description": "The exposure mode used to create the photo."
                    },
                    "exposureTime": {
                      "type": "number",
                      "description": "The length of the exposure, in seconds.",
                      "format": "float"
                    },
                    "flashUsed": {
                      "type": "boolean",
                      "description": "Whether a flash was used to create the photo."
                    },
                    "focalLength": {
                      "type": "number",
                      "description": "The focal length used to create the photo, in millimeters.",
                      "format": "float"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the image in pixels.",
                      "format": "int32"
                    },
                    "isoSpeed": {
                      "type": "integer",
                      "description": "The ISO speed used to create the photo.",
                      "format": "int32"
                    },
                    "lens": {
                      "type": "string",
                      "description": "The lens used to create the photo."
                    },
                    "location": {
                      "type": "object",
                      "description": "Geographic location information stored in the image.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "The altitude stored in the image.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "The latitude stored in the image.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "The longitude stored in the image.",
                          "format": "double"
                        }
                      }
                    },
                    "maxApertureValue": {
                      "type": "number",
                      "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
                      "format": "float"
                    },
                    "meteringMode": {
                      "type": "string",
                      "description": "The metering mode used to create the photo."
                    },
                    "rotation": {
                      "type": "integer",
                      "description": "The rotation in clockwise degrees from the image's original orientation.",
                      "format": "int32"
                    },
                    "sensor": {
                      "type": "string",
                      "description": "The type of sensor used to create the photo."
                    },
                    "subjectDistance": {
                      "type": "integer",
                      "description": "The distance to the subject of the photo, in meters.",
                      "format": "int32"
                    },
                    "whiteBalance": {
                      "type": "string",
                      "description": "The white balance mode used to create the photo."
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the image in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "indexableText": {
                  "type": "object",
                  "description": "Indexable text attributes for the file (can only be written)",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "The text to be indexed for this file."
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "The type of file. This is always drive#file.",
                  "default": "drive#file"
                },
                "labels": {
                  "type": "object",
                  "description": "A group of labels for the file.",
                  "properties": {
                    "hidden": {
                      "type": "boolean",
                      "description": "Deprecated."
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Whether viewers are prevented from downloading this file."
                    },
                    "starred": {
                      "type": "boolean",
                      "description": "Whether this file is starred by the user."
                    },
                    "trashed": {
                      "type": "boolean",
                      "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
                    },
                    "viewed": {
                      "type": "boolean",
                      "description": "Whether this file has been viewed by this user."
                    }
                  }
                },
                "lastModifyingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "lastModifyingUserName": {
                  "type": "string",
                  "description": "Name of the last user to modify this file."
                },
                "lastViewedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "markedViewedByMeDate": {
                  "type": "string",
                  "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "md5Checksum": {
                  "type": "string",
                  "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
                },
                "mimeType": {
                  "type": "string",
                  "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
                },
                "modifiedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
                  "format": "date-time"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
                  "format": "date-time"
                },
                "openWithLinks": {
                  "type": "object",
                  "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "originalFilename": {
                  "type": "string",
                  "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
                },
                "ownerNames": {
                  "type": "array",
                  "description": "Name(s) of the owner(s) of this file.",
                  "items": {
                    "type": "string"
                  }
                },
                "owners": {
                  "type": "array",
                  "description": "The owner(s) of this file.",
                  "items": {
                    "type": "object",
                    "description": "The JSON template for a user.",
                    "properties": {
                      "displayName": {
                        "type": "string",
                        "description": "A plain text displayable name for this user."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user."
                      },
                      "isAuthenticatedUser": {
                        "type": "boolean",
                        "description": "Whether this user is the same as the authenticated user for whom the request was made."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#user.",
                        "default": "drive#user"
                      },
                      "permissionId": {
                        "type": "string",
                        "description": "The user's ID as visible in the permissions collection."
                      },
                      "picture": {
                        "type": "object",
                        "description": "The user's profile picture.",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "A URL that points to a profile picture of this user."
                          }
                        }
                      }
                    }
                  }
                },
                "parents": {
                  "type": "array",
                  "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
                  "items": {
                    "type": "object",
                    "description": "A reference to a file's parent.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the parent."
                      },
                      "isRoot": {
                        "type": "boolean",
                        "description": "Whether or not the parent is the root folder."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#parentReference.",
                        "default": "drive#parentReference"
                      },
                      "parentLink": {
                        "type": "string",
                        "description": "A link to the parent."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this reference."
                      }
                    }
                  }
                },
                "permissions": {
                  "type": "array",
                  "description": "The list of permissions for users with access to this file.",
                  "items": {
                    "type": "object",
                    "description": "A permission for a file.",
                    "properties": {
                      "additionalRoles": {
                        "type": "array",
                        "description": "Additional roles for this user. Only commenter is currently allowed.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "authKey": {
                        "type": "string",
                        "description": "The authkey parameter required for this permission."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                      },
                      "etag": {
                        "type": "string",
                        "description": "The ETag of the permission."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#permission.",
                        "default": "drive#permission"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name for this permission."
                      },
                      "photoLink": {
                        "type": "string",
                        "description": "A link to the profile photo, if available."
                      },
                      "role": {
                        "type": "string",
                        "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this permission."
                      },
                      "type": {
                        "type": "string",
                        "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                      },
                      "value": {
                        "type": "string",
                        "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "withLink": {
                        "type": "boolean",
                        "description": "Whether the link is required for this permission."
                      }
                    }
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "The list of properties.",
                  "items": {
                    "type": "object",
                    "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "ETag of the property."
                      },
                      "key": {
                        "type": "string",
                        "description": "The key of this property."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#property.",
                        "default": "drive#property"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link back to this property."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of this property."
                      },
                      "visibility": {
                        "type": "string",
                        "description": "The visibility of this property."
                      }
                    }
                  }
                },
                "quotaBytesUsed": {
                  "type": "string",
                  "description": "The number of quota bytes used by this file.",
                  "format": "int64"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this file."
                },
                "shared": {
                  "type": "boolean",
                  "description": "Whether the file has been shared."
                },
                "sharedWithMeDate": {
                  "type": "string",
                  "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "sharingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "spaces": {
                  "type": "array",
                  "description": "The list of spaces which contain the file. Supported values are 'drive' and 'appDataFolder'.",
                  "items": {
                    "type": "string"
                  }
                },
                "thumbnail": {
                  "type": "object",
                  "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
                  "properties": {
                    "image": {
                      "type": "string",
                      "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
                      "format": "byte"
                    },
                    "mimeType": {
                      "type": "string",
                      "description": "The MIME type of the thumbnail."
                    }
                  }
                },
                "thumbnailLink": {
                  "type": "string",
                  "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
                },
                "title": {
                  "type": "string",
                  "description": "The title of this file."
                },
                "userPermission": {
                  "type": "object",
                  "description": "A permission for a file.",
                  "properties": {
                    "additionalRoles": {
                      "type": "array",
                      "description": "Additional roles for this user. Only commenter is currently allowed.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "authKey": {
                      "type": "string",
                      "description": "The authkey parameter required for this permission."
                    },
                    "domain": {
                      "type": "string",
                      "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                    },
                    "etag": {
                      "type": "string",
                      "description": "The ETag of the permission."
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#permission.",
                      "default": "drive#permission"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name for this permission."
                    },
                    "photoLink": {
                      "type": "string",
                      "description": "A link to the profile photo, if available."
                    },
                    "role": {
                      "type": "string",
                      "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                    },
                    "selfLink": {
                      "type": "string",
                      "description": "A link back to this permission."
                    },
                    "type": {
                      "type": "string",
                      "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                    },
                    "value": {
                      "type": "string",
                      "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "withLink": {
                      "type": "boolean",
                      "description": "Whether the link is required for this permission."
                    }
                  }
                },
                "version": {
                  "type": "string",
                  "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
                  "format": "int64"
                },
                "videoMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about video media. This will only be present for video types.",
                  "properties": {
                    "durationMillis": {
                      "type": "string",
                      "description": "The duration of the video in milliseconds.",
                      "format": "int64"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the video in pixels.",
                      "format": "int32"
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the video in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "webContentLink": {
                  "type": "string",
                  "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
                },
                "webViewLink": {
                  "type": "string",
                  "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
                },
                "writersCanShare": {
                  "type": "boolean",
                  "description": "Whether writers can share the document with other users."
                }
              }
            }

+ Response 200

### Resource /files/{fileId} [/drive/v2/files/{fileId}{?addParents,convert,newRevision,ocr,ocrLanguage,pinned,removeParents,setModifiedDate,timedTextLanguage,timedTextTrackName,updateViewedDate,useContentAsIndexableText}]

#### drive.files.delete [DELETE]

+ Parameters

    + fileId (required)

+ Response 200

#### drive.files.get [GET]

+ Parameters

    + fileId (required)
  
    + acknowledgeAbuse
  
    + projection
  
    + revisionId
  
    + updateViewedDate

+ Response 200

#### drive.files.patch [PATCH]

+ Parameters

    + fileId (required)
  
    + addParents
  
    + convert
  
    + newRevision
  
    + ocr
  
    + ocrLanguage
  
    + pinned
  
    + removeParents
  
    + setModifiedDate
  
    + timedTextLanguage
  
    + timedTextTrackName
  
    + updateViewedDate
  
    + useContentAsIndexableText

+ Request

    + Schema

            {
              "type": "object",
              "description": "The metadata for a file.",
              "properties": {
                "alternateLink": {
                  "type": "string",
                  "description": "A link for opening the file in a relevant Google editor or viewer."
                },
                "appDataContents": {
                  "type": "boolean",
                  "description": "Whether this file is in the Application Data folder."
                },
                "copyable": {
                  "type": "boolean",
                  "description": "Whether the file can be copied by the current user."
                },
                "createdDate": {
                  "type": "string",
                  "description": "Create time for this file (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "defaultOpenWithLink": {
                  "type": "string",
                  "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the file."
                },
                "downloadUrl": {
                  "type": "string",
                  "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
                },
                "editable": {
                  "type": "boolean",
                  "description": "Whether the file can be edited by the current user."
                },
                "embedLink": {
                  "type": "string",
                  "description": "A link for embedding the file."
                },
                "etag": {
                  "type": "string",
                  "description": "ETag of the file."
                },
                "explicitlyTrashed": {
                  "type": "boolean",
                  "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
                },
                "exportLinks": {
                  "type": "object",
                  "description": "Links for exporting Google Docs to specific formats.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "A mapping from export format to URL"
                  }
                },
                "fileExtension": {
                  "type": "string",
                  "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
                },
                "fileSize": {
                  "type": "string",
                  "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
                  "format": "int64"
                },
                "folderColorRgb": {
                  "type": "string",
                  "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
                },
                "headRevisionId": {
                  "type": "string",
                  "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
                },
                "iconLink": {
                  "type": "string",
                  "description": "A link to the file's icon."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the file."
                },
                "imageMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
                  "properties": {
                    "aperture": {
                      "type": "number",
                      "description": "The aperture used to create the photo (f-number).",
                      "format": "float"
                    },
                    "cameraMake": {
                      "type": "string",
                      "description": "The make of the camera used to create the photo."
                    },
                    "cameraModel": {
                      "type": "string",
                      "description": "The model of the camera used to create the photo."
                    },
                    "colorSpace": {
                      "type": "string",
                      "description": "The color space of the photo."
                    },
                    "date": {
                      "type": "string",
                      "description": "The date and time the photo was taken (EXIF format timestamp)."
                    },
                    "exposureBias": {
                      "type": "number",
                      "description": "The exposure bias of the photo (APEX value).",
                      "format": "float"
                    },
                    "exposureMode": {
                      "type": "string",
                      "description": "The exposure mode used to create the photo."
                    },
                    "exposureTime": {
                      "type": "number",
                      "description": "The length of the exposure, in seconds.",
                      "format": "float"
                    },
                    "flashUsed": {
                      "type": "boolean",
                      "description": "Whether a flash was used to create the photo."
                    },
                    "focalLength": {
                      "type": "number",
                      "description": "The focal length used to create the photo, in millimeters.",
                      "format": "float"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the image in pixels.",
                      "format": "int32"
                    },
                    "isoSpeed": {
                      "type": "integer",
                      "description": "The ISO speed used to create the photo.",
                      "format": "int32"
                    },
                    "lens": {
                      "type": "string",
                      "description": "The lens used to create the photo."
                    },
                    "location": {
                      "type": "object",
                      "description": "Geographic location information stored in the image.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "The altitude stored in the image.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "The latitude stored in the image.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "The longitude stored in the image.",
                          "format": "double"
                        }
                      }
                    },
                    "maxApertureValue": {
                      "type": "number",
                      "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
                      "format": "float"
                    },
                    "meteringMode": {
                      "type": "string",
                      "description": "The metering mode used to create the photo."
                    },
                    "rotation": {
                      "type": "integer",
                      "description": "The rotation in clockwise degrees from the image's original orientation.",
                      "format": "int32"
                    },
                    "sensor": {
                      "type": "string",
                      "description": "The type of sensor used to create the photo."
                    },
                    "subjectDistance": {
                      "type": "integer",
                      "description": "The distance to the subject of the photo, in meters.",
                      "format": "int32"
                    },
                    "whiteBalance": {
                      "type": "string",
                      "description": "The white balance mode used to create the photo."
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the image in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "indexableText": {
                  "type": "object",
                  "description": "Indexable text attributes for the file (can only be written)",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "The text to be indexed for this file."
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "The type of file. This is always drive#file.",
                  "default": "drive#file"
                },
                "labels": {
                  "type": "object",
                  "description": "A group of labels for the file.",
                  "properties": {
                    "hidden": {
                      "type": "boolean",
                      "description": "Deprecated."
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Whether viewers are prevented from downloading this file."
                    },
                    "starred": {
                      "type": "boolean",
                      "description": "Whether this file is starred by the user."
                    },
                    "trashed": {
                      "type": "boolean",
                      "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
                    },
                    "viewed": {
                      "type": "boolean",
                      "description": "Whether this file has been viewed by this user."
                    }
                  }
                },
                "lastModifyingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "lastModifyingUserName": {
                  "type": "string",
                  "description": "Name of the last user to modify this file."
                },
                "lastViewedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "markedViewedByMeDate": {
                  "type": "string",
                  "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "md5Checksum": {
                  "type": "string",
                  "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
                },
                "mimeType": {
                  "type": "string",
                  "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
                },
                "modifiedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
                  "format": "date-time"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
                  "format": "date-time"
                },
                "openWithLinks": {
                  "type": "object",
                  "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "originalFilename": {
                  "type": "string",
                  "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
                },
                "ownerNames": {
                  "type": "array",
                  "description": "Name(s) of the owner(s) of this file.",
                  "items": {
                    "type": "string"
                  }
                },
                "owners": {
                  "type": "array",
                  "description": "The owner(s) of this file.",
                  "items": {
                    "type": "object",
                    "description": "The JSON template for a user.",
                    "properties": {
                      "displayName": {
                        "type": "string",
                        "description": "A plain text displayable name for this user."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user."
                      },
                      "isAuthenticatedUser": {
                        "type": "boolean",
                        "description": "Whether this user is the same as the authenticated user for whom the request was made."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#user.",
                        "default": "drive#user"
                      },
                      "permissionId": {
                        "type": "string",
                        "description": "The user's ID as visible in the permissions collection."
                      },
                      "picture": {
                        "type": "object",
                        "description": "The user's profile picture.",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "A URL that points to a profile picture of this user."
                          }
                        }
                      }
                    }
                  }
                },
                "parents": {
                  "type": "array",
                  "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
                  "items": {
                    "type": "object",
                    "description": "A reference to a file's parent.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the parent."
                      },
                      "isRoot": {
                        "type": "boolean",
                        "description": "Whether or not the parent is the root folder."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#parentReference.",
                        "default": "drive#parentReference"
                      },
                      "parentLink": {
                        "type": "string",
                        "description": "A link to the parent."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this reference."
                      }
                    }
                  }
                },
                "permissions": {
                  "type": "array",
                  "description": "The list of permissions for users with access to this file.",
                  "items": {
                    "type": "object",
                    "description": "A permission for a file.",
                    "properties": {
                      "additionalRoles": {
                        "type": "array",
                        "description": "Additional roles for this user. Only commenter is currently allowed.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "authKey": {
                        "type": "string",
                        "description": "The authkey parameter required for this permission."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                      },
                      "etag": {
                        "type": "string",
                        "description": "The ETag of the permission."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#permission.",
                        "default": "drive#permission"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name for this permission."
                      },
                      "photoLink": {
                        "type": "string",
                        "description": "A link to the profile photo, if available."
                      },
                      "role": {
                        "type": "string",
                        "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this permission."
                      },
                      "type": {
                        "type": "string",
                        "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                      },
                      "value": {
                        "type": "string",
                        "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "withLink": {
                        "type": "boolean",
                        "description": "Whether the link is required for this permission."
                      }
                    }
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "The list of properties.",
                  "items": {
                    "type": "object",
                    "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "ETag of the property."
                      },
                      "key": {
                        "type": "string",
                        "description": "The key of this property."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#property.",
                        "default": "drive#property"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link back to this property."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of this property."
                      },
                      "visibility": {
                        "type": "string",
                        "description": "The visibility of this property."
                      }
                    }
                  }
                },
                "quotaBytesUsed": {
                  "type": "string",
                  "description": "The number of quota bytes used by this file.",
                  "format": "int64"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this file."
                },
                "shared": {
                  "type": "boolean",
                  "description": "Whether the file has been shared."
                },
                "sharedWithMeDate": {
                  "type": "string",
                  "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "sharingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "spaces": {
                  "type": "array",
                  "description": "The list of spaces which contain the file. Supported values are 'drive' and 'appDataFolder'.",
                  "items": {
                    "type": "string"
                  }
                },
                "thumbnail": {
                  "type": "object",
                  "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
                  "properties": {
                    "image": {
                      "type": "string",
                      "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
                      "format": "byte"
                    },
                    "mimeType": {
                      "type": "string",
                      "description": "The MIME type of the thumbnail."
                    }
                  }
                },
                "thumbnailLink": {
                  "type": "string",
                  "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
                },
                "title": {
                  "type": "string",
                  "description": "The title of this file."
                },
                "userPermission": {
                  "type": "object",
                  "description": "A permission for a file.",
                  "properties": {
                    "additionalRoles": {
                      "type": "array",
                      "description": "Additional roles for this user. Only commenter is currently allowed.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "authKey": {
                      "type": "string",
                      "description": "The authkey parameter required for this permission."
                    },
                    "domain": {
                      "type": "string",
                      "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                    },
                    "etag": {
                      "type": "string",
                      "description": "The ETag of the permission."
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#permission.",
                      "default": "drive#permission"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name for this permission."
                    },
                    "photoLink": {
                      "type": "string",
                      "description": "A link to the profile photo, if available."
                    },
                    "role": {
                      "type": "string",
                      "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                    },
                    "selfLink": {
                      "type": "string",
                      "description": "A link back to this permission."
                    },
                    "type": {
                      "type": "string",
                      "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                    },
                    "value": {
                      "type": "string",
                      "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "withLink": {
                      "type": "boolean",
                      "description": "Whether the link is required for this permission."
                    }
                  }
                },
                "version": {
                  "type": "string",
                  "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
                  "format": "int64"
                },
                "videoMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about video media. This will only be present for video types.",
                  "properties": {
                    "durationMillis": {
                      "type": "string",
                      "description": "The duration of the video in milliseconds.",
                      "format": "int64"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the video in pixels.",
                      "format": "int32"
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the video in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "webContentLink": {
                  "type": "string",
                  "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
                },
                "webViewLink": {
                  "type": "string",
                  "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
                },
                "writersCanShare": {
                  "type": "boolean",
                  "description": "Whether writers can share the document with other users."
                }
              }
            }

+ Response 200

#### drive.files.update [PUT]

+ Parameters

    + fileId (required)
  
    + addParents
  
    + convert
  
    + newRevision
  
    + ocr
  
    + ocrLanguage
  
    + pinned
  
    + removeParents
  
    + setModifiedDate
  
    + timedTextLanguage
  
    + timedTextTrackName
  
    + updateViewedDate
  
    + useContentAsIndexableText

+ Request

    + Schema

            {
              "type": "object",
              "description": "The metadata for a file.",
              "properties": {
                "alternateLink": {
                  "type": "string",
                  "description": "A link for opening the file in a relevant Google editor or viewer."
                },
                "appDataContents": {
                  "type": "boolean",
                  "description": "Whether this file is in the Application Data folder."
                },
                "copyable": {
                  "type": "boolean",
                  "description": "Whether the file can be copied by the current user."
                },
                "createdDate": {
                  "type": "string",
                  "description": "Create time for this file (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "defaultOpenWithLink": {
                  "type": "string",
                  "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the file."
                },
                "downloadUrl": {
                  "type": "string",
                  "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
                },
                "editable": {
                  "type": "boolean",
                  "description": "Whether the file can be edited by the current user."
                },
                "embedLink": {
                  "type": "string",
                  "description": "A link for embedding the file."
                },
                "etag": {
                  "type": "string",
                  "description": "ETag of the file."
                },
                "explicitlyTrashed": {
                  "type": "boolean",
                  "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
                },
                "exportLinks": {
                  "type": "object",
                  "description": "Links for exporting Google Docs to specific formats.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "A mapping from export format to URL"
                  }
                },
                "fileExtension": {
                  "type": "string",
                  "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
                },
                "fileSize": {
                  "type": "string",
                  "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
                  "format": "int64"
                },
                "folderColorRgb": {
                  "type": "string",
                  "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
                },
                "headRevisionId": {
                  "type": "string",
                  "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
                },
                "iconLink": {
                  "type": "string",
                  "description": "A link to the file's icon."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the file."
                },
                "imageMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
                  "properties": {
                    "aperture": {
                      "type": "number",
                      "description": "The aperture used to create the photo (f-number).",
                      "format": "float"
                    },
                    "cameraMake": {
                      "type": "string",
                      "description": "The make of the camera used to create the photo."
                    },
                    "cameraModel": {
                      "type": "string",
                      "description": "The model of the camera used to create the photo."
                    },
                    "colorSpace": {
                      "type": "string",
                      "description": "The color space of the photo."
                    },
                    "date": {
                      "type": "string",
                      "description": "The date and time the photo was taken (EXIF format timestamp)."
                    },
                    "exposureBias": {
                      "type": "number",
                      "description": "The exposure bias of the photo (APEX value).",
                      "format": "float"
                    },
                    "exposureMode": {
                      "type": "string",
                      "description": "The exposure mode used to create the photo."
                    },
                    "exposureTime": {
                      "type": "number",
                      "description": "The length of the exposure, in seconds.",
                      "format": "float"
                    },
                    "flashUsed": {
                      "type": "boolean",
                      "description": "Whether a flash was used to create the photo."
                    },
                    "focalLength": {
                      "type": "number",
                      "description": "The focal length used to create the photo, in millimeters.",
                      "format": "float"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the image in pixels.",
                      "format": "int32"
                    },
                    "isoSpeed": {
                      "type": "integer",
                      "description": "The ISO speed used to create the photo.",
                      "format": "int32"
                    },
                    "lens": {
                      "type": "string",
                      "description": "The lens used to create the photo."
                    },
                    "location": {
                      "type": "object",
                      "description": "Geographic location information stored in the image.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "The altitude stored in the image.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "The latitude stored in the image.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "The longitude stored in the image.",
                          "format": "double"
                        }
                      }
                    },
                    "maxApertureValue": {
                      "type": "number",
                      "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
                      "format": "float"
                    },
                    "meteringMode": {
                      "type": "string",
                      "description": "The metering mode used to create the photo."
                    },
                    "rotation": {
                      "type": "integer",
                      "description": "The rotation in clockwise degrees from the image's original orientation.",
                      "format": "int32"
                    },
                    "sensor": {
                      "type": "string",
                      "description": "The type of sensor used to create the photo."
                    },
                    "subjectDistance": {
                      "type": "integer",
                      "description": "The distance to the subject of the photo, in meters.",
                      "format": "int32"
                    },
                    "whiteBalance": {
                      "type": "string",
                      "description": "The white balance mode used to create the photo."
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the image in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "indexableText": {
                  "type": "object",
                  "description": "Indexable text attributes for the file (can only be written)",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "The text to be indexed for this file."
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "The type of file. This is always drive#file.",
                  "default": "drive#file"
                },
                "labels": {
                  "type": "object",
                  "description": "A group of labels for the file.",
                  "properties": {
                    "hidden": {
                      "type": "boolean",
                      "description": "Deprecated."
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Whether viewers are prevented from downloading this file."
                    },
                    "starred": {
                      "type": "boolean",
                      "description": "Whether this file is starred by the user."
                    },
                    "trashed": {
                      "type": "boolean",
                      "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
                    },
                    "viewed": {
                      "type": "boolean",
                      "description": "Whether this file has been viewed by this user."
                    }
                  }
                },
                "lastModifyingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "lastModifyingUserName": {
                  "type": "string",
                  "description": "Name of the last user to modify this file."
                },
                "lastViewedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "markedViewedByMeDate": {
                  "type": "string",
                  "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "md5Checksum": {
                  "type": "string",
                  "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
                },
                "mimeType": {
                  "type": "string",
                  "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
                },
                "modifiedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
                  "format": "date-time"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
                  "format": "date-time"
                },
                "openWithLinks": {
                  "type": "object",
                  "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "originalFilename": {
                  "type": "string",
                  "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
                },
                "ownerNames": {
                  "type": "array",
                  "description": "Name(s) of the owner(s) of this file.",
                  "items": {
                    "type": "string"
                  }
                },
                "owners": {
                  "type": "array",
                  "description": "The owner(s) of this file.",
                  "items": {
                    "type": "object",
                    "description": "The JSON template for a user.",
                    "properties": {
                      "displayName": {
                        "type": "string",
                        "description": "A plain text displayable name for this user."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user."
                      },
                      "isAuthenticatedUser": {
                        "type": "boolean",
                        "description": "Whether this user is the same as the authenticated user for whom the request was made."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#user.",
                        "default": "drive#user"
                      },
                      "permissionId": {
                        "type": "string",
                        "description": "The user's ID as visible in the permissions collection."
                      },
                      "picture": {
                        "type": "object",
                        "description": "The user's profile picture.",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "A URL that points to a profile picture of this user."
                          }
                        }
                      }
                    }
                  }
                },
                "parents": {
                  "type": "array",
                  "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
                  "items": {
                    "type": "object",
                    "description": "A reference to a file's parent.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the parent."
                      },
                      "isRoot": {
                        "type": "boolean",
                        "description": "Whether or not the parent is the root folder."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#parentReference.",
                        "default": "drive#parentReference"
                      },
                      "parentLink": {
                        "type": "string",
                        "description": "A link to the parent."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this reference."
                      }
                    }
                  }
                },
                "permissions": {
                  "type": "array",
                  "description": "The list of permissions for users with access to this file.",
                  "items": {
                    "type": "object",
                    "description": "A permission for a file.",
                    "properties": {
                      "additionalRoles": {
                        "type": "array",
                        "description": "Additional roles for this user. Only commenter is currently allowed.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "authKey": {
                        "type": "string",
                        "description": "The authkey parameter required for this permission."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                      },
                      "etag": {
                        "type": "string",
                        "description": "The ETag of the permission."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#permission.",
                        "default": "drive#permission"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name for this permission."
                      },
                      "photoLink": {
                        "type": "string",
                        "description": "A link to the profile photo, if available."
                      },
                      "role": {
                        "type": "string",
                        "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this permission."
                      },
                      "type": {
                        "type": "string",
                        "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                      },
                      "value": {
                        "type": "string",
                        "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "withLink": {
                        "type": "boolean",
                        "description": "Whether the link is required for this permission."
                      }
                    }
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "The list of properties.",
                  "items": {
                    "type": "object",
                    "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "ETag of the property."
                      },
                      "key": {
                        "type": "string",
                        "description": "The key of this property."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#property.",
                        "default": "drive#property"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link back to this property."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of this property."
                      },
                      "visibility": {
                        "type": "string",
                        "description": "The visibility of this property."
                      }
                    }
                  }
                },
                "quotaBytesUsed": {
                  "type": "string",
                  "description": "The number of quota bytes used by this file.",
                  "format": "int64"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this file."
                },
                "shared": {
                  "type": "boolean",
                  "description": "Whether the file has been shared."
                },
                "sharedWithMeDate": {
                  "type": "string",
                  "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "sharingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "spaces": {
                  "type": "array",
                  "description": "The list of spaces which contain the file. Supported values are 'drive' and 'appDataFolder'.",
                  "items": {
                    "type": "string"
                  }
                },
                "thumbnail": {
                  "type": "object",
                  "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
                  "properties": {
                    "image": {
                      "type": "string",
                      "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
                      "format": "byte"
                    },
                    "mimeType": {
                      "type": "string",
                      "description": "The MIME type of the thumbnail."
                    }
                  }
                },
                "thumbnailLink": {
                  "type": "string",
                  "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
                },
                "title": {
                  "type": "string",
                  "description": "The title of this file."
                },
                "userPermission": {
                  "type": "object",
                  "description": "A permission for a file.",
                  "properties": {
                    "additionalRoles": {
                      "type": "array",
                      "description": "Additional roles for this user. Only commenter is currently allowed.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "authKey": {
                      "type": "string",
                      "description": "The authkey parameter required for this permission."
                    },
                    "domain": {
                      "type": "string",
                      "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                    },
                    "etag": {
                      "type": "string",
                      "description": "The ETag of the permission."
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#permission.",
                      "default": "drive#permission"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name for this permission."
                    },
                    "photoLink": {
                      "type": "string",
                      "description": "A link to the profile photo, if available."
                    },
                    "role": {
                      "type": "string",
                      "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                    },
                    "selfLink": {
                      "type": "string",
                      "description": "A link back to this permission."
                    },
                    "type": {
                      "type": "string",
                      "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                    },
                    "value": {
                      "type": "string",
                      "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "withLink": {
                      "type": "boolean",
                      "description": "Whether the link is required for this permission."
                    }
                  }
                },
                "version": {
                  "type": "string",
                  "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
                  "format": "int64"
                },
                "videoMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about video media. This will only be present for video types.",
                  "properties": {
                    "durationMillis": {
                      "type": "string",
                      "description": "The duration of the video in milliseconds.",
                      "format": "int64"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the video in pixels.",
                      "format": "int32"
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the video in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "webContentLink": {
                  "type": "string",
                  "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
                },
                "webViewLink": {
                  "type": "string",
                  "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
                },
                "writersCanShare": {
                  "type": "boolean",
                  "description": "Whether writers can share the document with other users."
                }
              }
            }

+ Response 200

### Resource /files/trash [/files/trash]

#### drive.files.emptyTrash [DELETE]

+ Response 200

### Resource /files [/drive/v2/files{?corpus,maxResults,pageToken,projection,q,spaces}]

#### drive.files.insert [POST]

+ Parameters

    + convert
  
    + ocr
  
    + ocrLanguage
  
    + pinned
  
    + timedTextLanguage
  
    + timedTextTrackName
  
    + useContentAsIndexableText
  
    + visibility

+ Request

    + Schema

            {
              "type": "object",
              "description": "The metadata for a file.",
              "properties": {
                "alternateLink": {
                  "type": "string",
                  "description": "A link for opening the file in a relevant Google editor or viewer."
                },
                "appDataContents": {
                  "type": "boolean",
                  "description": "Whether this file is in the Application Data folder."
                },
                "copyable": {
                  "type": "boolean",
                  "description": "Whether the file can be copied by the current user."
                },
                "createdDate": {
                  "type": "string",
                  "description": "Create time for this file (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "defaultOpenWithLink": {
                  "type": "string",
                  "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of the file."
                },
                "downloadUrl": {
                  "type": "string",
                  "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
                },
                "editable": {
                  "type": "boolean",
                  "description": "Whether the file can be edited by the current user."
                },
                "embedLink": {
                  "type": "string",
                  "description": "A link for embedding the file."
                },
                "etag": {
                  "type": "string",
                  "description": "ETag of the file."
                },
                "explicitlyTrashed": {
                  "type": "boolean",
                  "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
                },
                "exportLinks": {
                  "type": "object",
                  "description": "Links for exporting Google Docs to specific formats.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "A mapping from export format to URL"
                  }
                },
                "fileExtension": {
                  "type": "string",
                  "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
                },
                "fileSize": {
                  "type": "string",
                  "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
                  "format": "int64"
                },
                "folderColorRgb": {
                  "type": "string",
                  "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
                },
                "headRevisionId": {
                  "type": "string",
                  "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
                },
                "iconLink": {
                  "type": "string",
                  "description": "A link to the file's icon."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the file."
                },
                "imageMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
                  "properties": {
                    "aperture": {
                      "type": "number",
                      "description": "The aperture used to create the photo (f-number).",
                      "format": "float"
                    },
                    "cameraMake": {
                      "type": "string",
                      "description": "The make of the camera used to create the photo."
                    },
                    "cameraModel": {
                      "type": "string",
                      "description": "The model of the camera used to create the photo."
                    },
                    "colorSpace": {
                      "type": "string",
                      "description": "The color space of the photo."
                    },
                    "date": {
                      "type": "string",
                      "description": "The date and time the photo was taken (EXIF format timestamp)."
                    },
                    "exposureBias": {
                      "type": "number",
                      "description": "The exposure bias of the photo (APEX value).",
                      "format": "float"
                    },
                    "exposureMode": {
                      "type": "string",
                      "description": "The exposure mode used to create the photo."
                    },
                    "exposureTime": {
                      "type": "number",
                      "description": "The length of the exposure, in seconds.",
                      "format": "float"
                    },
                    "flashUsed": {
                      "type": "boolean",
                      "description": "Whether a flash was used to create the photo."
                    },
                    "focalLength": {
                      "type": "number",
                      "description": "The focal length used to create the photo, in millimeters.",
                      "format": "float"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the image in pixels.",
                      "format": "int32"
                    },
                    "isoSpeed": {
                      "type": "integer",
                      "description": "The ISO speed used to create the photo.",
                      "format": "int32"
                    },
                    "lens": {
                      "type": "string",
                      "description": "The lens used to create the photo."
                    },
                    "location": {
                      "type": "object",
                      "description": "Geographic location information stored in the image.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "The altitude stored in the image.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "The latitude stored in the image.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "The longitude stored in the image.",
                          "format": "double"
                        }
                      }
                    },
                    "maxApertureValue": {
                      "type": "number",
                      "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
                      "format": "float"
                    },
                    "meteringMode": {
                      "type": "string",
                      "description": "The metering mode used to create the photo."
                    },
                    "rotation": {
                      "type": "integer",
                      "description": "The rotation in clockwise degrees from the image's original orientation.",
                      "format": "int32"
                    },
                    "sensor": {
                      "type": "string",
                      "description": "The type of sensor used to create the photo."
                    },
                    "subjectDistance": {
                      "type": "integer",
                      "description": "The distance to the subject of the photo, in meters.",
                      "format": "int32"
                    },
                    "whiteBalance": {
                      "type": "string",
                      "description": "The white balance mode used to create the photo."
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the image in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "indexableText": {
                  "type": "object",
                  "description": "Indexable text attributes for the file (can only be written)",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "The text to be indexed for this file."
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "The type of file. This is always drive#file.",
                  "default": "drive#file"
                },
                "labels": {
                  "type": "object",
                  "description": "A group of labels for the file.",
                  "properties": {
                    "hidden": {
                      "type": "boolean",
                      "description": "Deprecated."
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Whether viewers are prevented from downloading this file."
                    },
                    "starred": {
                      "type": "boolean",
                      "description": "Whether this file is starred by the user."
                    },
                    "trashed": {
                      "type": "boolean",
                      "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
                    },
                    "viewed": {
                      "type": "boolean",
                      "description": "Whether this file has been viewed by this user."
                    }
                  }
                },
                "lastModifyingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "lastModifyingUserName": {
                  "type": "string",
                  "description": "Name of the last user to modify this file."
                },
                "lastViewedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "markedViewedByMeDate": {
                  "type": "string",
                  "description": "Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "md5Checksum": {
                  "type": "string",
                  "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
                },
                "mimeType": {
                  "type": "string",
                  "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
                },
                "modifiedByMeDate": {
                  "type": "string",
                  "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
                  "format": "date-time"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
                  "format": "date-time"
                },
                "openWithLinks": {
                  "type": "object",
                  "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "originalFilename": {
                  "type": "string",
                  "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
                },
                "ownerNames": {
                  "type": "array",
                  "description": "Name(s) of the owner(s) of this file.",
                  "items": {
                    "type": "string"
                  }
                },
                "owners": {
                  "type": "array",
                  "description": "The owner(s) of this file.",
                  "items": {
                    "type": "object",
                    "description": "The JSON template for a user.",
                    "properties": {
                      "displayName": {
                        "type": "string",
                        "description": "A plain text displayable name for this user."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user."
                      },
                      "isAuthenticatedUser": {
                        "type": "boolean",
                        "description": "Whether this user is the same as the authenticated user for whom the request was made."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#user.",
                        "default": "drive#user"
                      },
                      "permissionId": {
                        "type": "string",
                        "description": "The user's ID as visible in the permissions collection."
                      },
                      "picture": {
                        "type": "object",
                        "description": "The user's profile picture.",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "A URL that points to a profile picture of this user."
                          }
                        }
                      }
                    }
                  }
                },
                "parents": {
                  "type": "array",
                  "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
                  "items": {
                    "type": "object",
                    "description": "A reference to a file's parent.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the parent."
                      },
                      "isRoot": {
                        "type": "boolean",
                        "description": "Whether or not the parent is the root folder."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#parentReference.",
                        "default": "drive#parentReference"
                      },
                      "parentLink": {
                        "type": "string",
                        "description": "A link to the parent."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this reference."
                      }
                    }
                  }
                },
                "permissions": {
                  "type": "array",
                  "description": "The list of permissions for users with access to this file.",
                  "items": {
                    "type": "object",
                    "description": "A permission for a file.",
                    "properties": {
                      "additionalRoles": {
                        "type": "array",
                        "description": "Additional roles for this user. Only commenter is currently allowed.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "authKey": {
                        "type": "string",
                        "description": "The authkey parameter required for this permission."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                      },
                      "etag": {
                        "type": "string",
                        "description": "The ETag of the permission."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#permission.",
                        "default": "drive#permission"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name for this permission."
                      },
                      "photoLink": {
                        "type": "string",
                        "description": "A link to the profile photo, if available."
                      },
                      "role": {
                        "type": "string",
                        "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "A link back to this permission."
                      },
                      "type": {
                        "type": "string",
                        "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                      },
                      "value": {
                        "type": "string",
                        "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                      },
                      "withLink": {
                        "type": "boolean",
                        "description": "Whether the link is required for this permission."
                      }
                    }
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "The list of properties.",
                  "items": {
                    "type": "object",
                    "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "ETag of the property."
                      },
                      "key": {
                        "type": "string",
                        "description": "The key of this property."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always drive#property.",
                        "default": "drive#property"
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link back to this property."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of this property."
                      },
                      "visibility": {
                        "type": "string",
                        "description": "The visibility of this property."
                      }
                    }
                  }
                },
                "quotaBytesUsed": {
                  "type": "string",
                  "description": "The number of quota bytes used by this file.",
                  "format": "int64"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this file."
                },
                "shared": {
                  "type": "boolean",
                  "description": "Whether the file has been shared."
                },
                "sharedWithMeDate": {
                  "type": "string",
                  "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "sharingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "spaces": {
                  "type": "array",
                  "description": "The list of spaces which contain the file. Supported values are 'drive' and 'appDataFolder'.",
                  "items": {
                    "type": "string"
                  }
                },
                "thumbnail": {
                  "type": "object",
                  "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
                  "properties": {
                    "image": {
                      "type": "string",
                      "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
                      "format": "byte"
                    },
                    "mimeType": {
                      "type": "string",
                      "description": "The MIME type of the thumbnail."
                    }
                  }
                },
                "thumbnailLink": {
                  "type": "string",
                  "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
                },
                "title": {
                  "type": "string",
                  "description": "The title of this file."
                },
                "userPermission": {
                  "type": "object",
                  "description": "A permission for a file.",
                  "properties": {
                    "additionalRoles": {
                      "type": "array",
                      "description": "Additional roles for this user. Only commenter is currently allowed.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "authKey": {
                      "type": "string",
                      "description": "The authkey parameter required for this permission."
                    },
                    "domain": {
                      "type": "string",
                      "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                    },
                    "etag": {
                      "type": "string",
                      "description": "The ETag of the permission."
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#permission.",
                      "default": "drive#permission"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name for this permission."
                    },
                    "photoLink": {
                      "type": "string",
                      "description": "A link to the profile photo, if available."
                    },
                    "role": {
                      "type": "string",
                      "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                    },
                    "selfLink": {
                      "type": "string",
                      "description": "A link back to this permission."
                    },
                    "type": {
                      "type": "string",
                      "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                    },
                    "value": {
                      "type": "string",
                      "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                    },
                    "withLink": {
                      "type": "boolean",
                      "description": "Whether the link is required for this permission."
                    }
                  }
                },
                "version": {
                  "type": "string",
                  "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
                  "format": "int64"
                },
                "videoMediaMetadata": {
                  "type": "object",
                  "description": "Metadata about video media. This will only be present for video types.",
                  "properties": {
                    "durationMillis": {
                      "type": "string",
                      "description": "The duration of the video in milliseconds.",
                      "format": "int64"
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the video in pixels.",
                      "format": "int32"
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the video in pixels.",
                      "format": "int32"
                    }
                  }
                },
                "webContentLink": {
                  "type": "string",
                  "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
                },
                "webViewLink": {
                  "type": "string",
                  "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
                },
                "writersCanShare": {
                  "type": "boolean",
                  "description": "Whether writers can share the document with other users."
                }
              }
            }

+ Response 200

#### drive.files.list [GET]

+ Parameters

    + corpus
  
    + maxResults
  
    + pageToken
  
    + projection
  
    + q
  
    + spaces

+ Response 200

### Resource /files/{fileId}/touch [/files/{fileId}/touch]

#### drive.files.touch [POST]

+ Parameters

    + fileId (required)

+ Response 200

### Resource /files/{fileId}/trash [/files/{fileId}/trash]

#### drive.files.trash [POST]

+ Parameters

    + fileId (required)

+ Response 200

### Resource /files/{fileId}/untrash [/files/{fileId}/untrash]

#### drive.files.untrash [POST]

+ Parameters

    + fileId (required)

+ Response 200

### Resource /files/{fileId}/watch [/drive/v2/files/{fileId}/watch{?acknowledgeAbuse,projection,revisionId,updateViewedDate}]

#### drive.files.watch [POST]

+ Parameters

    + fileId (required)
  
    + acknowledgeAbuse
  
    + projection
  
    + revisionId
  
    + updateViewedDate

+ Request

    + Schema

            {
              "type": "object",
              "description": "An notification channel used to watch for resource changes.",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The address where notifications are delivered for this channel."
                },
                "expiration": {
                  "type": "string",
                  "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "A UUID or similar unique string that identifies this channel."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
                  "default": "api#channel"
                },
                "params": {
                  "type": "object",
                  "description": "Additional parameters controlling delivery channel behavior. Optional.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Declares a new parameter by name."
                  }
                },
                "payload": {
                  "type": "boolean",
                  "description": "A Boolean value to indicate whether payload is wanted. Optional."
                },
                "resourceId": {
                  "type": "string",
                  "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
                },
                "resourceUri": {
                  "type": "string",
                  "description": "A version-specific identifier for the watched resource."
                },
                "token": {
                  "type": "string",
                  "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
                },
                "type": {
                  "type": "string",
                  "description": "The type of delivery mechanism used for this channel."
                }
              }
            }

+ Response 200

### Resource /files/{fileId}/parents/{parentId} [/files/{fileId}/parents/{parentId}]

#### drive.parents.delete [DELETE]

+ Parameters

    + fileId (required)
  
    + parentId (required)

+ Response 200

#### drive.parents.get [GET]

+ Parameters

    + fileId (required)
  
    + parentId (required)

+ Response 200

### Resource /files/{fileId}/parents [/files/{fileId}/parents]

#### drive.parents.insert [POST]

+ Parameters

    + fileId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A reference to a file's parent.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the parent."
                },
                "isRoot": {
                  "type": "boolean",
                  "description": "Whether or not the parent is the root folder."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#parentReference.",
                  "default": "drive#parentReference"
                },
                "parentLink": {
                  "type": "string",
                  "description": "A link to the parent."
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this reference."
                }
              }
            }

+ Response 200

#### drive.parents.list [GET]

+ Parameters

    + fileId (required)

+ Response 200

### Resource /files/{fileId}/permissions/{permissionId} [/drive/v2/files/{fileId}/permissions/{permissionId}{?transferOwnership}]

#### drive.permissions.delete [DELETE]

+ Parameters

    + fileId (required)
  
    + permissionId (required)

+ Response 200

#### drive.permissions.get [GET]

+ Parameters

    + fileId (required)
  
    + permissionId (required)

+ Response 200

#### drive.permissions.patch [PATCH]

+ Parameters

    + fileId (required)
  
    + permissionId (required)
  
    + transferOwnership

+ Request

    + Schema

            {
              "type": "object",
              "description": "A permission for a file.",
              "properties": {
                "additionalRoles": {
                  "type": "array",
                  "description": "Additional roles for this user. Only commenter is currently allowed.",
                  "items": {
                    "type": "string"
                  }
                },
                "authKey": {
                  "type": "string",
                  "description": "The authkey parameter required for this permission."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                },
                "emailAddress": {
                  "type": "string",
                  "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                },
                "etag": {
                  "type": "string",
                  "description": "The ETag of the permission."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#permission.",
                  "default": "drive#permission"
                },
                "name": {
                  "type": "string",
                  "description": "The name for this permission."
                },
                "photoLink": {
                  "type": "string",
                  "description": "A link to the profile photo, if available."
                },
                "role": {
                  "type": "string",
                  "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this permission."
                },
                "type": {
                  "type": "string",
                  "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                },
                "value": {
                  "type": "string",
                  "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                },
                "withLink": {
                  "type": "boolean",
                  "description": "Whether the link is required for this permission."
                }
              }
            }

+ Response 200

#### drive.permissions.update [PUT]

+ Parameters

    + fileId (required)
  
    + permissionId (required)
  
    + transferOwnership

+ Request

    + Schema

            {
              "type": "object",
              "description": "A permission for a file.",
              "properties": {
                "additionalRoles": {
                  "type": "array",
                  "description": "Additional roles for this user. Only commenter is currently allowed.",
                  "items": {
                    "type": "string"
                  }
                },
                "authKey": {
                  "type": "string",
                  "description": "The authkey parameter required for this permission."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                },
                "emailAddress": {
                  "type": "string",
                  "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                },
                "etag": {
                  "type": "string",
                  "description": "The ETag of the permission."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#permission.",
                  "default": "drive#permission"
                },
                "name": {
                  "type": "string",
                  "description": "The name for this permission."
                },
                "photoLink": {
                  "type": "string",
                  "description": "A link to the profile photo, if available."
                },
                "role": {
                  "type": "string",
                  "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this permission."
                },
                "type": {
                  "type": "string",
                  "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                },
                "value": {
                  "type": "string",
                  "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                },
                "withLink": {
                  "type": "boolean",
                  "description": "Whether the link is required for this permission."
                }
              }
            }

+ Response 200

### Resource /permissionIds/{email} [/permissionIds/{email}]

#### drive.permissions.getIdForEmail [GET]

+ Parameters

    + email (required)

+ Response 200

### Resource /files/{fileId}/permissions [/files/{fileId}/permissions]

#### drive.permissions.insert [POST]

+ Parameters

    + fileId (required)
  
    + emailMessage
  
    + sendNotificationEmails

+ Request

    + Schema

            {
              "type": "object",
              "description": "A permission for a file.",
              "properties": {
                "additionalRoles": {
                  "type": "array",
                  "description": "Additional roles for this user. Only commenter is currently allowed.",
                  "items": {
                    "type": "string"
                  }
                },
                "authKey": {
                  "type": "string",
                  "description": "The authkey parameter required for this permission."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
                },
                "emailAddress": {
                  "type": "string",
                  "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
                },
                "etag": {
                  "type": "string",
                  "description": "The ETag of the permission."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#permission.",
                  "default": "drive#permission"
                },
                "name": {
                  "type": "string",
                  "description": "The name for this permission."
                },
                "photoLink": {
                  "type": "string",
                  "description": "A link to the profile photo, if available."
                },
                "role": {
                  "type": "string",
                  "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer"
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this permission."
                },
                "type": {
                  "type": "string",
                  "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone"
                },
                "value": {
                  "type": "string",
                  "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
                },
                "withLink": {
                  "type": "boolean",
                  "description": "Whether the link is required for this permission."
                }
              }
            }

+ Response 200

#### drive.permissions.list [GET]

+ Parameters

    + fileId (required)

+ Response 200

### Resource /files/{fileId}/properties/{propertyKey} [/drive/v2/files/{fileId}/properties/{propertyKey}{?visibility}]

#### drive.properties.delete [DELETE]

+ Parameters

    + fileId (required)
  
    + propertyKey (required)
  
    + visibility

+ Response 200

#### drive.properties.get [GET]

+ Parameters

    + fileId (required)
  
    + propertyKey (required)
  
    + visibility

+ Response 200

#### drive.properties.patch [PATCH]

+ Parameters

    + fileId (required)
  
    + propertyKey (required)
  
    + visibility

+ Request

    + Schema

            {
              "type": "object",
              "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "ETag of the property."
                },
                "key": {
                  "type": "string",
                  "description": "The key of this property."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#property.",
                  "default": "drive#property"
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link back to this property."
                },
                "value": {
                  "type": "string",
                  "description": "The value of this property."
                },
                "visibility": {
                  "type": "string",
                  "description": "The visibility of this property."
                }
              }
            }

+ Response 200

#### drive.properties.update [PUT]

+ Parameters

    + fileId (required)
  
    + propertyKey (required)
  
    + visibility

+ Request

    + Schema

            {
              "type": "object",
              "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "ETag of the property."
                },
                "key": {
                  "type": "string",
                  "description": "The key of this property."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#property.",
                  "default": "drive#property"
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link back to this property."
                },
                "value": {
                  "type": "string",
                  "description": "The value of this property."
                },
                "visibility": {
                  "type": "string",
                  "description": "The visibility of this property."
                }
              }
            }

+ Response 200

### Resource /files/{fileId}/properties [/files/{fileId}/properties]

#### drive.properties.insert [POST]

+ Parameters

    + fileId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "ETag of the property."
                },
                "key": {
                  "type": "string",
                  "description": "The key of this property."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#property.",
                  "default": "drive#property"
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link back to this property."
                },
                "value": {
                  "type": "string",
                  "description": "The value of this property."
                },
                "visibility": {
                  "type": "string",
                  "description": "The visibility of this property."
                }
              }
            }

+ Response 200

#### drive.properties.list [GET]

+ Parameters

    + fileId (required)

+ Response 200

### Resource /files/{fileId}/realtime [/drive/v2/files/{fileId}/realtime{?baseRevision}]

#### drive.realtime.get [GET]

+ Parameters

    + fileId (required)
  
    + revision

+ Response 200

#### drive.realtime.update [PUT]

+ Parameters

    + fileId (required)
  
    + baseRevision

+ Response 200

### Resource /files/{fileId}/comments/{commentId}/replies/{replyId} [/files/{fileId}/comments/{commentId}/replies/{replyId}]

#### drive.replies.delete [DELETE]

+ Parameters

    + fileId (required)
  
    + commentId (required)
  
    + replyId (required)

+ Response 200

#### drive.replies.get [GET]

+ Parameters

    + fileId (required)
  
    + commentId (required)
  
    + replyId (required)
  
    + includeDeleted

+ Response 200

#### drive.replies.patch [PATCH]

+ Parameters

    + fileId (required)
  
    + commentId (required)
  
    + replyId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
              "properties": {
                "author": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "content": {
                  "type": "string",
                  "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
                },
                "createdDate": {
                  "type": "string",
                  "description": "The date when this reply was first created.",
                  "format": "date-time"
                },
                "deleted": {
                  "type": "boolean",
                  "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
                },
                "htmlContent": {
                  "type": "string",
                  "description": "HTML formatted content for this reply."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#commentReply.",
                  "default": "drive#commentReply"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "The date when this reply was last modified.",
                  "format": "date-time"
                },
                "replyId": {
                  "type": "string",
                  "description": "The ID of the reply."
                },
                "verb": {
                  "type": "string",
                  "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
                }
              }
            }

+ Response 200

#### drive.replies.update [PUT]

+ Parameters

    + fileId (required)
  
    + commentId (required)
  
    + replyId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
              "properties": {
                "author": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "content": {
                  "type": "string",
                  "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
                },
                "createdDate": {
                  "type": "string",
                  "description": "The date when this reply was first created.",
                  "format": "date-time"
                },
                "deleted": {
                  "type": "boolean",
                  "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
                },
                "htmlContent": {
                  "type": "string",
                  "description": "HTML formatted content for this reply."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#commentReply.",
                  "default": "drive#commentReply"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "The date when this reply was last modified.",
                  "format": "date-time"
                },
                "replyId": {
                  "type": "string",
                  "description": "The ID of the reply."
                },
                "verb": {
                  "type": "string",
                  "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
                }
              }
            }

+ Response 200

### Resource /files/{fileId}/comments/{commentId}/replies [/drive/v2/files/{fileId}/comments/{commentId}/replies{?includeDeleted,maxResults,pageToken}]

#### drive.replies.insert [POST]

+ Parameters

    + fileId (required)
  
    + commentId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
              "properties": {
                "author": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "content": {
                  "type": "string",
                  "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
                },
                "createdDate": {
                  "type": "string",
                  "description": "The date when this reply was first created.",
                  "format": "date-time"
                },
                "deleted": {
                  "type": "boolean",
                  "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
                },
                "htmlContent": {
                  "type": "string",
                  "description": "HTML formatted content for this reply."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#commentReply.",
                  "default": "drive#commentReply"
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "The date when this reply was last modified.",
                  "format": "date-time"
                },
                "replyId": {
                  "type": "string",
                  "description": "The ID of the reply."
                },
                "verb": {
                  "type": "string",
                  "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
                }
              }
            }

+ Response 200

#### drive.replies.list [GET]

+ Parameters

    + fileId (required)
  
    + commentId (required)
  
    + includeDeleted
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /files/{fileId}/revisions/{revisionId} [/files/{fileId}/revisions/{revisionId}]

#### drive.revisions.delete [DELETE]

+ Parameters

    + fileId (required)
  
    + revisionId (required)

+ Response 200

#### drive.revisions.get [GET]

+ Parameters

    + fileId (required)
  
    + revisionId (required)

+ Response 200

#### drive.revisions.patch [PATCH]

+ Parameters

    + fileId (required)
  
    + revisionId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A revision of a file.",
              "properties": {
                "downloadUrl": {
                  "type": "string",
                  "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
                },
                "etag": {
                  "type": "string",
                  "description": "The ETag of the revision."
                },
                "exportLinks": {
                  "type": "object",
                  "description": "Links for exporting Google Docs to specific formats.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "A mapping from export format to URL"
                  }
                },
                "fileSize": {
                  "type": "string",
                  "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the revision."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#revision.",
                  "default": "drive#revision"
                },
                "lastModifyingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "lastModifyingUserName": {
                  "type": "string",
                  "description": "Name of the last user to modify this revision."
                },
                "md5Checksum": {
                  "type": "string",
                  "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
                },
                "mimeType": {
                  "type": "string",
                  "description": "The MIME type of the revision."
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "originalFilename": {
                  "type": "string",
                  "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
                },
                "pinned": {
                  "type": "boolean",
                  "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
                },
                "publishAuto": {
                  "type": "boolean",
                  "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
                },
                "published": {
                  "type": "boolean",
                  "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
                },
                "publishedLink": {
                  "type": "string",
                  "description": "A link to the published revision."
                },
                "publishedOutsideDomain": {
                  "type": "boolean",
                  "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this revision."
                }
              }
            }

+ Response 200

#### drive.revisions.update [PUT]

+ Parameters

    + fileId (required)
  
    + revisionId (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A revision of a file.",
              "properties": {
                "downloadUrl": {
                  "type": "string",
                  "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
                },
                "etag": {
                  "type": "string",
                  "description": "The ETag of the revision."
                },
                "exportLinks": {
                  "type": "object",
                  "description": "Links for exporting Google Docs to specific formats.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "A mapping from export format to URL"
                  }
                },
                "fileSize": {
                  "type": "string",
                  "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the revision."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always drive#revision.",
                  "default": "drive#revision"
                },
                "lastModifyingUser": {
                  "type": "object",
                  "description": "The JSON template for a user.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "A plain text displayable name for this user."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The email address of the user."
                    },
                    "isAuthenticatedUser": {
                      "type": "boolean",
                      "description": "Whether this user is the same as the authenticated user for whom the request was made."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always drive#user.",
                      "default": "drive#user"
                    },
                    "permissionId": {
                      "type": "string",
                      "description": "The user's ID as visible in the permissions collection."
                    },
                    "picture": {
                      "type": "object",
                      "description": "The user's profile picture.",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "A URL that points to a profile picture of this user."
                        }
                      }
                    }
                  }
                },
                "lastModifyingUserName": {
                  "type": "string",
                  "description": "Name of the last user to modify this revision."
                },
                "md5Checksum": {
                  "type": "string",
                  "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
                },
                "mimeType": {
                  "type": "string",
                  "description": "The MIME type of the revision."
                },
                "modifiedDate": {
                  "type": "string",
                  "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
                  "format": "date-time"
                },
                "originalFilename": {
                  "type": "string",
                  "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
                },
                "pinned": {
                  "type": "boolean",
                  "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
                },
                "publishAuto": {
                  "type": "boolean",
                  "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
                },
                "published": {
                  "type": "boolean",
                  "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
                },
                "publishedLink": {
                  "type": "string",
                  "description": "A link to the published revision."
                },
                "publishedOutsideDomain": {
                  "type": "boolean",
                  "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
                },
                "selfLink": {
                  "type": "string",
                  "description": "A link back to this revision."
                }
              }
            }

+ Response 200

### Resource /files/{fileId}/revisions [/files/{fileId}/revisions]

#### drive.revisions.list [GET]

+ Parameters

    + fileId (required)

+ Response 200

