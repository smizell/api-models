FORMAT: 1A

# Compute Engine API

API for the Google Compute Engine service.

### Resource /{project}/aggregated/addresses [/compute/v1/projects/{project}/aggregated/addresses{?filter,maxResults,pageToken}]

#### compute.addresses.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/addresses/{address} [/{project}/regions/{region}/addresses/{address}]

#### compute.addresses.delete [DELETE]

+ Parameters

    + project (required)
  
    + region (required)
  
    + address (required)

+ Response 200

#### compute.addresses.get [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + address (required)

+ Response 200

### Resource /{project}/regions/{region}/addresses [/compute/v1/projects/{project}/regions/{region}/addresses{?filter,maxResults,pageToken}]

#### compute.addresses.insert [POST]

+ Parameters

    + project (required)
  
    + region (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A reserved address resource.",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The static external IP address represented by this resource."
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#address for addresses.",
                  "default": "compute#address"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "region": {
                  "type": "string",
                  "description": "[Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses."
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                },
                "status": {
                  "type": "string",
                  "description": "[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.",
                  "enum": [
                    "IN_USE",
                    "RESERVED"
                  ]
                },
                "users": {
                  "type": "array",
                  "description": "[Output Only] The URLs of the resources that are using this address.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

#### compute.addresses.list [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/backendServices/{backendService} [/{project}/global/backendServices/{backendService}]

#### compute.backendServices.delete [DELETE]

+ Parameters

    + project (required)
  
    + backendService (required)

+ Response 200

#### compute.backendServices.get [GET]

+ Parameters

    + project (required)
  
    + backendService (required)

+ Response 200

#### compute.backendServices.patch [PATCH]

+ Parameters

    + project (required)
  
    + backendService (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A BackendService resource. This resource defines a group of backend VMs together with their serving capacity.\n\nIf you add field foo, you probably need to also add: com.google.cloud.cluster.manager.api.BackendServiceResource: foo com.google.cloud.cluster.manager.networking.entities: BackendService, BackendServiceEntity: getFoo, setFoo:\n\nConverters/mappers will need to be updated: com.google.cloud.cluster.manager.networking.services.backendservice.BackendServiceResourceConverter: toResource, updateEntity: copy foo com.google.cloud.cluster.mixer.protomappers.BackendServiceMappers.ResourceMapper: ResourceMapper: add a new map call\n\nTests to update: com.google.cloud.cluster.manager.networking.services.backendservice.BackendServiceResourceConverterTest com.google.cloud.cluster.mixer.protomappers.BackendServiceMappersTest.testResourceMapping",
              "properties": {
                "backends": {
                  "type": "array",
                  "description": "The list of backends that serve this BackendService.",
                  "items": {
                    "type": "object",
                    "description": "Message containing information of one individual backend.",
                    "properties": {
                      "balancingMode": {
                        "type": "string",
                        "description": "The balancing mode of this backend, default is UTILIZATION.",
                        "enum": [
                          "RATE",
                          "UTILIZATION"
                        ]
                      },
                      "capacityScaler": {
                        "type": "number",
                        "description": "The multiplier (a value between 0.0 and 1.0) of the max capacity (CPU or RPS, depending on 'balancingMode') the group should serve up to. 0 means the group is totally drained. Default value is 1. Valid range is [0.0, 1.0].",
                        "format": "float"
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional textual description of the resource, which is provided by the client when the resource is created."
                      },
                      "group": {
                        "type": "string",
                        "description": "URL of a zonal Cloud Resource View resource. This resource view defines the list of instances that serve traffic. Member virtual machine instances from each resource view must live in the same zone as the resource view itself. No two backends in a backend service are allowed to use same Resource View resource."
                      },
                      "maxRate": {
                        "type": "integer",
                        "description": "The max RPS of the group. Can be used with either balancing mode, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                        "format": "int32"
                      },
                      "maxRatePerInstance": {
                        "type": "number",
                        "description": "The max RPS that a single backed instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                        "format": "float"
                      },
                      "maxUtilization": {
                        "type": "number",
                        "description": "Used when 'balancingMode' is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0, 1].",
                        "format": "float"
                      }
                    }
                  }
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.",
                  "format": "byte"
                },
                "healthChecks": {
                  "type": "array",
                  "description": "The list of URLs to the HttpHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required.",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#backendService"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "port": {
                  "type": "integer",
                  "description": "Deprecated in favor of port_name. The TCP port to connect on the backend. The default value is 80.",
                  "format": "int32"
                },
                "portName": {
                  "type": "string",
                  "description": "Name of backend port. The same name should appear in the resource views referenced by this service. Required."
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "HTTP"
                  ]
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "timeoutSec": {
                  "type": "integer",
                  "description": "How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.",
                  "format": "int32"
                }
              }
            }

+ Response 200

#### compute.backendServices.update [PUT]

+ Parameters

    + project (required)
  
    + backendService (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A BackendService resource. This resource defines a group of backend VMs together with their serving capacity.\n\nIf you add field foo, you probably need to also add: com.google.cloud.cluster.manager.api.BackendServiceResource: foo com.google.cloud.cluster.manager.networking.entities: BackendService, BackendServiceEntity: getFoo, setFoo:\n\nConverters/mappers will need to be updated: com.google.cloud.cluster.manager.networking.services.backendservice.BackendServiceResourceConverter: toResource, updateEntity: copy foo com.google.cloud.cluster.mixer.protomappers.BackendServiceMappers.ResourceMapper: ResourceMapper: add a new map call\n\nTests to update: com.google.cloud.cluster.manager.networking.services.backendservice.BackendServiceResourceConverterTest com.google.cloud.cluster.mixer.protomappers.BackendServiceMappersTest.testResourceMapping",
              "properties": {
                "backends": {
                  "type": "array",
                  "description": "The list of backends that serve this BackendService.",
                  "items": {
                    "type": "object",
                    "description": "Message containing information of one individual backend.",
                    "properties": {
                      "balancingMode": {
                        "type": "string",
                        "description": "The balancing mode of this backend, default is UTILIZATION.",
                        "enum": [
                          "RATE",
                          "UTILIZATION"
                        ]
                      },
                      "capacityScaler": {
                        "type": "number",
                        "description": "The multiplier (a value between 0.0 and 1.0) of the max capacity (CPU or RPS, depending on 'balancingMode') the group should serve up to. 0 means the group is totally drained. Default value is 1. Valid range is [0.0, 1.0].",
                        "format": "float"
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional textual description of the resource, which is provided by the client when the resource is created."
                      },
                      "group": {
                        "type": "string",
                        "description": "URL of a zonal Cloud Resource View resource. This resource view defines the list of instances that serve traffic. Member virtual machine instances from each resource view must live in the same zone as the resource view itself. No two backends in a backend service are allowed to use same Resource View resource."
                      },
                      "maxRate": {
                        "type": "integer",
                        "description": "The max RPS of the group. Can be used with either balancing mode, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                        "format": "int32"
                      },
                      "maxRatePerInstance": {
                        "type": "number",
                        "description": "The max RPS that a single backed instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                        "format": "float"
                      },
                      "maxUtilization": {
                        "type": "number",
                        "description": "Used when 'balancingMode' is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0, 1].",
                        "format": "float"
                      }
                    }
                  }
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.",
                  "format": "byte"
                },
                "healthChecks": {
                  "type": "array",
                  "description": "The list of URLs to the HttpHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required.",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#backendService"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "port": {
                  "type": "integer",
                  "description": "Deprecated in favor of port_name. The TCP port to connect on the backend. The default value is 80.",
                  "format": "int32"
                },
                "portName": {
                  "type": "string",
                  "description": "Name of backend port. The same name should appear in the resource views referenced by this service. Required."
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "HTTP"
                  ]
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "timeoutSec": {
                  "type": "integer",
                  "description": "How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.",
                  "format": "int32"
                }
              }
            }

+ Response 200

### Resource /{project}/global/backendServices/{backendService}/getHealth [/{project}/global/backendServices/{backendService}/getHealth]

#### compute.backendServices.getHealth [POST]

+ Parameters

    + project (required)
  
    + backendService (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "group": {
                  "type": "string",
                  "description": "A URI referencing one of the resource views listed in the backend service."
                }
              }
            }

+ Response 200

### Resource /{project}/global/backendServices [/compute/v1/projects/{project}/global/backendServices{?filter,maxResults,pageToken}]

#### compute.backendServices.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A BackendService resource. This resource defines a group of backend VMs together with their serving capacity.\n\nIf you add field foo, you probably need to also add: com.google.cloud.cluster.manager.api.BackendServiceResource: foo com.google.cloud.cluster.manager.networking.entities: BackendService, BackendServiceEntity: getFoo, setFoo:\n\nConverters/mappers will need to be updated: com.google.cloud.cluster.manager.networking.services.backendservice.BackendServiceResourceConverter: toResource, updateEntity: copy foo com.google.cloud.cluster.mixer.protomappers.BackendServiceMappers.ResourceMapper: ResourceMapper: add a new map call\n\nTests to update: com.google.cloud.cluster.manager.networking.services.backendservice.BackendServiceResourceConverterTest com.google.cloud.cluster.mixer.protomappers.BackendServiceMappersTest.testResourceMapping",
              "properties": {
                "backends": {
                  "type": "array",
                  "description": "The list of backends that serve this BackendService.",
                  "items": {
                    "type": "object",
                    "description": "Message containing information of one individual backend.",
                    "properties": {
                      "balancingMode": {
                        "type": "string",
                        "description": "The balancing mode of this backend, default is UTILIZATION.",
                        "enum": [
                          "RATE",
                          "UTILIZATION"
                        ]
                      },
                      "capacityScaler": {
                        "type": "number",
                        "description": "The multiplier (a value between 0.0 and 1.0) of the max capacity (CPU or RPS, depending on 'balancingMode') the group should serve up to. 0 means the group is totally drained. Default value is 1. Valid range is [0.0, 1.0].",
                        "format": "float"
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional textual description of the resource, which is provided by the client when the resource is created."
                      },
                      "group": {
                        "type": "string",
                        "description": "URL of a zonal Cloud Resource View resource. This resource view defines the list of instances that serve traffic. Member virtual machine instances from each resource view must live in the same zone as the resource view itself. No two backends in a backend service are allowed to use same Resource View resource."
                      },
                      "maxRate": {
                        "type": "integer",
                        "description": "The max RPS of the group. Can be used with either balancing mode, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                        "format": "int32"
                      },
                      "maxRatePerInstance": {
                        "type": "number",
                        "description": "The max RPS that a single backed instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                        "format": "float"
                      },
                      "maxUtilization": {
                        "type": "number",
                        "description": "Used when 'balancingMode' is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0, 1].",
                        "format": "float"
                      }
                    }
                  }
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.",
                  "format": "byte"
                },
                "healthChecks": {
                  "type": "array",
                  "description": "The list of URLs to the HttpHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required.",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#backendService"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "port": {
                  "type": "integer",
                  "description": "Deprecated in favor of port_name. The TCP port to connect on the backend. The default value is 80.",
                  "format": "int32"
                },
                "portName": {
                  "type": "string",
                  "description": "Name of backend port. The same name should appear in the resource views referenced by this service. Required."
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "HTTP"
                  ]
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "timeoutSec": {
                  "type": "integer",
                  "description": "How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.",
                  "format": "int32"
                }
              }
            }

+ Response 200

#### compute.backendServices.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/aggregated/diskTypes [/compute/v1/projects/{project}/aggregated/diskTypes{?filter,maxResults,pageToken}]

#### compute.diskTypes.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/diskTypes/{diskType} [/{project}/zones/{zone}/diskTypes/{diskType}]

#### compute.diskTypes.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + diskType (required)

+ Response 200

### Resource /{project}/zones/{zone}/diskTypes [/compute/v1/projects/{project}/zones/{zone}/diskTypes{?filter,maxResults,pageToken}]

#### compute.diskTypes.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/aggregated/disks [/compute/v1/projects/{project}/aggregated/disks{?filter,maxResults,pageToken}]

#### compute.disks.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/disks/{disk}/createSnapshot [/{project}/zones/{zone}/disks/{disk}/createSnapshot]

#### compute.disks.createSnapshot [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + disk (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A persistent disk snapshot resource.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "diskSizeGb": {
                  "type": "string",
                  "description": "Size of the persistent disk snapshot, specified in GB (output only).",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#snapshot"
                },
                "licenses": {
                  "type": "array",
                  "description": "Public visible licenses.",
                  "items": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "sourceDisk": {
                  "type": "string",
                  "description": "The source disk used to create this snapshot."
                },
                "sourceDiskId": {
                  "type": "string",
                  "description": "The 'id' value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the persistent disk snapshot (output only).",
                  "enum": [
                    "CREATING",
                    "DELETING",
                    "FAILED",
                    "READY",
                    "UPLOADING"
                  ]
                },
                "storageBytes": {
                  "type": "string",
                  "description": "A size of the the storage used by the snapshot. As snapshots share storage this number is expected to change with snapshot creation/deletion.",
                  "format": "int64"
                },
                "storageBytesStatus": {
                  "type": "string",
                  "description": "An indicator whether storageBytes is in a stable state, or it is being adjusted as a result of shared storage reallocation.",
                  "enum": [
                    "UPDATING",
                    "UP_TO_DATE"
                  ]
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/disks/{disk} [/{project}/zones/{zone}/disks/{disk}]

#### compute.disks.delete [DELETE]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + disk (required)

+ Response 200

#### compute.disks.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + disk (required)

+ Response 200

### Resource /{project}/zones/{zone}/disks [/compute/v1/projects/{project}/zones/{zone}/disks{?filter,maxResults,pageToken}]

#### compute.disks.insert [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + sourceImage

+ Request

    + Schema

            {
              "type": "object",
              "description": "A Disk resource.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#disk for disks.",
                  "default": "compute#disk"
                },
                "lastAttachTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Last attach timestamp in RFC3339 text format."
                },
                "lastDetachTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Last detach timestamp in RFC3339 text format."
                },
                "licenses": {
                  "type": "array",
                  "description": "Any applicable publicly visible licenses.",
                  "items": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "options": {
                  "type": "string",
                  "description": "Internal use only."
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server-defined fully-qualified URL for this resource."
                },
                "sizeGb": {
                  "type": "string",
                  "description": "Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk.\n\nIf you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot.",
                  "format": "int64"
                },
                "sourceImage": {
                  "type": "string",
                  "description": "The source image used to create this disk. If the source image is deleted from the system, this field will not be set, even if an image with the same name has been re-created.\n\nWhen creating a disk, you can provide a private (custom) image using the following input, and Compute Engine will use the corresponding image from your project. For example:\n\nglobal/images/my-private-image \n\nOr you can provide an image from a publicly-available project. For example, to use a Debian image from the debian-cloud project, make sure to include the project in the URL:\n\nprojects/debian-cloud/global/images/debian-7-wheezy-vYYYYMMDD \n\nwhere vYYYYMMDD is the image version. The fully-qualified URL will also work in both cases."
                },
                "sourceImageId": {
                  "type": "string",
                  "description": "The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used."
                },
                "sourceSnapshot": {
                  "type": "string",
                  "description": "The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values:  \n- https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot \n- projects/project/global/snapshots/snapshot \n- global/snapshots/snapshot"
                },
                "sourceSnapshotId": {
                  "type": "string",
                  "description": "[Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used."
                },
                "status": {
                  "type": "string",
                  "description": "[Output Only] The status of disk creation. Applicable statuses includes: CREATING, FAILED, READY, RESTORING.",
                  "enum": [
                    "CREATING",
                    "FAILED",
                    "READY",
                    "RESTORING"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "URL of the disk type resource describing which disk type to use to create the disk; provided by the client when the disk is created."
                },
                "users": {
                  "type": "array",
                  "description": "Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance",
                  "items": {
                    "type": "string"
                  }
                },
                "zone": {
                  "type": "string",
                  "description": "[Output Only] URL of the zone where the disk resides."
                }
              }
            }

+ Response 200

#### compute.disks.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/firewalls/{firewall} [/{project}/global/firewalls/{firewall}]

#### compute.firewalls.delete [DELETE]

+ Parameters

    + project (required)
  
    + firewall (required)

+ Response 200

#### compute.firewalls.get [GET]

+ Parameters

    + project (required)
  
    + firewall (required)

+ Response 200

#### compute.firewalls.patch [PATCH]

+ Parameters

    + project (required)
  
    + firewall (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A Firewall resource.",
              "properties": {
                "allowed": {
                  "type": "array",
                  "description": "The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "IPProtocol": {
                        "type": "string",
                        "description": "The IP protocol that is allowed for this rule. The protocol type is required when creating a firewall. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp), or the IP protocol number."
                      },
                      "ports": {
                        "type": "array",
                        "description": "An optional list of ports which are allowed. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, connections through any port are allowed\n\nExample inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"].",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Ony] Type of the resource. Always compute#firewall for firewall rules.",
                  "default": "compute#firewall"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "network": {
                  "type": "string",
                  "description": "URL of the network resource for this firewall rule. This field is required for creating an instance but optional when creating a firewall rule. If not specified when creating a firewall rule, the default network is used:\nglobal/networks/default\nIf you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  \n- https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network \n- projects/myproject/global/networks/my-network \n- global/networks/default"
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                },
                "sourceRanges": {
                  "type": "array",
                  "description": "The IP address blocks that this rule applies to, expressed in CIDR format. One or both of sourceRanges and sourceTags may be set.\n\nIf both properties are set, an inbound connection is allowed if the range or the tag of the source matches the sourceRanges OR matches the sourceTags property; the connection does not need to match both properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "sourceTags": {
                  "type": "array",
                  "description": "A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set.\n\nIf both properties are set, an inbound connection is allowed if the range or the tag of the source matches the sourceRanges OR matches the sourceTags property; the connection does not need to match both properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "targetTags": {
                  "type": "array",
                  "description": "A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified network.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

#### compute.firewalls.update [PUT]

+ Parameters

    + project (required)
  
    + firewall (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A Firewall resource.",
              "properties": {
                "allowed": {
                  "type": "array",
                  "description": "The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "IPProtocol": {
                        "type": "string",
                        "description": "The IP protocol that is allowed for this rule. The protocol type is required when creating a firewall. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp), or the IP protocol number."
                      },
                      "ports": {
                        "type": "array",
                        "description": "An optional list of ports which are allowed. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, connections through any port are allowed\n\nExample inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"].",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Ony] Type of the resource. Always compute#firewall for firewall rules.",
                  "default": "compute#firewall"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "network": {
                  "type": "string",
                  "description": "URL of the network resource for this firewall rule. This field is required for creating an instance but optional when creating a firewall rule. If not specified when creating a firewall rule, the default network is used:\nglobal/networks/default\nIf you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  \n- https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network \n- projects/myproject/global/networks/my-network \n- global/networks/default"
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                },
                "sourceRanges": {
                  "type": "array",
                  "description": "The IP address blocks that this rule applies to, expressed in CIDR format. One or both of sourceRanges and sourceTags may be set.\n\nIf both properties are set, an inbound connection is allowed if the range or the tag of the source matches the sourceRanges OR matches the sourceTags property; the connection does not need to match both properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "sourceTags": {
                  "type": "array",
                  "description": "A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set.\n\nIf both properties are set, an inbound connection is allowed if the range or the tag of the source matches the sourceRanges OR matches the sourceTags property; the connection does not need to match both properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "targetTags": {
                  "type": "array",
                  "description": "A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified network.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/global/firewalls [/compute/v1/projects/{project}/global/firewalls{?filter,maxResults,pageToken}]

#### compute.firewalls.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A Firewall resource.",
              "properties": {
                "allowed": {
                  "type": "array",
                  "description": "The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "IPProtocol": {
                        "type": "string",
                        "description": "The IP protocol that is allowed for this rule. The protocol type is required when creating a firewall. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp), or the IP protocol number."
                      },
                      "ports": {
                        "type": "array",
                        "description": "An optional list of ports which are allowed. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, connections through any port are allowed\n\nExample inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"].",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Ony] Type of the resource. Always compute#firewall for firewall rules.",
                  "default": "compute#firewall"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "network": {
                  "type": "string",
                  "description": "URL of the network resource for this firewall rule. This field is required for creating an instance but optional when creating a firewall rule. If not specified when creating a firewall rule, the default network is used:\nglobal/networks/default\nIf you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  \n- https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network \n- projects/myproject/global/networks/my-network \n- global/networks/default"
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                },
                "sourceRanges": {
                  "type": "array",
                  "description": "The IP address blocks that this rule applies to, expressed in CIDR format. One or both of sourceRanges and sourceTags may be set.\n\nIf both properties are set, an inbound connection is allowed if the range or the tag of the source matches the sourceRanges OR matches the sourceTags property; the connection does not need to match both properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "sourceTags": {
                  "type": "array",
                  "description": "A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set.\n\nIf both properties are set, an inbound connection is allowed if the range or the tag of the source matches the sourceRanges OR matches the sourceTags property; the connection does not need to match both properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "targetTags": {
                  "type": "array",
                  "description": "A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified network.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

#### compute.firewalls.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/aggregated/forwardingRules [/compute/v1/projects/{project}/aggregated/forwardingRules{?filter,maxResults,pageToken}]

#### compute.forwardingRules.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/forwardingRules/{forwardingRule} [/{project}/regions/{region}/forwardingRules/{forwardingRule}]

#### compute.forwardingRules.delete [DELETE]

+ Parameters

    + project (required)
  
    + region (required)
  
    + forwardingRule (required)

+ Response 200

#### compute.forwardingRules.get [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + forwardingRule (required)

+ Response 200

### Resource /{project}/regions/{region}/forwardingRules [/compute/v1/projects/{project}/regions/{region}/forwardingRules{?filter,maxResults,pageToken}]

#### compute.forwardingRules.insert [POST]

+ Parameters

    + project (required)
  
    + region (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A ForwardingRule resource. A ForwardingRule resource specifies which pool of target VMs to forward a packet to if it matches the given [IPAddress, IPProtocol, portRange] tuple.",
              "properties": {
                "IPAddress": {
                  "type": "string",
                  "description": "Value of the reserved IP address that this forwarding rule is serving on behalf of. For global forwarding rules, the address must be a global IP; for regional forwarding rules, the address must live in the same region as the forwarding rule. If left empty (default value), an ephemeral IP from the same scope (global or regional) will be assigned."
                },
                "IPProtocol": {
                  "type": "string",
                  "description": "The IP protocol to which this rule applies, valid options are 'TCP', 'UDP', 'ESP', 'AH' or 'SCTP'.",
                  "enum": [
                    "AH",
                    "ESP",
                    "SCTP",
                    "TCP",
                    "UDP"
                  ]
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#forwardingRule"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "portRange": {
                  "type": "string",
                  "description": "Applicable only when 'IPProtocol' is 'TCP', 'UDP' or 'SCTP', only packets addressed to ports in the specified range will be forwarded to 'target'. If 'portRange' is left empty (default value), all ports are forwarded. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges."
                },
                "region": {
                  "type": "string",
                  "description": "URL of the region where the regional forwarding rule resides (output only). This field is not applicable to global forwarding rules."
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "target": {
                  "type": "string",
                  "description": "The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global TargetHttpProxy resource."
                }
              }
            }

+ Response 200

#### compute.forwardingRules.list [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget [/{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget]

#### compute.forwardingRules.setTarget [POST]

+ Parameters

    + project (required)
  
    + region (required)
  
    + forwardingRule (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string"
                }
              }
            }

+ Response 200

### Resource /{project}/global/addresses/{address} [/{project}/global/addresses/{address}]

#### compute.globalAddresses.delete [DELETE]

+ Parameters

    + project (required)
  
    + address (required)

+ Response 200

#### compute.globalAddresses.get [GET]

+ Parameters

    + project (required)
  
    + address (required)

+ Response 200

### Resource /{project}/global/addresses [/compute/v1/projects/{project}/global/addresses{?filter,maxResults,pageToken}]

#### compute.globalAddresses.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A reserved address resource.",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The static external IP address represented by this resource."
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#address for addresses.",
                  "default": "compute#address"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "region": {
                  "type": "string",
                  "description": "[Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses."
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                },
                "status": {
                  "type": "string",
                  "description": "[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.",
                  "enum": [
                    "IN_USE",
                    "RESERVED"
                  ]
                },
                "users": {
                  "type": "array",
                  "description": "[Output Only] The URLs of the resources that are using this address.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

#### compute.globalAddresses.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/forwardingRules/{forwardingRule} [/{project}/global/forwardingRules/{forwardingRule}]

#### compute.globalForwardingRules.delete [DELETE]

+ Parameters

    + project (required)
  
    + forwardingRule (required)

+ Response 200

#### compute.globalForwardingRules.get [GET]

+ Parameters

    + project (required)
  
    + forwardingRule (required)

+ Response 200

### Resource /{project}/global/forwardingRules [/compute/v1/projects/{project}/global/forwardingRules{?filter,maxResults,pageToken}]

#### compute.globalForwardingRules.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A ForwardingRule resource. A ForwardingRule resource specifies which pool of target VMs to forward a packet to if it matches the given [IPAddress, IPProtocol, portRange] tuple.",
              "properties": {
                "IPAddress": {
                  "type": "string",
                  "description": "Value of the reserved IP address that this forwarding rule is serving on behalf of. For global forwarding rules, the address must be a global IP; for regional forwarding rules, the address must live in the same region as the forwarding rule. If left empty (default value), an ephemeral IP from the same scope (global or regional) will be assigned."
                },
                "IPProtocol": {
                  "type": "string",
                  "description": "The IP protocol to which this rule applies, valid options are 'TCP', 'UDP', 'ESP', 'AH' or 'SCTP'.",
                  "enum": [
                    "AH",
                    "ESP",
                    "SCTP",
                    "TCP",
                    "UDP"
                  ]
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#forwardingRule"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "portRange": {
                  "type": "string",
                  "description": "Applicable only when 'IPProtocol' is 'TCP', 'UDP' or 'SCTP', only packets addressed to ports in the specified range will be forwarded to 'target'. If 'portRange' is left empty (default value), all ports are forwarded. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges."
                },
                "region": {
                  "type": "string",
                  "description": "URL of the region where the regional forwarding rule resides (output only). This field is not applicable to global forwarding rules."
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "target": {
                  "type": "string",
                  "description": "The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global TargetHttpProxy resource."
                }
              }
            }

+ Response 200

#### compute.globalForwardingRules.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/forwardingRules/{forwardingRule}/setTarget [/{project}/global/forwardingRules/{forwardingRule}/setTarget]

#### compute.globalForwardingRules.setTarget [POST]

+ Parameters

    + project (required)
  
    + forwardingRule (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string"
                }
              }
            }

+ Response 200

### Resource /{project}/aggregated/operations [/compute/v1/projects/{project}/aggregated/operations{?filter,maxResults,pageToken}]

#### compute.globalOperations.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/operations/{operation} [/{project}/global/operations/{operation}]

#### compute.globalOperations.delete [DELETE]

+ Parameters

    + project (required)
  
    + operation (required)

+ Response 200

#### compute.globalOperations.get [GET]

+ Parameters

    + project (required)
  
    + operation (required)

+ Response 200

### Resource /{project}/global/operations [/compute/v1/projects/{project}/global/operations{?filter,maxResults,pageToken}]

#### compute.globalOperations.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/httpHealthChecks/{httpHealthCheck} [/{project}/global/httpHealthChecks/{httpHealthCheck}]

#### compute.httpHealthChecks.delete [DELETE]

+ Parameters

    + project (required)
  
    + httpHealthCheck (required)

+ Response 200

#### compute.httpHealthChecks.get [GET]

+ Parameters

    + project (required)
  
    + httpHealthCheck (required)

+ Response 200

#### compute.httpHealthChecks.patch [PATCH]

+ Parameters

    + project (required)
  
    + httpHealthCheck (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An HttpHealthCheck resource. This resource defines a template for how individual VMs should be checked for health, via HTTP.",
              "properties": {
                "checkIntervalSec": {
                  "type": "integer",
                  "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
                  "format": "int32"
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "healthyThreshold": {
                  "type": "integer",
                  "description": "A so-far unhealthy VM will be marked healthy after this many consecutive successes. The default value is 2.",
                  "format": "int32"
                },
                "host": {
                  "type": "string",
                  "description": "The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used."
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#httpHealthCheck"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "port": {
                  "type": "integer",
                  "description": "The TCP port number for the HTTP health check request. The default value is 80.",
                  "format": "int32"
                },
                "requestPath": {
                  "type": "string",
                  "description": "The request path of the HTTP health check request. The default value is \"/\"."
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "timeoutSec": {
                  "type": "integer",
                  "description": "How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.",
                  "format": "int32"
                },
                "unhealthyThreshold": {
                  "type": "integer",
                  "description": "A so-far healthy VM will be marked unhealthy after this many consecutive failures. The default value is 2.",
                  "format": "int32"
                }
              }
            }

+ Response 200

#### compute.httpHealthChecks.update [PUT]

+ Parameters

    + project (required)
  
    + httpHealthCheck (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An HttpHealthCheck resource. This resource defines a template for how individual VMs should be checked for health, via HTTP.",
              "properties": {
                "checkIntervalSec": {
                  "type": "integer",
                  "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
                  "format": "int32"
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "healthyThreshold": {
                  "type": "integer",
                  "description": "A so-far unhealthy VM will be marked healthy after this many consecutive successes. The default value is 2.",
                  "format": "int32"
                },
                "host": {
                  "type": "string",
                  "description": "The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used."
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#httpHealthCheck"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "port": {
                  "type": "integer",
                  "description": "The TCP port number for the HTTP health check request. The default value is 80.",
                  "format": "int32"
                },
                "requestPath": {
                  "type": "string",
                  "description": "The request path of the HTTP health check request. The default value is \"/\"."
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "timeoutSec": {
                  "type": "integer",
                  "description": "How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.",
                  "format": "int32"
                },
                "unhealthyThreshold": {
                  "type": "integer",
                  "description": "A so-far healthy VM will be marked unhealthy after this many consecutive failures. The default value is 2.",
                  "format": "int32"
                }
              }
            }

+ Response 200

### Resource /{project}/global/httpHealthChecks [/compute/v1/projects/{project}/global/httpHealthChecks{?filter,maxResults,pageToken}]

#### compute.httpHealthChecks.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An HttpHealthCheck resource. This resource defines a template for how individual VMs should be checked for health, via HTTP.",
              "properties": {
                "checkIntervalSec": {
                  "type": "integer",
                  "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
                  "format": "int32"
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "healthyThreshold": {
                  "type": "integer",
                  "description": "A so-far unhealthy VM will be marked healthy after this many consecutive successes. The default value is 2.",
                  "format": "int32"
                },
                "host": {
                  "type": "string",
                  "description": "The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used."
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#httpHealthCheck"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "port": {
                  "type": "integer",
                  "description": "The TCP port number for the HTTP health check request. The default value is 80.",
                  "format": "int32"
                },
                "requestPath": {
                  "type": "string",
                  "description": "The request path of the HTTP health check request. The default value is \"/\"."
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "timeoutSec": {
                  "type": "integer",
                  "description": "How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.",
                  "format": "int32"
                },
                "unhealthyThreshold": {
                  "type": "integer",
                  "description": "A so-far healthy VM will be marked unhealthy after this many consecutive failures. The default value is 2.",
                  "format": "int32"
                }
              }
            }

+ Response 200

#### compute.httpHealthChecks.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/images/{image} [/{project}/global/images/{image}]

#### compute.images.delete [DELETE]

+ Parameters

    + project (required)
  
    + image (required)

+ Response 200

#### compute.images.get [GET]

+ Parameters

    + project (required)
  
    + image (required)

+ Response 200

### Resource /{project}/global/images/{image}/deprecate [/{project}/global/images/{image}/deprecate]

#### compute.images.deprecate [POST]

+ Parameters

    + project (required)
  
    + image (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "Deprecation status for a public resource.",
              "properties": {
                "deleted": {
                  "type": "string",
                  "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED."
                },
                "deprecated": {
                  "type": "string",
                  "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED."
                },
                "obsolete": {
                  "type": "string",
                  "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE."
                },
                "replacement": {
                  "type": "string",
                  "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource."
                },
                "state": {
                  "type": "string",
                  "description": "The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.",
                  "enum": [
                    "DELETED",
                    "DEPRECATED",
                    "OBSOLETE"
                  ]
                }
              }
            }

+ Response 200

### Resource /{project}/global/images [/compute/v1/projects/{project}/global/images{?filter,maxResults,pageToken}]

#### compute.images.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An Image resource.",
              "properties": {
                "archiveSizeBytes": {
                  "type": "string",
                  "description": "Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).",
                  "format": "int64"
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "deprecated": {
                  "type": "object",
                  "description": "Deprecation status for a public resource.",
                  "properties": {
                    "deleted": {
                      "type": "string",
                      "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED."
                    },
                    "deprecated": {
                      "type": "string",
                      "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED."
                    },
                    "obsolete": {
                      "type": "string",
                      "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE."
                    },
                    "replacement": {
                      "type": "string",
                      "description": "The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource."
                    },
                    "state": {
                      "type": "string",
                      "description": "The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.",
                      "enum": [
                        "DELETED",
                        "DEPRECATED",
                        "OBSOLETE"
                      ]
                    }
                  }
                },
                "description": {
                  "type": "string",
                  "description": "Textual description of the resource; provided by the client when the resource is created."
                },
                "diskSizeGb": {
                  "type": "string",
                  "description": "Size of the image when restored onto a persistent disk (in GB).",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#image for images.",
                  "default": "compute#image"
                },
                "licenses": {
                  "type": "array",
                  "description": "Any applicable publicly visible licenses.",
                  "items": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "rawDisk": {
                  "type": "object",
                  "description": "The parameters of the raw disk image.",
                  "properties": {
                    "containerType": {
                      "type": "string",
                      "description": "The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.",
                      "enum": [
                        "TAR"
                      ]
                    },
                    "sha1Checksum": {
                      "type": "string",
                      "description": "An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the disk image is created.",
                      "pattern": "[a-f0-9]{40}"
                    },
                    "source": {
                      "type": "string",
                      "description": "The full Google Cloud Storage URL where the disk image is stored. You must provide either this property or the sourceDisk property but not both."
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                },
                "sourceDisk": {
                  "type": "string",
                  "description": "URL of the The source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/disk/disk \n- projects/project/zones/zone/disk/disk \n- zones/zone/disks/disk"
                },
                "sourceDiskId": {
                  "type": "string",
                  "description": "The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name."
                },
                "sourceType": {
                  "type": "string",
                  "description": "The type of the image used to create this disk. The default and only value is RAW",
                  "default": "RAW",
                  "enum": [
                    "RAW"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "[Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.",
                  "enum": [
                    "FAILED",
                    "PENDING",
                    "READY"
                  ]
                }
              }
            }

+ Response 200

#### compute.images.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/instanceTemplates/{instanceTemplate} [/{project}/global/instanceTemplates/{instanceTemplate}]

#### compute.instanceTemplates.delete [DELETE]

+ Parameters

    + project (required)
  
    + instanceTemplate (required)

+ Response 200

#### compute.instanceTemplates.get [GET]

+ Parameters

    + project (required)
  
    + instanceTemplate (required)

+ Response 200

### Resource /{project}/global/instanceTemplates [/compute/v1/projects/{project}/global/instanceTemplates{?filter,maxResults,pageToken}]

#### compute.instanceTemplates.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An Instance Template resource.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] The creation timestamp for this instance template in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional text description for the instance template."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] A unique identifier for this instance template. The server defines this identifier.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] The resource type, which is always compute#instanceTemplate for instance templates.",
                  "default": "compute#instanceTemplate"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the instance template. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "properties": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "canIpForward": {
                      "type": "boolean",
                      "description": "A boolean that specifies if instances created from this template can send packets with source IP addresses other than their own or receive packets with destination IP addresses other than their own. If you use these instances as an IP gateway or as the next-hop in a Route resource, specify true. Otherwise, specify false."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional text description for the instances that are created from this instance template."
                    },
                    "disks": {
                      "type": "array",
                      "description": "An array of disks that are associated with the instances that are created from this template.",
                      "items": {
                        "type": "object",
                        "description": "An instance-attached disk resource.",
                        "properties": {
                          "autoDelete": {
                            "type": "boolean",
                            "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."
                          },
                          "boot": {
                            "type": "boolean",
                            "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
                          },
                          "deviceName": {
                            "type": "string",
                            "description": "Specifies a unique device name of your choice that is reflected into the /dev/ tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.\n\nIf not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
                          },
                          "index": {
                            "type": "integer",
                            "description": "Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.",
                            "format": "int32"
                          },
                          "initializeParams": {
                            "type": "object",
                            "description": "[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.\n\nThis property is mutually exclusive with the source property; you can only define one or the other, but not both.",
                            "properties": {
                              "diskName": {
                                "type": "string",
                                "description": "Specifies the disk name. If not specified, the default is to use the name of the instance."
                              },
                              "diskSizeGb": {
                                "type": "string",
                                "description": "Specifies the size of the disk in base-2 GB.",
                                "format": "int64"
                              },
                              "diskType": {
                                "type": "string",
                                "description": "Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example:\n\nhttps://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard \n\nOther values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType \n- projects/project/zones/zone/diskTypes/diskType \n- zones/zone/diskTypes/diskType"
                              },
                              "sourceImage": {
                                "type": "string",
                                "description": "A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project. For example:\n\nglobal/images/my-private-image \n\nOr you can provide an image from a publicly-available project. For example, to use a Debian image from the debian-cloud project, make sure to include the project in the URL:\n\nprojects/debian-cloud/global/images/debian-7-wheezy-vYYYYMMDD \n\nwhere vYYYYMMDD is the image version. The fully-qualified URL will also work in both cases."
                              }
                            }
                          },
                          "interface": {
                            "type": "string",
                            "enum": [
                              "NVME",
                              "SCSI"
                            ]
                          },
                          "kind": {
                            "type": "string",
                            "description": "[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.",
                            "default": "compute#attachedDisk"
                          },
                          "licenses": {
                            "type": "array",
                            "description": "[Output Only] Any valid publicly visible licenses.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "mode": {
                            "type": "string",
                            "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
                            "enum": [
                              "READ_ONLY",
                              "READ_WRITE"
                            ]
                          },
                          "source": {
                            "type": "string",
                            "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks."
                          },
                          "type": {
                            "type": "string",
                            "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                            "enum": [
                              "PERSISTENT",
                              "SCRATCH"
                            ]
                          }
                        }
                      }
                    },
                    "machineType": {
                      "type": "string",
                      "description": "The machine type to use for instances that are created from this template."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "A metadata key/value entry.",
                      "properties": {
                        "fingerprint": {
                          "type": "string",
                          "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.",
                          "format": "byte"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.",
                                "pattern": "[a-zA-Z0-9-_]{1,128}"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes."
                              }
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "description": "[Output Only] Type of the resource. Always compute#metadata for metadata.",
                          "default": "compute#metadata"
                        }
                      }
                    },
                    "networkInterfaces": {
                      "type": "array",
                      "description": "An array of network access configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only supported access configuration. If you do not specify any access configurations, the instances that are created from this template will have no external internet access.",
                      "items": {
                        "type": "object",
                        "description": "A network interface resource attached to an instance.",
                        "properties": {
                          "accessConfigs": {
                            "type": "array",
                            "description": "An array of configurations for this interface. Currently, <codeONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
                            "items": {
                              "type": "object",
                              "description": "An access configuration attached to an instance's network interface.",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "description": "[Output Only] Type of the resource. Always compute#accessConfig for access configs.",
                                  "default": "compute#accessConfig"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of this access configuration."
                                },
                                "natIP": {
                                  "type": "string",
                                  "description": "An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of configuration. The default and only option is ONE_TO_ONE_NAT.",
                                  "default": "ONE_TO_ONE_NAT",
                                  "enum": [
                                    "ONE_TO_ONE_NAT"
                                  ]
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc."
                          },
                          "network": {
                            "type": "string",
                            "description": "URL of the network resource for this instance. This is required for creating an instance but optional when creating a firewall rule. If not specified when creating a firewall rule, the default network is used:\n\nglobal/networks/default \n\nIf you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  \n- https://www.googleapis.com/compute/v1/projects/project/global/networks/network \n- projects/project/global/networks/network \n- global/networks/default"
                          },
                          "networkIP": {
                            "type": "string",
                            "description": "[Output Only] An optional IPV4 internal network address assigned to the instance for this network interface."
                          }
                        }
                      }
                    },
                    "scheduling": {
                      "type": "object",
                      "description": "Sets the scheduling options for an Instance.",
                      "properties": {
                        "automaticRestart": {
                          "type": "boolean",
                          "description": "Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user)."
                        },
                        "onHostMaintenance": {
                          "type": "string",
                          "description": "Defines the maintenance behavior for this instance. The default behavior is MIGRATE. For more information, see Setting maintenance behavior.",
                          "enum": [
                            "MIGRATE",
                            "TERMINATE"
                          ]
                        },
                        "preemptible": {
                          "type": "boolean",
                          "description": "Whether the Instance is preemptible."
                        }
                      }
                    },
                    "serviceAccounts": {
                      "type": "array",
                      "description": "A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this template. Use metadata queries to obtain the access tokens for these instances.",
                      "items": {
                        "type": "object",
                        "description": "A service account.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email address of the service account."
                          },
                          "scopes": {
                            "type": "array",
                            "description": "The list of scopes to be made available for this service account.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "tags": {
                      "type": "object",
                      "description": "A set of instance tags.",
                      "properties": {
                        "fingerprint": {
                          "type": "string",
                          "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.\n\nTo see the latest fingerprint, make get() request to the instance.",
                          "format": "byte"
                        },
                        "items": {
                          "type": "array",
                          "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] The URL for this instance template. The server defines this URL."
                }
              }
            }

+ Response 200

#### compute.instanceTemplates.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/addAccessConfig [/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/addAccessConfig{?networkInterface}]

#### compute.instances.addAccessConfig [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)
  
    + networkInterface (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access configuration attached to an instance's network interface.",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#accessConfig for access configs.",
                  "default": "compute#accessConfig"
                },
                "name": {
                  "type": "string",
                  "description": "Name of this access configuration."
                },
                "natIP": {
                  "type": "string",
                  "description": "An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance."
                },
                "type": {
                  "type": "string",
                  "description": "The type of configuration. The default and only option is ONE_TO_ONE_NAT.",
                  "default": "ONE_TO_ONE_NAT",
                  "enum": [
                    "ONE_TO_ONE_NAT"
                  ]
                }
              }
            }

+ Response 200

### Resource /{project}/aggregated/instances [/compute/v1/projects/{project}/aggregated/instances{?filter,maxResults,pageToken}]

#### compute.instances.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/attachDisk [/{project}/zones/{zone}/instances/{instance}/attachDisk]

#### compute.instances.attachDisk [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An instance-attached disk resource.",
              "properties": {
                "autoDelete": {
                  "type": "boolean",
                  "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."
                },
                "boot": {
                  "type": "boolean",
                  "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
                },
                "deviceName": {
                  "type": "string",
                  "description": "Specifies a unique device name of your choice that is reflected into the /dev/ tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.\n\nIf not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
                },
                "index": {
                  "type": "integer",
                  "description": "Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.",
                  "format": "int32"
                },
                "initializeParams": {
                  "type": "object",
                  "description": "[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.\n\nThis property is mutually exclusive with the source property; you can only define one or the other, but not both.",
                  "properties": {
                    "diskName": {
                      "type": "string",
                      "description": "Specifies the disk name. If not specified, the default is to use the name of the instance."
                    },
                    "diskSizeGb": {
                      "type": "string",
                      "description": "Specifies the size of the disk in base-2 GB.",
                      "format": "int64"
                    },
                    "diskType": {
                      "type": "string",
                      "description": "Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example:\n\nhttps://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard \n\nOther values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType \n- projects/project/zones/zone/diskTypes/diskType \n- zones/zone/diskTypes/diskType"
                    },
                    "sourceImage": {
                      "type": "string",
                      "description": "A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project. For example:\n\nglobal/images/my-private-image \n\nOr you can provide an image from a publicly-available project. For example, to use a Debian image from the debian-cloud project, make sure to include the project in the URL:\n\nprojects/debian-cloud/global/images/debian-7-wheezy-vYYYYMMDD \n\nwhere vYYYYMMDD is the image version. The fully-qualified URL will also work in both cases."
                    }
                  }
                },
                "interface": {
                  "type": "string",
                  "enum": [
                    "NVME",
                    "SCSI"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.",
                  "default": "compute#attachedDisk"
                },
                "licenses": {
                  "type": "array",
                  "description": "[Output Only] Any valid publicly visible licenses.",
                  "items": {
                    "type": "string"
                  }
                },
                "mode": {
                  "type": "string",
                  "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
                  "enum": [
                    "READ_ONLY",
                    "READ_WRITE"
                  ]
                },
                "source": {
                  "type": "string",
                  "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks."
                },
                "type": {
                  "type": "string",
                  "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                  "enum": [
                    "PERSISTENT",
                    "SCRATCH"
                  ]
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance} [/{project}/zones/{zone}/instances/{instance}]

#### compute.instances.delete [DELETE]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Response 200

#### compute.instances.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/deleteAccessConfig [/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig{?accessConfig,networkInterface}]

#### compute.instances.deleteAccessConfig [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)
  
    + accessConfig (required)
  
    + networkInterface (required)

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/detachDisk [/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/detachDisk{?deviceName}]

#### compute.instances.detachDisk [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)
  
    + deviceName (required)

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/serialPort [/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/serialPort{?port}]

#### compute.instances.getSerialPortOutput [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)
  
    + port

+ Response 200

### Resource /{project}/zones/{zone}/instances [/compute/v1/projects/{project}/zones/{zone}/instances{?filter,maxResults,pageToken}]

#### compute.instances.insert [POST]

+ Parameters

    + project (required)
  
    + zone (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An Instance resource.",
              "properties": {
                "canIpForward": {
                  "type": "boolean",
                  "description": "Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding."
                },
                "cpuPlatform": {
                  "type": "string",
                  "description": "[Output Only] The CPU platform used by this instance."
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "disks": {
                  "type": "array",
                  "description": "Array of disks associated with this instance. Persistent disks must be created before you can assign them.",
                  "items": {
                    "type": "object",
                    "description": "An instance-attached disk resource.",
                    "properties": {
                      "autoDelete": {
                        "type": "boolean",
                        "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."
                      },
                      "boot": {
                        "type": "boolean",
                        "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
                      },
                      "deviceName": {
                        "type": "string",
                        "description": "Specifies a unique device name of your choice that is reflected into the /dev/ tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.\n\nIf not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
                      },
                      "index": {
                        "type": "integer",
                        "description": "Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.",
                        "format": "int32"
                      },
                      "initializeParams": {
                        "type": "object",
                        "description": "[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.\n\nThis property is mutually exclusive with the source property; you can only define one or the other, but not both.",
                        "properties": {
                          "diskName": {
                            "type": "string",
                            "description": "Specifies the disk name. If not specified, the default is to use the name of the instance."
                          },
                          "diskSizeGb": {
                            "type": "string",
                            "description": "Specifies the size of the disk in base-2 GB.",
                            "format": "int64"
                          },
                          "diskType": {
                            "type": "string",
                            "description": "Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example:\n\nhttps://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard \n\nOther values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType \n- projects/project/zones/zone/diskTypes/diskType \n- zones/zone/diskTypes/diskType"
                          },
                          "sourceImage": {
                            "type": "string",
                            "description": "A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project. For example:\n\nglobal/images/my-private-image \n\nOr you can provide an image from a publicly-available project. For example, to use a Debian image from the debian-cloud project, make sure to include the project in the URL:\n\nprojects/debian-cloud/global/images/debian-7-wheezy-vYYYYMMDD \n\nwhere vYYYYMMDD is the image version. The fully-qualified URL will also work in both cases."
                          }
                        }
                      },
                      "interface": {
                        "type": "string",
                        "enum": [
                          "NVME",
                          "SCSI"
                        ]
                      },
                      "kind": {
                        "type": "string",
                        "description": "[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.",
                        "default": "compute#attachedDisk"
                      },
                      "licenses": {
                        "type": "array",
                        "description": "[Output Only] Any valid publicly visible licenses.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "mode": {
                        "type": "string",
                        "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
                        "enum": [
                          "READ_ONLY",
                          "READ_WRITE"
                        ]
                      },
                      "source": {
                        "type": "string",
                        "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                        "enum": [
                          "PERSISTENT",
                          "SCRATCH"
                        ]
                      }
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#instance for instances.",
                  "default": "compute#instance"
                },
                "machineType": {
                  "type": "string",
                  "description": "Full or partial URL of the machine type resource to use for this instance. This is provided by the client when the instance is created. For example, the following is a valid partial url:\n\nzones/zone/machineTypes/machine-type"
                },
                "metadata": {
                  "type": "object",
                  "description": "A metadata key/value entry.",
                  "properties": {
                    "fingerprint": {
                      "type": "string",
                      "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.",
                      "format": "byte"
                    },
                    "items": {
                      "type": "array",
                      "description": "Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.",
                            "pattern": "[a-zA-Z0-9-_]{1,128}"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes."
                          }
                        }
                      }
                    },
                    "kind": {
                      "type": "string",
                      "description": "[Output Only] Type of the resource. Always compute#metadata for metadata.",
                      "default": "compute#metadata"
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
                },
                "networkInterfaces": {
                  "type": "array",
                  "description": "An array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet.",
                  "items": {
                    "type": "object",
                    "description": "A network interface resource attached to an instance.",
                    "properties": {
                      "accessConfigs": {
                        "type": "array",
                        "description": "An array of configurations for this interface. Currently, <codeONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
                        "items": {
                          "type": "object",
                          "description": "An access configuration attached to an instance's network interface.",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "description": "[Output Only] Type of the resource. Always compute#accessConfig for access configs.",
                              "default": "compute#accessConfig"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of this access configuration."
                            },
                            "natIP": {
                              "type": "string",
                              "description": "An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of configuration. The default and only option is ONE_TO_ONE_NAT.",
                              "default": "ONE_TO_ONE_NAT",
                              "enum": [
                                "ONE_TO_ONE_NAT"
                              ]
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc."
                      },
                      "network": {
                        "type": "string",
                        "description": "URL of the network resource for this instance. This is required for creating an instance but optional when creating a firewall rule. If not specified when creating a firewall rule, the default network is used:\n\nglobal/networks/default \n\nIf you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  \n- https://www.googleapis.com/compute/v1/projects/project/global/networks/network \n- projects/project/global/networks/network \n- global/networks/default"
                      },
                      "networkIP": {
                        "type": "string",
                        "description": "[Output Only] An optional IPV4 internal network address assigned to the instance for this network interface."
                      }
                    }
                  }
                },
                "scheduling": {
                  "type": "object",
                  "description": "Sets the scheduling options for an Instance.",
                  "properties": {
                    "automaticRestart": {
                      "type": "boolean",
                      "description": "Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user)."
                    },
                    "onHostMaintenance": {
                      "type": "string",
                      "description": "Defines the maintenance behavior for this instance. The default behavior is MIGRATE. For more information, see Setting maintenance behavior.",
                      "enum": [
                        "MIGRATE",
                        "TERMINATE"
                      ]
                    },
                    "preemptible": {
                      "type": "boolean",
                      "description": "Whether the Instance is preemptible."
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for this resource."
                },
                "serviceAccounts": {
                  "type": "array",
                  "description": "A list of service accounts, with their specified scopes, authorized for this instance. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Authenticating from Google Compute Engine for more information.",
                  "items": {
                    "type": "object",
                    "description": "A service account.",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the service account."
                      },
                      "scopes": {
                        "type": "array",
                        "description": "The list of scopes to be made available for this service account.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "description": "[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, and TERMINATED.",
                  "enum": [
                    "PROVISIONING",
                    "RUNNING",
                    "STAGING",
                    "STOPPED",
                    "STOPPING",
                    "SUSPENDED",
                    "SUSPENDING",
                    "TERMINATED"
                  ]
                },
                "statusMessage": {
                  "type": "string",
                  "description": "[Output Only] An optional, human-readable explanation of the status."
                },
                "tags": {
                  "type": "object",
                  "description": "A set of instance tags.",
                  "properties": {
                    "fingerprint": {
                      "type": "string",
                      "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.\n\nTo see the latest fingerprint, make get() request to the instance.",
                      "format": "byte"
                    },
                    "items": {
                      "type": "array",
                      "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "zone": {
                  "type": "string",
                  "description": "[Output Only] URL of the zone where the instance resides."
                }
              }
            }

+ Response 200

#### compute.instances.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/reset [/{project}/zones/{zone}/instances/{instance}/reset]

#### compute.instances.reset [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete [/compute/v1/projects/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete{?autoDelete,deviceName}]

#### compute.instances.setDiskAutoDelete [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)
  
    + autoDelete (required)
  
    + deviceName (required)

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/setMetadata [/{project}/zones/{zone}/instances/{instance}/setMetadata]

#### compute.instances.setMetadata [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A metadata key/value entry.",
              "properties": {
                "fingerprint": {
                  "type": "string",
                  "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.",
                  "format": "byte"
                },
                "items": {
                  "type": "array",
                  "description": "Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.",
                        "pattern": "[a-zA-Z0-9-_]{1,128}"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes."
                      }
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#metadata for metadata.",
                  "default": "compute#metadata"
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/setScheduling [/{project}/zones/{zone}/instances/{instance}/setScheduling]

#### compute.instances.setScheduling [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "Sets the scheduling options for an Instance.",
              "properties": {
                "automaticRestart": {
                  "type": "boolean",
                  "description": "Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user)."
                },
                "onHostMaintenance": {
                  "type": "string",
                  "description": "Defines the maintenance behavior for this instance. The default behavior is MIGRATE. For more information, see Setting maintenance behavior.",
                  "enum": [
                    "MIGRATE",
                    "TERMINATE"
                  ]
                },
                "preemptible": {
                  "type": "boolean",
                  "description": "Whether the Instance is preemptible."
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/setTags [/{project}/zones/{zone}/instances/{instance}/setTags]

#### compute.instances.setTags [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A set of instance tags.",
              "properties": {
                "fingerprint": {
                  "type": "string",
                  "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.\n\nTo see the latest fingerprint, make get() request to the instance.",
                  "format": "byte"
                },
                "items": {
                  "type": "array",
                  "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/start [/{project}/zones/{zone}/instances/{instance}/start]

#### compute.instances.start [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Response 200

### Resource /{project}/zones/{zone}/instances/{instance}/stop [/{project}/zones/{zone}/instances/{instance}/stop]

#### compute.instances.stop [POST]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + instance (required)

+ Response 200

### Resource /{project}/global/licenses/{license} [/{project}/global/licenses/{license}]

#### compute.licenses.get [GET]

+ Parameters

    + project (required)
  
    + license (required)

+ Response 200

### Resource /{project}/aggregated/machineTypes [/compute/v1/projects/{project}/aggregated/machineTypes{?filter,maxResults,pageToken}]

#### compute.machineTypes.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/machineTypes/{machineType} [/{project}/zones/{zone}/machineTypes/{machineType}]

#### compute.machineTypes.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + machineType (required)

+ Response 200

### Resource /{project}/zones/{zone}/machineTypes [/compute/v1/projects/{project}/zones/{zone}/machineTypes{?filter,maxResults,pageToken}]

#### compute.machineTypes.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/networks/{network} [/{project}/global/networks/{network}]

#### compute.networks.delete [DELETE]

+ Parameters

    + project (required)
  
    + network (required)

+ Response 200

#### compute.networks.get [GET]

+ Parameters

    + project (required)
  
    + network (required)

+ Response 200

### Resource /{project}/global/networks [/compute/v1/projects/{project}/global/networks{?filter,maxResults,pageToken}]

#### compute.networks.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A network resource.",
              "properties": {
                "IPv4Range": {
                  "type": "string",
                  "description": "The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.",
                  "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}/[0-9]{1,2}"
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "gatewayIPv4": {
                  "type": "string",
                  "description": "A gateway address for default routing to other networks. This value is read only and is selected by the Google Compute Engine, typically as the first usable address in the IPv4Range.",
                  "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}"
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource; defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#network for networks.",
                  "default": "compute#network"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                }
              }
            }

+ Response 200

#### compute.networks.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project} [/{project}]

#### compute.projects.get [GET]

+ Parameters

    + project (required)

+ Response 200

### Resource /{project}/moveDisk [/{project}/moveDisk]

#### compute.projects.moveDisk [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "destinationZone": {
                  "type": "string",
                  "description": "The URL of the destination zone to move the disk to. This can be a full or partial URL. For example, the following are all valid URLs to a zone:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone \n- projects/project/zones/zone \n- zones/zone"
                },
                "targetDisk": {
                  "type": "string",
                  "description": "The URL of the target disk to move. This can be a full or partial URL. For example, the following are all valid URLs to a disk:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk \n- projects/project/zones/zone/disks/disk \n- zones/zone/disks/disk"
                }
              }
            }

+ Response 200

### Resource /{project}/moveInstance [/{project}/moveInstance]

#### compute.projects.moveInstance [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "destinationZone": {
                  "type": "string",
                  "description": "The URL of the destination zone to move the instance to. This can be a full or partial URL. For example, the following are all valid URLs to a zone:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone \n- projects/project/zones/zone \n- zones/zone"
                },
                "targetInstance": {
                  "type": "string",
                  "description": "The URL of the target instance to move. This can be a full or partial URL. For example, the following are all valid URLs to an instance:  \n- https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance \n- projects/project/zones/zone/instances/instance \n- zones/zone/instances/instance"
                }
              }
            }

+ Response 200

### Resource /{project}/setCommonInstanceMetadata [/{project}/setCommonInstanceMetadata]

#### compute.projects.setCommonInstanceMetadata [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A metadata key/value entry.",
              "properties": {
                "fingerprint": {
                  "type": "string",
                  "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.",
                  "format": "byte"
                },
                "items": {
                  "type": "array",
                  "description": "Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.",
                        "pattern": "[a-zA-Z0-9-_]{1,128}"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes."
                      }
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of the resource. Always compute#metadata for metadata.",
                  "default": "compute#metadata"
                }
              }
            }

+ Response 200

### Resource /{project}/setUsageExportBucket [/{project}/setUsageExportBucket]

#### compute.projects.setUsageExportBucket [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "The location in Cloud Storage and naming method of the daily usage report. Contains bucket_name and report_name prefix.",
              "properties": {
                "bucketName": {
                  "type": "string",
                  "description": "The name of an existing bucket in Cloud Storage where the usage report object is stored. The Google Service Account is granted write access to this bucket. This is just the bucket name, with no gs:// or https://storage.googleapis.com/ in front of it."
                },
                "reportNamePrefix": {
                  "type": "string",
                  "description": "An optional prefix for the name of the usage report object stored in bucketName. If not supplied, defaults to usage. The report is stored as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where YYYYMMDD is the day of the usage according to Pacific Time. If you supply a prefix, it should conform to Cloud Storage object naming conventions."
                }
              }
            }

+ Response 200

### Resource /{project}/regions/{region}/operations/{operation} [/{project}/regions/{region}/operations/{operation}]

#### compute.regionOperations.delete [DELETE]

+ Parameters

    + project (required)
  
    + region (required)
  
    + operation (required)

+ Response 200

#### compute.regionOperations.get [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + operation (required)

+ Response 200

### Resource /{project}/regions/{region}/operations [/compute/v1/projects/{project}/regions/{region}/operations{?filter,maxResults,pageToken}]

#### compute.regionOperations.list [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region} [/{project}/regions/{region}]

#### compute.regions.get [GET]

+ Parameters

    + project (required)
  
    + region (required)

+ Response 200

### Resource /{project}/regions [/compute/v1/projects/{project}/regions{?filter,maxResults,pageToken}]

#### compute.regions.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/routes/{route} [/{project}/global/routes/{route}]

#### compute.routes.delete [DELETE]

+ Parameters

    + project (required)
  
    + route (required)

+ Response 200

#### compute.routes.get [GET]

+ Parameters

    + project (required)
  
    + route (required)

+ Response 200

### Resource /{project}/global/routes [/compute/v1/projects/{project}/global/routes{?filter,maxResults,pageToken}]

#### compute.routes.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "The route resource. A Route is a rule that specifies how certain packets should be handled by the virtual network. Routes are associated with VMs by tag and the set of Routes for a particular VM is called its routing table. For each packet leaving a VM, the system searches that VM's routing table for a single best matching Route. Routes match packets by destination IP address, preferring smaller or more specific ranges over larger ones. If there is a tie, the system selects the Route with the smallest priority value. If there is still a tie, it uses the layer three and four packet headers to select just one of the remaining matching Routes. The packet is then forwarded as specified by the next_hop field of the winning Route -- either to another VM destination, a VM gateway or a GCE operated gateway. Packets that do not match any Route in the sending VM's routing table will be dropped.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "destRange": {
                  "type": "string",
                  "description": "Which packets does this route apply to?"
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#route"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "network": {
                  "type": "string",
                  "description": "URL of the network to which this route is applied; provided by the client when the route is created."
                },
                "nextHopGateway": {
                  "type": "string",
                  "description": "The URL to a gateway that should handle matching packets."
                },
                "nextHopInstance": {
                  "type": "string",
                  "description": "The URL to an instance that should handle matching packets."
                },
                "nextHopIp": {
                  "type": "string",
                  "description": "The network IP address of an instance that should handle matching packets."
                },
                "nextHopNetwork": {
                  "type": "string",
                  "description": "The URL of the local network if it should handle matching packets."
                },
                "nextHopVpnTunnel": {
                  "type": "string",
                  "description": "The URL to a VpnTunnel that should handle matching packets."
                },
                "priority": {
                  "type": "integer",
                  "description": "Breaks ties between Routes of equal specificity. Routes with smaller values win when tied with routes with larger values. Default value is 1000. A valid range is between 0 and 65535.",
                  "format": "uint32"
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "tags": {
                  "type": "array",
                  "description": "A list of instance tags to which this route applies.",
                  "items": {
                    "type": "string"
                  }
                },
                "warnings": {
                  "type": "array",
                  "description": "If potential misconfigurations are detected for this route, this field will be populated with warning messages.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The warning type identifier for this warning.",
                        "enum": [
                          "DEPRECATED_RESOURCE_USED",
                          "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                          "INJECTED_KERNELS_DEPRECATED",
                          "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                          "NEXT_HOP_CANNOT_IP_FORWARD",
                          "NEXT_HOP_INSTANCE_NOT_FOUND",
                          "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                          "NEXT_HOP_NOT_RUNNING",
                          "NOT_CRITICAL_ERROR",
                          "NO_RESULTS_ON_PAGE",
                          "REQUIRED_TOS_AGREEMENT",
                          "RESOURCE_NOT_DELETED",
                          "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                          "UNREACHABLE"
                        ]
                      },
                      "data": {
                        "type": "array",
                        "description": "[Output Only] Metadata for this warning in key: value format.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "[Output Only] A key for the warning data."
                            },
                            "value": {
                              "type": "string",
                              "description": "[Output Only] A warning data value corresponding to the key."
                            }
                          }
                        }
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] Optional human-readable details for this warning."
                      }
                    }
                  }
                }
              }
            }

+ Response 200

#### compute.routes.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/snapshots/{snapshot} [/{project}/global/snapshots/{snapshot}]

#### compute.snapshots.delete [DELETE]

+ Parameters

    + project (required)
  
    + snapshot (required)

+ Response 200

#### compute.snapshots.get [GET]

+ Parameters

    + project (required)
  
    + snapshot (required)

+ Response 200

### Resource /{project}/global/snapshots [/compute/v1/projects/{project}/global/snapshots{?filter,maxResults,pageToken}]

#### compute.snapshots.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/targetHttpProxies/{targetHttpProxy} [/{project}/global/targetHttpProxies/{targetHttpProxy}]

#### compute.targetHttpProxies.delete [DELETE]

+ Parameters

    + project (required)
  
    + targetHttpProxy (required)

+ Response 200

#### compute.targetHttpProxies.get [GET]

+ Parameters

    + project (required)
  
    + targetHttpProxy (required)

+ Response 200

### Resource /{project}/global/targetHttpProxies [/compute/v1/projects/{project}/global/targetHttpProxies{?filter,maxResults,pageToken}]

#### compute.targetHttpProxies.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A TargetHttpProxy resource. This resource defines an HTTP proxy.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#targetHttpProxy"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "urlMap": {
                  "type": "string",
                  "description": "URL to the UrlMap resource that defines the mapping from URL to the BackendService."
                }
              }
            }

+ Response 200

#### compute.targetHttpProxies.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap [/{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap]

#### compute.targetHttpProxies.setUrlMap [POST]

+ Parameters

    + project (required)
  
    + targetHttpProxy (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "urlMap": {
                  "type": "string"
                }
              }
            }

+ Response 200

### Resource /{project}/aggregated/targetInstances [/compute/v1/projects/{project}/aggregated/targetInstances{?filter,maxResults,pageToken}]

#### compute.targetInstances.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/targetInstances/{targetInstance} [/{project}/zones/{zone}/targetInstances/{targetInstance}]

#### compute.targetInstances.delete [DELETE]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + targetInstance (required)

+ Response 200

#### compute.targetInstances.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + targetInstance (required)

+ Response 200

### Resource /{project}/zones/{zone}/targetInstances [/compute/v1/projects/{project}/zones/{zone}/targetInstances{?filter,maxResults,pageToken}]

#### compute.targetInstances.insert [POST]

+ Parameters

    + project (required)
  
    + zone (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A TargetInstance resource. This resource defines an endpoint VM that terminates traffic of certain protocols.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "instance": {
                  "type": "string",
                  "description": "The URL to the instance that terminates the relevant traffic."
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#targetInstance"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "natPolicy": {
                  "type": "string",
                  "description": "NAT option controlling how IPs are NAT'ed to the VM. Currently only NO_NAT (default value) is supported.",
                  "enum": [
                    "NO_NAT"
                  ]
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "zone": {
                  "type": "string",
                  "description": "URL of the zone where the target instance resides (output only)."
                }
              }
            }

+ Response 200

#### compute.targetInstances.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck [/{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck]

#### compute.targetPools.addHealthCheck [POST]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "healthChecks": {
                  "type": "array",
                  "description": "Health check URLs to be added to targetPool.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "healthCheck": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/regions/{region}/targetPools/{targetPool}/addInstance [/{project}/regions/{region}/targetPools/{targetPool}/addInstance]

#### compute.targetPools.addInstance [POST]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "instances": {
                  "type": "array",
                  "description": "URLs of the instances to be added to targetPool.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "instance": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/aggregated/targetPools [/compute/v1/projects/{project}/aggregated/targetPools{?filter,maxResults,pageToken}]

#### compute.targetPools.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/targetPools/{targetPool} [/{project}/regions/{region}/targetPools/{targetPool}]

#### compute.targetPools.delete [DELETE]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)

+ Response 200

#### compute.targetPools.get [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)

+ Response 200

### Resource /{project}/regions/{region}/targetPools/{targetPool}/getHealth [/{project}/regions/{region}/targetPools/{targetPool}/getHealth]

#### compute.targetPools.getHealth [POST]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "instance": {
                  "type": "string"
                }
              }
            }

+ Response 200

### Resource /{project}/regions/{region}/targetPools [/compute/v1/projects/{project}/regions/{region}/targetPools{?filter,maxResults,pageToken}]

#### compute.targetPools.insert [POST]

+ Parameters

    + project (required)
  
    + region (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A TargetPool resource. This resource defines a pool of VMs, associated HttpHealthCheck resources, and the fallback TargetPool.",
              "properties": {
                "backupPool": {
                  "type": "string",
                  "description": "This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its 'failoverRatio' field is properly set to a value between [0, 1].\n\n'backupPool' and 'failoverRatio' together define the fallback behavior of the primary target pool: if the ratio of the healthy VMs in the primary pool is at or below 'failoverRatio', traffic arriving at the load-balanced IP will be directed to the backup pool.\n\nIn case where 'failoverRatio' and 'backupPool' are not set, or all the VMs in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the \"force\" mode, where traffic will be spread to the healthy VMs with the best effort, or to all VMs when no VM is healthy."
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "failoverRatio": {
                  "type": "number",
                  "description": "This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1].\n\nIf set, 'backupPool' must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy VMs in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool.\n\nIn case where 'failoverRatio' is not set or all the VMs in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the \"force\" mode, where traffic will be spread to the healthy VMs with the best effort, or to all VMs when no VM is healthy.",
                  "format": "float"
                },
                "healthChecks": {
                  "type": "array",
                  "description": "A list of URLs to the HttpHealthCheck resource. A member VM in this pool is considered healthy if and only if all specified health checks pass. An empty list means all member VMs will be considered healthy at all times.",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "instances": {
                  "type": "array",
                  "description": "A list of resource URLs to the member VMs serving this pool. They must live in zones contained in the same region as this pool.",
                  "items": {
                    "type": "string"
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#targetPool"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "region": {
                  "type": "string",
                  "description": "URL of the region where the target pool resides (output only)."
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "sessionAffinity": {
                  "type": "string",
                  "description": "Sesssion affinity option, must be one of the following values: 'NONE': Connections from the same client IP may go to any VM in the pool; 'CLIENT_IP': Connections from the same client IP will go to the same VM in the pool while that VM remains healthy. 'CLIENT_IP_PROTO': Connections from the same client IP with the same IP protocol will go to the same VM in the pool while that VM remains healthy.",
                  "enum": [
                    "CLIENT_IP",
                    "CLIENT_IP_PROTO",
                    "NONE"
                  ]
                }
              }
            }

+ Response 200

#### compute.targetPools.list [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck [/{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck]

#### compute.targetPools.removeHealthCheck [POST]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "healthChecks": {
                  "type": "array",
                  "description": "Health check URLs to be removed from targetPool.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "healthCheck": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/regions/{region}/targetPools/{targetPool}/removeInstance [/{project}/regions/{region}/targetPools/{targetPool}/removeInstance]

#### compute.targetPools.removeInstance [POST]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "instances": {
                  "type": "array",
                  "description": "URLs of the instances to be removed from targetPool.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "instance": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/regions/{region}/targetPools/{targetPool}/setBackup [/compute/v1/projects/{project}/regions/{region}/targetPools/{targetPool}/setBackup{?failoverRatio}]

#### compute.targetPools.setBackup [POST]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetPool (required)
  
    + failoverRatio

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string"
                }
              }
            }

+ Response 200

### Resource /{project}/aggregated/targetVpnGateways [/compute/v1/projects/{project}/aggregated/targetVpnGateways{?filter,maxResults,pageToken}]

#### compute.targetVpnGateways.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/targetVpnGateways/{targetVpnGateway} [/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}]

#### compute.targetVpnGateways.delete [DELETE]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetVpnGateway (required)

+ Response 200

#### compute.targetVpnGateways.get [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + targetVpnGateway (required)

+ Response 200

### Resource /{project}/regions/{region}/targetVpnGateways [/compute/v1/projects/{project}/regions/{region}/targetVpnGateways{?filter,maxResults,pageToken}]

#### compute.targetVpnGateways.insert [POST]

+ Parameters

    + project (required)
  
    + region (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource. Provided by the client when the resource is created."
                },
                "forwardingRules": {
                  "type": "array",
                  "description": "[Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using compute.forwardingRules.insert and associated to a VPN gateway.",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource. Defined by the server.",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.",
                  "default": "compute#targetVpnGateway"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "network": {
                  "type": "string",
                  "description": "URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created."
                },
                "region": {
                  "type": "string",
                  "description": "[Output Only] URL of the region where the target VPN gateway resides."
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server-defined URL for the resource."
                },
                "status": {
                  "type": "string",
                  "description": "[Output Only] The status of the VPN gateway.",
                  "enum": [
                    "CREATING",
                    "DELETING",
                    "FAILED",
                    "READY"
                  ]
                },
                "tunnels": {
                  "type": "array",
                  "description": "[Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using compute.vpntunnels.insert and associated to a VPN gateway.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }

+ Response 200

#### compute.targetVpnGateways.list [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/urlMaps/{urlMap} [/{project}/global/urlMaps/{urlMap}]

#### compute.urlMaps.delete [DELETE]

+ Parameters

    + project (required)
  
    + urlMap (required)

+ Response 200

#### compute.urlMaps.get [GET]

+ Parameters

    + project (required)
  
    + urlMap (required)

+ Response 200

#### compute.urlMaps.patch [PATCH]

+ Parameters

    + project (required)
  
    + urlMap (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A UrlMap resource. This resource defines the mapping from URL to the BackendService resource, based on the \"longest-match\" of the URL's host and path.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "defaultService": {
                  "type": "string",
                  "description": "The URL of the BackendService resource if none of the hostRules match."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.",
                  "format": "byte"
                },
                "hostRules": {
                  "type": "array",
                  "description": "The list of HostRules to use against the URL.",
                  "items": {
                    "type": "object",
                    "description": "A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "hosts": {
                        "type": "array",
                        "description": "The list of host patterns to match. They must be valid hostnames except that they may start with *. or *-. The * acts like a glob and will match any string of atoms (separated by .s and -s) to the left.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "pathMatcher": {
                        "type": "string",
                        "description": "The name of the PathMatcher to match the path portion of the URL, if the this HostRule matches the URL's host portion."
                      }
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#urlMap"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "pathMatchers": {
                  "type": "array",
                  "description": "The list of named PathMatchers to use against the URL.",
                  "items": {
                    "type": "object",
                    "description": "A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default_service will be used.",
                    "properties": {
                      "defaultService": {
                        "type": "string",
                        "description": "The URL to the BackendService resource. This will be used if none of the 'pathRules' defined by this PathMatcher is met by the URL's path portion."
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name to which this PathMatcher is referred by the HostRule."
                      },
                      "pathRules": {
                        "type": "array",
                        "description": "The list of path rules.",
                        "items": {
                          "type": "object",
                          "description": "A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.",
                          "properties": {
                            "paths": {
                              "type": "array",
                              "description": "The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "The URL of the BackendService resource if this rule is matched."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "tests": {
                  "type": "array",
                  "description": "The list of expected URL mappings. Request to update this UrlMap will succeed only all of the test cases pass.",
                  "items": {
                    "type": "object",
                    "description": "Message for the expected URL mappings.",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of this test case."
                      },
                      "host": {
                        "type": "string",
                        "description": "Host portion of the URL."
                      },
                      "path": {
                        "type": "string",
                        "description": "Path portion of the URL."
                      },
                      "service": {
                        "type": "string",
                        "description": "Expected BackendService resource the given URL should be mapped to."
                      }
                    }
                  }
                }
              }
            }

+ Response 200

#### compute.urlMaps.update [PUT]

+ Parameters

    + project (required)
  
    + urlMap (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A UrlMap resource. This resource defines the mapping from URL to the BackendService resource, based on the \"longest-match\" of the URL's host and path.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "defaultService": {
                  "type": "string",
                  "description": "The URL of the BackendService resource if none of the hostRules match."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.",
                  "format": "byte"
                },
                "hostRules": {
                  "type": "array",
                  "description": "The list of HostRules to use against the URL.",
                  "items": {
                    "type": "object",
                    "description": "A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "hosts": {
                        "type": "array",
                        "description": "The list of host patterns to match. They must be valid hostnames except that they may start with *. or *-. The * acts like a glob and will match any string of atoms (separated by .s and -s) to the left.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "pathMatcher": {
                        "type": "string",
                        "description": "The name of the PathMatcher to match the path portion of the URL, if the this HostRule matches the URL's host portion."
                      }
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#urlMap"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "pathMatchers": {
                  "type": "array",
                  "description": "The list of named PathMatchers to use against the URL.",
                  "items": {
                    "type": "object",
                    "description": "A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default_service will be used.",
                    "properties": {
                      "defaultService": {
                        "type": "string",
                        "description": "The URL to the BackendService resource. This will be used if none of the 'pathRules' defined by this PathMatcher is met by the URL's path portion."
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name to which this PathMatcher is referred by the HostRule."
                      },
                      "pathRules": {
                        "type": "array",
                        "description": "The list of path rules.",
                        "items": {
                          "type": "object",
                          "description": "A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.",
                          "properties": {
                            "paths": {
                              "type": "array",
                              "description": "The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "The URL of the BackendService resource if this rule is matched."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "tests": {
                  "type": "array",
                  "description": "The list of expected URL mappings. Request to update this UrlMap will succeed only all of the test cases pass.",
                  "items": {
                    "type": "object",
                    "description": "Message for the expected URL mappings.",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of this test case."
                      },
                      "host": {
                        "type": "string",
                        "description": "Host portion of the URL."
                      },
                      "path": {
                        "type": "string",
                        "description": "Path portion of the URL."
                      },
                      "service": {
                        "type": "string",
                        "description": "Expected BackendService resource the given URL should be mapped to."
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/global/urlMaps [/compute/v1/projects/{project}/global/urlMaps{?filter,maxResults,pageToken}]

#### compute.urlMaps.insert [POST]

+ Parameters

    + project (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A UrlMap resource. This resource defines the mapping from URL to the BackendService resource, based on the \"longest-match\" of the URL's host and path.",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "Creation timestamp in RFC3339 text format (output only)."
                },
                "defaultService": {
                  "type": "string",
                  "description": "The URL of the BackendService resource if none of the hostRules match."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource; provided by the client when the resource is created."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.",
                  "format": "byte"
                },
                "hostRules": {
                  "type": "array",
                  "description": "The list of HostRules to use against the URL.",
                  "items": {
                    "type": "object",
                    "description": "A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "hosts": {
                        "type": "array",
                        "description": "The list of host patterns to match. They must be valid hostnames except that they may start with *. or *-. The * acts like a glob and will match any string of atoms (separated by .s and -s) to the left.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "pathMatcher": {
                        "type": "string",
                        "description": "The name of the PathMatcher to match the path portion of the URL, if the this HostRule matches the URL's host portion."
                      }
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the resource; defined by the server (output only).",
                  "format": "uint64"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the resource.",
                  "default": "compute#urlMap"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "pathMatchers": {
                  "type": "array",
                  "description": "The list of named PathMatchers to use against the URL.",
                  "items": {
                    "type": "object",
                    "description": "A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default_service will be used.",
                    "properties": {
                      "defaultService": {
                        "type": "string",
                        "description": "The URL to the BackendService resource. This will be used if none of the 'pathRules' defined by this PathMatcher is met by the URL's path portion."
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name to which this PathMatcher is referred by the HostRule."
                      },
                      "pathRules": {
                        "type": "array",
                        "description": "The list of path rules.",
                        "items": {
                          "type": "object",
                          "description": "A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.",
                          "properties": {
                            "paths": {
                              "type": "array",
                              "description": "The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "The URL of the BackendService resource if this rule is matched."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "Server defined URL for the resource (output only)."
                },
                "tests": {
                  "type": "array",
                  "description": "The list of expected URL mappings. Request to update this UrlMap will succeed only all of the test cases pass.",
                  "items": {
                    "type": "object",
                    "description": "Message for the expected URL mappings.",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of this test case."
                      },
                      "host": {
                        "type": "string",
                        "description": "Host portion of the URL."
                      },
                      "path": {
                        "type": "string",
                        "description": "Path portion of the URL."
                      },
                      "service": {
                        "type": "string",
                        "description": "Expected BackendService resource the given URL should be mapped to."
                      }
                    }
                  }
                }
              }
            }

+ Response 200

#### compute.urlMaps.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/global/urlMaps/{urlMap}/validate [/{project}/global/urlMaps/{urlMap}/validate]

#### compute.urlMaps.validate [POST]

+ Parameters

    + project (required)
  
    + urlMap (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "resource": {
                  "type": "object",
                  "description": "A UrlMap resource. This resource defines the mapping from URL to the BackendService resource, based on the \"longest-match\" of the URL's host and path.",
                  "properties": {
                    "creationTimestamp": {
                      "type": "string",
                      "description": "Creation timestamp in RFC3339 text format (output only)."
                    },
                    "defaultService": {
                      "type": "string",
                      "description": "The URL of the BackendService resource if none of the hostRules match."
                    },
                    "description": {
                      "type": "string",
                      "description": "An optional textual description of the resource; provided by the client when the resource is created."
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.",
                      "format": "byte"
                    },
                    "hostRules": {
                      "type": "array",
                      "description": "The list of HostRules to use against the URL.",
                      "items": {
                        "type": "object",
                        "description": "A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "hosts": {
                            "type": "array",
                            "description": "The list of host patterns to match. They must be valid hostnames except that they may start with *. or *-. The * acts like a glob and will match any string of atoms (separated by .s and -s) to the left.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pathMatcher": {
                            "type": "string",
                            "description": "The name of the PathMatcher to match the path portion of the URL, if the this HostRule matches the URL's host portion."
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the resource; defined by the server (output only).",
                      "format": "uint64"
                    },
                    "kind": {
                      "type": "string",
                      "description": "Type of the resource.",
                      "default": "compute#urlMap"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                      "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                    },
                    "pathMatchers": {
                      "type": "array",
                      "description": "The list of named PathMatchers to use against the URL.",
                      "items": {
                        "type": "object",
                        "description": "A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default_service will be used.",
                        "properties": {
                          "defaultService": {
                            "type": "string",
                            "description": "The URL to the BackendService resource. This will be used if none of the 'pathRules' defined by this PathMatcher is met by the URL's path portion."
                          },
                          "description": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name to which this PathMatcher is referred by the HostRule."
                          },
                          "pathRules": {
                            "type": "array",
                            "description": "The list of path rules.",
                            "items": {
                              "type": "object",
                              "description": "A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.",
                              "properties": {
                                "paths": {
                                  "type": "array",
                                  "description": "The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "service": {
                                  "type": "string",
                                  "description": "The URL of the BackendService resource if this rule is matched."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "selfLink": {
                      "type": "string",
                      "description": "Server defined URL for the resource (output only)."
                    },
                    "tests": {
                      "type": "array",
                      "description": "The list of expected URL mappings. Request to update this UrlMap will succeed only all of the test cases pass.",
                      "items": {
                        "type": "object",
                        "description": "Message for the expected URL mappings.",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of this test case."
                          },
                          "host": {
                            "type": "string",
                            "description": "Host portion of the URL."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path portion of the URL."
                          },
                          "service": {
                            "type": "string",
                            "description": "Expected BackendService resource the given URL should be mapped to."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /{project}/aggregated/vpnTunnels [/compute/v1/projects/{project}/aggregated/vpnTunnels{?filter,maxResults,pageToken}]

#### compute.vpnTunnels.aggregatedList [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/regions/{region}/vpnTunnels/{vpnTunnel} [/{project}/regions/{region}/vpnTunnels/{vpnTunnel}]

#### compute.vpnTunnels.delete [DELETE]

+ Parameters

    + project (required)
  
    + region (required)
  
    + vpnTunnel (required)

+ Response 200

#### compute.vpnTunnels.get [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + vpnTunnel (required)

+ Response 200

### Resource /{project}/regions/{region}/vpnTunnels [/compute/v1/projects/{project}/regions/{region}/vpnTunnels{?filter,maxResults,pageToken}]

#### compute.vpnTunnels.insert [POST]

+ Parameters

    + project (required)
  
    + region (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Output Only] Creation timestamp in RFC3339 text format."
                },
                "description": {
                  "type": "string",
                  "description": "An optional textual description of the resource. Provided by the client when the resource is created."
                },
                "detailedStatus": {
                  "type": "string",
                  "description": "[Output Only] Detailed status message for the VPN tunnel."
                },
                "id": {
                  "type": "string",
                  "description": "[Output Only] Unique identifier for the resource. Defined by the server.",
                  "format": "uint64"
                },
                "ikeNetworks": {
                  "type": "array",
                  "description": "IKE networks to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint.",
                  "items": {
                    "type": "string"
                  }
                },
                "ikeVersion": {
                  "type": "integer",
                  "description": "IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version is 2.",
                  "format": "int32"
                },
                "kind": {
                  "type": "string",
                  "description": "[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.",
                  "default": "compute#vpnTunnel"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long and comply with RFC1035.",
                  "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
                },
                "peerIp": {
                  "type": "string",
                  "description": "IP address of the peer VPN gateway."
                },
                "region": {
                  "type": "string",
                  "description": "[Output Only] URL of the region where the VPN tunnel resides."
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server defined URL for the resource."
                },
                "sharedSecret": {
                  "type": "string",
                  "description": "Shared secret used to set the secure session between the GCE VPN gateway and the peer VPN gateway."
                },
                "sharedSecretHash": {
                  "type": "string",
                  "description": "Hash of the shared secret."
                },
                "status": {
                  "type": "string",
                  "description": "[Output Only] The status of the VPN tunnel.",
                  "enum": [
                    "AUTHORIZATION_ERROR",
                    "DEPROVISIONING",
                    "ESTABLISHED",
                    "FAILED",
                    "FIRST_HANDSHAKE",
                    "NEGOTIATION_FAILURE",
                    "NETWORK_ERROR",
                    "NO_INCOMING_PACKETS",
                    "PROVISIONING",
                    "WAITING_FOR_FULL_CONFIG"
                  ]
                },
                "targetVpnGateway": {
                  "type": "string",
                  "description": "URL of the VPN gateway to which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created."
                }
              }
            }

+ Response 200

#### compute.vpnTunnels.list [GET]

+ Parameters

    + project (required)
  
    + region (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone}/operations/{operation} [/{project}/zones/{zone}/operations/{operation}]

#### compute.zoneOperations.delete [DELETE]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + operation (required)

+ Response 200

#### compute.zoneOperations.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + operation (required)

+ Response 200

### Resource /{project}/zones/{zone}/operations [/compute/v1/projects/{project}/zones/{zone}/operations{?filter,maxResults,pageToken}]

#### compute.zoneOperations.list [GET]

+ Parameters

    + project (required)
  
    + zone (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

### Resource /{project}/zones/{zone} [/{project}/zones/{zone}]

#### compute.zones.get [GET]

+ Parameters

    + project (required)
  
    + zone (required)

+ Response 200

### Resource /{project}/zones [/compute/v1/projects/{project}/zones{?filter,maxResults,pageToken}]

#### compute.zones.list [GET]

+ Parameters

    + project (required)
  
    + filter
  
    + maxResults
  
    + pageToken

+ Response 200

