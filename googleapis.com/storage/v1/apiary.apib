FORMAT: 1A

# Cloud Storage API

Lets you store and retrieve potentially-large, immutable data objects.

### Resource /b/{bucket}/acl/{entity} [/b/{bucket}/acl/{entity}]

#### storage.bucketAccessControls.delete [DELETE]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Response 200

#### storage.bucketAccessControls.get [GET]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Response 200

#### storage.bucketAccessControls.patch [PATCH]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
                  "default": "storage#bucketAccessControl"
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

#### storage.bucketAccessControls.update [PUT]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
                  "default": "storage#bucketAccessControl"
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

### Resource /b/{bucket}/acl [/b/{bucket}/acl]

#### storage.bucketAccessControls.insert [POST]

+ Parameters

    + bucket (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
                  "default": "storage#bucketAccessControl"
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

#### storage.bucketAccessControls.list [GET]

+ Parameters

    + bucket (required)

+ Response 200

### Resource /b/{bucket} [/storage/v1/b/{bucket}{?ifMetagenerationMatch,ifMetagenerationNotMatch,predefinedAcl,predefinedDefaultObjectAcl,projection}]

#### storage.buckets.delete [DELETE]

+ Parameters

    + bucket (required)
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch

+ Response 200

#### storage.buckets.get [GET]

+ Parameters

    + bucket (required)
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + projection

+ Response 200

#### storage.buckets.patch [PATCH]

+ Parameters

    + bucket (required)
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + predefinedAcl
  
    + predefinedDefaultObjectAcl
  
    + projection

+ Request

    + Schema

            {
              "type": "object",
              "description": "A bucket.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the bucket.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
                        "default": "storage#bucketAccessControl"
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "cors": {
                  "type": "array",
                  "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "maxAgeSeconds": {
                        "type": "integer",
                        "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.",
                        "format": "int32"
                      },
                      "method": {
                        "type": "array",
                        "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "origin": {
                        "type": "array",
                        "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "responseHeader": {
                        "type": "array",
                        "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "defaultObjectAcl": {
                  "type": "array",
                  "description": "Default access controls to apply to new objects when no ACL is provided.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the bucket."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the bucket."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For buckets, this is always storage#bucket.",
                  "default": "storage#bucket"
                },
                "lifecycle": {
                  "type": "object",
                  "description": "The bucket's lifecycle configuration. See lifecycle management for more information.",
                  "properties": {
                    "rule": {
                      "type": "array",
                      "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "object",
                            "description": "The action to take.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the action. Currently, only Delete is supported."
                              }
                            }
                          },
                          "condition": {
                            "type": "object",
                            "description": "The condition(s) under which the action will be taken.",
                            "properties": {
                              "age": {
                                "type": "integer",
                                "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age.",
                                "format": "int32"
                              },
                              "createdBefore": {
                                "type": "string",
                                "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                                "format": "date"
                              },
                              "isLive": {
                                "type": "boolean",
                                "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                              },
                              "numNewerVersions": {
                                "type": "integer",
                                "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.",
                                "format": "int32"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
                },
                "logging": {
                  "type": "object",
                  "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.",
                  "properties": {
                    "logBucket": {
                      "type": "string",
                      "description": "The destination bucket where the current bucket's logs should be placed."
                    },
                    "logObjectPrefix": {
                      "type": "string",
                      "description": "A prefix for log object names."
                    }
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The metadata generation of this bucket.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the bucket. This is always the project team's owner group.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form project-owner-projectId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number of the project the bucket belongs to.",
                  "format": "uint64"
                },
                "selfLink": {
                  "type": "string",
                  "description": "The URI of this bucket."
                },
                "storageClass": {
                  "type": "string",
                  "description": "The bucket's storage class. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include STANDARD, NEARLINE and DURABLE_REDUCED_AVAILABILITY. Defaults to STANDARD. For more information, see storage classes."
                },
                "timeCreated": {
                  "type": "string",
                  "description": "Creation time of the bucket in RFC 3339 format.",
                  "format": "date-time"
                },
                "versioning": {
                  "type": "object",
                  "description": "The bucket's versioning configuration.",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "While set to true, versioning is fully enabled for this bucket."
                    }
                  }
                },
                "website": {
                  "type": "object",
                  "description": "The bucket's website configuration.",
                  "properties": {
                    "mainPageSuffix": {
                      "type": "string",
                      "description": "Behaves as the bucket's directory index where missing objects are treated as potential directories."
                    },
                    "notFoundPage": {
                      "type": "string",
                      "description": "The custom object to return when a requested resource is not found."
                    }
                  }
                }
              }
            }

+ Response 200

#### storage.buckets.update [PUT]

+ Parameters

    + bucket (required)
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + predefinedAcl
  
    + predefinedDefaultObjectAcl
  
    + projection

+ Request

    + Schema

            {
              "type": "object",
              "description": "A bucket.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the bucket.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
                        "default": "storage#bucketAccessControl"
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "cors": {
                  "type": "array",
                  "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "maxAgeSeconds": {
                        "type": "integer",
                        "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.",
                        "format": "int32"
                      },
                      "method": {
                        "type": "array",
                        "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "origin": {
                        "type": "array",
                        "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "responseHeader": {
                        "type": "array",
                        "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "defaultObjectAcl": {
                  "type": "array",
                  "description": "Default access controls to apply to new objects when no ACL is provided.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the bucket."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the bucket."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For buckets, this is always storage#bucket.",
                  "default": "storage#bucket"
                },
                "lifecycle": {
                  "type": "object",
                  "description": "The bucket's lifecycle configuration. See lifecycle management for more information.",
                  "properties": {
                    "rule": {
                      "type": "array",
                      "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "object",
                            "description": "The action to take.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the action. Currently, only Delete is supported."
                              }
                            }
                          },
                          "condition": {
                            "type": "object",
                            "description": "The condition(s) under which the action will be taken.",
                            "properties": {
                              "age": {
                                "type": "integer",
                                "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age.",
                                "format": "int32"
                              },
                              "createdBefore": {
                                "type": "string",
                                "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                                "format": "date"
                              },
                              "isLive": {
                                "type": "boolean",
                                "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                              },
                              "numNewerVersions": {
                                "type": "integer",
                                "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.",
                                "format": "int32"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
                },
                "logging": {
                  "type": "object",
                  "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.",
                  "properties": {
                    "logBucket": {
                      "type": "string",
                      "description": "The destination bucket where the current bucket's logs should be placed."
                    },
                    "logObjectPrefix": {
                      "type": "string",
                      "description": "A prefix for log object names."
                    }
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The metadata generation of this bucket.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the bucket. This is always the project team's owner group.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form project-owner-projectId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number of the project the bucket belongs to.",
                  "format": "uint64"
                },
                "selfLink": {
                  "type": "string",
                  "description": "The URI of this bucket."
                },
                "storageClass": {
                  "type": "string",
                  "description": "The bucket's storage class. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include STANDARD, NEARLINE and DURABLE_REDUCED_AVAILABILITY. Defaults to STANDARD. For more information, see storage classes."
                },
                "timeCreated": {
                  "type": "string",
                  "description": "Creation time of the bucket in RFC 3339 format.",
                  "format": "date-time"
                },
                "versioning": {
                  "type": "object",
                  "description": "The bucket's versioning configuration.",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "While set to true, versioning is fully enabled for this bucket."
                    }
                  }
                },
                "website": {
                  "type": "object",
                  "description": "The bucket's website configuration.",
                  "properties": {
                    "mainPageSuffix": {
                      "type": "string",
                      "description": "Behaves as the bucket's directory index where missing objects are treated as potential directories."
                    },
                    "notFoundPage": {
                      "type": "string",
                      "description": "The custom object to return when a requested resource is not found."
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /b [/storage/v1/b{?project,maxResults,pageToken,prefix,projection}]

#### storage.buckets.insert [POST]

+ Parameters

    + project (required)
  
    + predefinedAcl
  
    + predefinedDefaultObjectAcl
  
    + projection

+ Request

    + Schema

            {
              "type": "object",
              "description": "A bucket.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the bucket.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
                        "default": "storage#bucketAccessControl"
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "cors": {
                  "type": "array",
                  "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "maxAgeSeconds": {
                        "type": "integer",
                        "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.",
                        "format": "int32"
                      },
                      "method": {
                        "type": "array",
                        "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "origin": {
                        "type": "array",
                        "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "responseHeader": {
                        "type": "array",
                        "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "defaultObjectAcl": {
                  "type": "array",
                  "description": "Default access controls to apply to new objects when no ACL is provided.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the bucket."
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the bucket."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For buckets, this is always storage#bucket.",
                  "default": "storage#bucket"
                },
                "lifecycle": {
                  "type": "object",
                  "description": "The bucket's lifecycle configuration. See lifecycle management for more information.",
                  "properties": {
                    "rule": {
                      "type": "array",
                      "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "object",
                            "description": "The action to take.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the action. Currently, only Delete is supported."
                              }
                            }
                          },
                          "condition": {
                            "type": "object",
                            "description": "The condition(s) under which the action will be taken.",
                            "properties": {
                              "age": {
                                "type": "integer",
                                "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age.",
                                "format": "int32"
                              },
                              "createdBefore": {
                                "type": "string",
                                "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                                "format": "date"
                              },
                              "isLive": {
                                "type": "boolean",
                                "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                              },
                              "numNewerVersions": {
                                "type": "integer",
                                "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.",
                                "format": "int32"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
                },
                "logging": {
                  "type": "object",
                  "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.",
                  "properties": {
                    "logBucket": {
                      "type": "string",
                      "description": "The destination bucket where the current bucket's logs should be placed."
                    },
                    "logObjectPrefix": {
                      "type": "string",
                      "description": "A prefix for log object names."
                    }
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The metadata generation of this bucket.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the bucket. This is always the project team's owner group.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form project-owner-projectId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number of the project the bucket belongs to.",
                  "format": "uint64"
                },
                "selfLink": {
                  "type": "string",
                  "description": "The URI of this bucket."
                },
                "storageClass": {
                  "type": "string",
                  "description": "The bucket's storage class. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include STANDARD, NEARLINE and DURABLE_REDUCED_AVAILABILITY. Defaults to STANDARD. For more information, see storage classes."
                },
                "timeCreated": {
                  "type": "string",
                  "description": "Creation time of the bucket in RFC 3339 format.",
                  "format": "date-time"
                },
                "versioning": {
                  "type": "object",
                  "description": "The bucket's versioning configuration.",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "While set to true, versioning is fully enabled for this bucket."
                    }
                  }
                },
                "website": {
                  "type": "object",
                  "description": "The bucket's website configuration.",
                  "properties": {
                    "mainPageSuffix": {
                      "type": "string",
                      "description": "Behaves as the bucket's directory index where missing objects are treated as potential directories."
                    },
                    "notFoundPage": {
                      "type": "string",
                      "description": "The custom object to return when a requested resource is not found."
                    }
                  }
                }
              }
            }

+ Response 200

#### storage.buckets.list [GET]

+ Parameters

    + project (required)
  
    + maxResults
  
    + pageToken
  
    + prefix
  
    + projection

+ Response 200

### Resource /channels/stop [/channels/stop]

#### storage.channels.stop [POST]

+ Request

    + Schema

            {
              "type": "object",
              "description": "An notification channel used to watch for resource changes.",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The address where notifications are delivered for this channel."
                },
                "expiration": {
                  "type": "string",
                  "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "A UUID or similar unique string that identifies this channel."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
                  "default": "api#channel"
                },
                "params": {
                  "type": "object",
                  "description": "Additional parameters controlling delivery channel behavior. Optional.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Declares a new parameter by name."
                  }
                },
                "payload": {
                  "type": "boolean",
                  "description": "A Boolean value to indicate whether payload is wanted. Optional."
                },
                "resourceId": {
                  "type": "string",
                  "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
                },
                "resourceUri": {
                  "type": "string",
                  "description": "A version-specific identifier for the watched resource."
                },
                "token": {
                  "type": "string",
                  "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
                },
                "type": {
                  "type": "string",
                  "description": "The type of delivery mechanism used for this channel."
                }
              }
            }

+ Response 200

### Resource /b/{bucket}/defaultObjectAcl/{entity} [/b/{bucket}/defaultObjectAcl/{entity}]

#### storage.defaultObjectAccessControls.delete [DELETE]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Response 200

#### storage.defaultObjectAccessControls.get [GET]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Response 200

#### storage.defaultObjectAccessControls.patch [PATCH]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of the object.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                  "default": "storage#objectAccessControl"
                },
                "object": {
                  "type": "string",
                  "description": "The name of the object."
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

#### storage.defaultObjectAccessControls.update [PUT]

+ Parameters

    + bucket (required)
  
    + entity (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of the object.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                  "default": "storage#objectAccessControl"
                },
                "object": {
                  "type": "string",
                  "description": "The name of the object."
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

### Resource /b/{bucket}/defaultObjectAcl [/storage/v1/b/{bucket}/defaultObjectAcl{?ifMetagenerationMatch,ifMetagenerationNotMatch}]

#### storage.defaultObjectAccessControls.insert [POST]

+ Parameters

    + bucket (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of the object.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                  "default": "storage#objectAccessControl"
                },
                "object": {
                  "type": "string",
                  "description": "The name of the object."
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

#### storage.defaultObjectAccessControls.list [GET]

+ Parameters

    + bucket (required)
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch

+ Response 200

### Resource /b/{bucket}/o/{object}/acl/{entity} [/storage/v1/b/{bucket}/o/{object}/acl/{entity}{?generation}]

#### storage.objectAccessControls.delete [DELETE]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + entity (required)
  
    + generation

+ Response 200

#### storage.objectAccessControls.get [GET]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + entity (required)
  
    + generation

+ Response 200

#### storage.objectAccessControls.patch [PATCH]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + entity (required)
  
    + generation

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of the object.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                  "default": "storage#objectAccessControl"
                },
                "object": {
                  "type": "string",
                  "description": "The name of the object."
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

#### storage.objectAccessControls.update [PUT]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + entity (required)
  
    + generation

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of the object.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                  "default": "storage#objectAccessControl"
                },
                "object": {
                  "type": "string",
                  "description": "The name of the object."
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

### Resource /b/{bucket}/o/{object}/acl [/storage/v1/b/{bucket}/o/{object}/acl{?generation}]

#### storage.objectAccessControls.insert [POST]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + generation

+ Request

    + Schema

            {
              "type": "object",
              "description": "An access-control entry.",
              "properties": {
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket."
                },
                "domain": {
                  "type": "string",
                  "description": "The domain associated with the entity, if any."
                },
                "email": {
                  "type": "string",
                  "description": "The email address associated with the entity, if any."
                },
                "entity": {
                  "type": "string",
                  "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity, if any."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the access-control entry."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of the object.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the access-control entry."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                  "default": "storage#objectAccessControl"
                },
                "object": {
                  "type": "string",
                  "description": "The name of the object."
                },
                "projectTeam": {
                  "type": "object",
                  "description": "The project team associated with the entity, if any.",
                  "properties": {
                    "projectNumber": {
                      "type": "string",
                      "description": "The project number."
                    },
                    "team": {
                      "type": "string",
                      "description": "The team. Can be owners, editors, or viewers."
                    }
                  }
                },
                "role": {
                  "type": "string",
                  "description": "The access permission for the entity. Can be READER or OWNER."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this access-control entry."
                }
              }
            }

+ Response 200

#### storage.objectAccessControls.list [GET]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + generation

+ Response 200

### Resource /b/{destinationBucket}/o/{destinationObject}/compose [/storage/v1/b/{destinationBucket}/o/{destinationObject}/compose{?destinationPredefinedAcl,ifGenerationMatch,ifMetagenerationMatch}]

#### storage.objects.compose [POST]

+ Parameters

    + destinationBucket (required)
  
    + destinationObject (required)
  
    + destinationPredefinedAcl
  
    + ifGenerationMatch
  
    + ifMetagenerationMatch

+ Request

    + Schema

            {
              "type": "object",
              "description": "A Compose request.",
              "properties": {
                "destination": {
                  "type": "object",
                  "description": "An object.",
                  "properties": {
                    "acl": {
                      "type": "array",
                      "description": "Access controls on the object.",
                      "items": {
                        "type": "object",
                        "description": "An access-control entry.",
                        "properties": {
                          "bucket": {
                            "type": "string",
                            "description": "The name of the bucket."
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain associated with the entity, if any."
                          },
                          "email": {
                            "type": "string",
                            "description": "The email address associated with the entity, if any."
                          },
                          "entity": {
                            "type": "string",
                            "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                          },
                          "entityId": {
                            "type": "string",
                            "description": "The ID for the entity, if any."
                          },
                          "etag": {
                            "type": "string",
                            "description": "HTTP 1.1 Entity tag for the access-control entry."
                          },
                          "generation": {
                            "type": "string",
                            "description": "The content generation of the object.",
                            "format": "int64"
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the access-control entry."
                          },
                          "kind": {
                            "type": "string",
                            "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                            "default": "storage#objectAccessControl"
                          },
                          "object": {
                            "type": "string",
                            "description": "The name of the object."
                          },
                          "projectTeam": {
                            "type": "object",
                            "description": "The project team associated with the entity, if any.",
                            "properties": {
                              "projectNumber": {
                                "type": "string",
                                "description": "The project number."
                              },
                              "team": {
                                "type": "string",
                                "description": "The team. Can be owners, editors, or viewers."
                              }
                            }
                          },
                          "role": {
                            "type": "string",
                            "description": "The access permission for the entity. Can be READER or OWNER."
                          },
                          "selfLink": {
                            "type": "string",
                            "description": "The link to this access-control entry."
                          }
                        }
                      }
                    },
                    "bucket": {
                      "type": "string",
                      "description": "The name of the bucket containing this object."
                    },
                    "cacheControl": {
                      "type": "string",
                      "description": "Cache-Control directive for the object data."
                    },
                    "componentCount": {
                      "type": "integer",
                      "description": "Number of underlying components that make up this object. Components are accumulated by compose operations.",
                      "format": "int32"
                    },
                    "contentDisposition": {
                      "type": "string",
                      "description": "Content-Disposition of the object data."
                    },
                    "contentEncoding": {
                      "type": "string",
                      "description": "Content-Encoding of the object data."
                    },
                    "contentLanguage": {
                      "type": "string",
                      "description": "Content-Language of the object data."
                    },
                    "contentType": {
                      "type": "string",
                      "description": "Content-Type of the object data."
                    },
                    "crc32c": {
                      "type": "string",
                      "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order."
                    },
                    "etag": {
                      "type": "string",
                      "description": "HTTP 1.1 Entity tag for the object."
                    },
                    "generation": {
                      "type": "string",
                      "description": "The content generation of this object. Used for object versioning.",
                      "format": "int64"
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the object."
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of item this is. For objects, this is always storage#object.",
                      "default": "storage#object"
                    },
                    "md5Hash": {
                      "type": "string",
                      "description": "MD5 hash of the data; encoded using base64."
                    },
                    "mediaLink": {
                      "type": "string",
                      "description": "Media download link."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "User-provided metadata, in key/value pairs.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "An individual metadata entry."
                      }
                    },
                    "metageneration": {
                      "type": "string",
                      "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of this object. Required if not specified by URL parameter."
                    },
                    "owner": {
                      "type": "object",
                      "description": "The owner of the object. This will always be the uploader of the object.",
                      "properties": {
                        "entity": {
                          "type": "string",
                          "description": "The entity, in the form user-userId."
                        },
                        "entityId": {
                          "type": "string",
                          "description": "The ID for the entity."
                        }
                      }
                    },
                    "selfLink": {
                      "type": "string",
                      "description": "The link to this object."
                    },
                    "size": {
                      "type": "string",
                      "description": "Content-Length of the data in bytes.",
                      "format": "uint64"
                    },
                    "storageClass": {
                      "type": "string",
                      "description": "Storage class of the object."
                    },
                    "timeDeleted": {
                      "type": "string",
                      "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
                      "format": "date-time"
                    },
                    "updated": {
                      "type": "string",
                      "description": "The creation or modification time of the object in RFC 3339 format. For buckets with versioning enabled, changing an object's metadata does not change this property.",
                      "format": "date-time"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is.",
                  "default": "storage#composeRequest"
                },
                "sourceObjects": {
                  "type": "array",
                  "description": "The list of source objects that will be concatenated into a single object.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "generation": {
                        "type": "string",
                        "description": "The generation of this object to use as the source.",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string",
                        "description": "The source object's name. The source object's bucket is implicitly the destination bucket."
                      },
                      "objectPreconditions": {
                        "type": "object",
                        "description": "Conditions that must be met for this operation to execute.",
                        "properties": {
                          "ifGenerationMatch": {
                            "type": "string",
                            "description": "Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject} [/storage/v1/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}{?destinationPredefinedAcl,ifGenerationMatch,ifGenerationNotMatch,ifMetagenerationMatch,ifMetagenerationNotMatch,ifSourceGenerationMatch,ifSourceGenerationNotMatch,ifSourceMetagenerationMatch,ifSourceMetagenerationNotMatch,projection,sourceGeneration}]

#### storage.objects.copy [POST]

+ Parameters

    + sourceBucket (required)
  
    + sourceObject (required)
  
    + destinationBucket (required)
  
    + destinationObject (required)
  
    + destinationPredefinedAcl
  
    + ifGenerationMatch
  
    + ifGenerationNotMatch
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + ifSourceGenerationMatch
  
    + ifSourceGenerationNotMatch
  
    + ifSourceMetagenerationMatch
  
    + ifSourceMetagenerationNotMatch
  
    + projection
  
    + sourceGeneration

+ Request

    + Schema

            {
              "type": "object",
              "description": "An object.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the object.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket containing this object."
                },
                "cacheControl": {
                  "type": "string",
                  "description": "Cache-Control directive for the object data."
                },
                "componentCount": {
                  "type": "integer",
                  "description": "Number of underlying components that make up this object. Components are accumulated by compose operations.",
                  "format": "int32"
                },
                "contentDisposition": {
                  "type": "string",
                  "description": "Content-Disposition of the object data."
                },
                "contentEncoding": {
                  "type": "string",
                  "description": "Content-Encoding of the object data."
                },
                "contentLanguage": {
                  "type": "string",
                  "description": "Content-Language of the object data."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content-Type of the object data."
                },
                "crc32c": {
                  "type": "string",
                  "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the object."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of this object. Used for object versioning.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the object."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For objects, this is always storage#object.",
                  "default": "storage#object"
                },
                "md5Hash": {
                  "type": "string",
                  "description": "MD5 hash of the data; encoded using base64."
                },
                "mediaLink": {
                  "type": "string",
                  "description": "Media download link."
                },
                "metadata": {
                  "type": "object",
                  "description": "User-provided metadata, in key/value pairs.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "An individual metadata entry."
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of this object. Required if not specified by URL parameter."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the object. This will always be the uploader of the object.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form user-userId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this object."
                },
                "size": {
                  "type": "string",
                  "description": "Content-Length of the data in bytes.",
                  "format": "uint64"
                },
                "storageClass": {
                  "type": "string",
                  "description": "Storage class of the object."
                },
                "timeDeleted": {
                  "type": "string",
                  "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "The creation or modification time of the object in RFC 3339 format. For buckets with versioning enabled, changing an object's metadata does not change this property.",
                  "format": "date-time"
                }
              }
            }

+ Response 200

### Resource /b/{bucket}/o/{object} [/storage/v1/b/{bucket}/o/{object}{?generation,ifGenerationMatch,ifGenerationNotMatch,ifMetagenerationMatch,ifMetagenerationNotMatch,predefinedAcl,projection}]

#### storage.objects.delete [DELETE]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + generation
  
    + ifGenerationMatch
  
    + ifGenerationNotMatch
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch

+ Response 200

#### storage.objects.get [GET]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + generation
  
    + ifGenerationMatch
  
    + ifGenerationNotMatch
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + projection

+ Response 200

#### storage.objects.patch [PATCH]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + generation
  
    + ifGenerationMatch
  
    + ifGenerationNotMatch
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + predefinedAcl
  
    + projection

+ Request

    + Schema

            {
              "type": "object",
              "description": "An object.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the object.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket containing this object."
                },
                "cacheControl": {
                  "type": "string",
                  "description": "Cache-Control directive for the object data."
                },
                "componentCount": {
                  "type": "integer",
                  "description": "Number of underlying components that make up this object. Components are accumulated by compose operations.",
                  "format": "int32"
                },
                "contentDisposition": {
                  "type": "string",
                  "description": "Content-Disposition of the object data."
                },
                "contentEncoding": {
                  "type": "string",
                  "description": "Content-Encoding of the object data."
                },
                "contentLanguage": {
                  "type": "string",
                  "description": "Content-Language of the object data."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content-Type of the object data."
                },
                "crc32c": {
                  "type": "string",
                  "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the object."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of this object. Used for object versioning.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the object."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For objects, this is always storage#object.",
                  "default": "storage#object"
                },
                "md5Hash": {
                  "type": "string",
                  "description": "MD5 hash of the data; encoded using base64."
                },
                "mediaLink": {
                  "type": "string",
                  "description": "Media download link."
                },
                "metadata": {
                  "type": "object",
                  "description": "User-provided metadata, in key/value pairs.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "An individual metadata entry."
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of this object. Required if not specified by URL parameter."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the object. This will always be the uploader of the object.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form user-userId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this object."
                },
                "size": {
                  "type": "string",
                  "description": "Content-Length of the data in bytes.",
                  "format": "uint64"
                },
                "storageClass": {
                  "type": "string",
                  "description": "Storage class of the object."
                },
                "timeDeleted": {
                  "type": "string",
                  "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "The creation or modification time of the object in RFC 3339 format. For buckets with versioning enabled, changing an object's metadata does not change this property.",
                  "format": "date-time"
                }
              }
            }

+ Response 200

#### storage.objects.update [PUT]

+ Parameters

    + bucket (required)
  
    + object (required)
  
    + generation
  
    + ifGenerationMatch
  
    + ifGenerationNotMatch
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + predefinedAcl
  
    + projection

+ Request

    + Schema

            {
              "type": "object",
              "description": "An object.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the object.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket containing this object."
                },
                "cacheControl": {
                  "type": "string",
                  "description": "Cache-Control directive for the object data."
                },
                "componentCount": {
                  "type": "integer",
                  "description": "Number of underlying components that make up this object. Components are accumulated by compose operations.",
                  "format": "int32"
                },
                "contentDisposition": {
                  "type": "string",
                  "description": "Content-Disposition of the object data."
                },
                "contentEncoding": {
                  "type": "string",
                  "description": "Content-Encoding of the object data."
                },
                "contentLanguage": {
                  "type": "string",
                  "description": "Content-Language of the object data."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content-Type of the object data."
                },
                "crc32c": {
                  "type": "string",
                  "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the object."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of this object. Used for object versioning.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the object."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For objects, this is always storage#object.",
                  "default": "storage#object"
                },
                "md5Hash": {
                  "type": "string",
                  "description": "MD5 hash of the data; encoded using base64."
                },
                "mediaLink": {
                  "type": "string",
                  "description": "Media download link."
                },
                "metadata": {
                  "type": "object",
                  "description": "User-provided metadata, in key/value pairs.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "An individual metadata entry."
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of this object. Required if not specified by URL parameter."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the object. This will always be the uploader of the object.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form user-userId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this object."
                },
                "size": {
                  "type": "string",
                  "description": "Content-Length of the data in bytes.",
                  "format": "uint64"
                },
                "storageClass": {
                  "type": "string",
                  "description": "Storage class of the object."
                },
                "timeDeleted": {
                  "type": "string",
                  "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "The creation or modification time of the object in RFC 3339 format. For buckets with versioning enabled, changing an object's metadata does not change this property.",
                  "format": "date-time"
                }
              }
            }

+ Response 200

### Resource /b/{bucket}/o [/storage/v1/b/{bucket}/o{?delimiter,maxResults,pageToken,prefix,projection,versions}]

#### storage.objects.insert [POST]

+ Parameters

    + bucket (required)
  
    + contentEncoding
  
    + ifGenerationMatch
  
    + ifGenerationNotMatch
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + name
  
    + predefinedAcl
  
    + projection

+ Request

    + Schema

            {
              "type": "object",
              "description": "An object.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the object.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket containing this object."
                },
                "cacheControl": {
                  "type": "string",
                  "description": "Cache-Control directive for the object data."
                },
                "componentCount": {
                  "type": "integer",
                  "description": "Number of underlying components that make up this object. Components are accumulated by compose operations.",
                  "format": "int32"
                },
                "contentDisposition": {
                  "type": "string",
                  "description": "Content-Disposition of the object data."
                },
                "contentEncoding": {
                  "type": "string",
                  "description": "Content-Encoding of the object data."
                },
                "contentLanguage": {
                  "type": "string",
                  "description": "Content-Language of the object data."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content-Type of the object data."
                },
                "crc32c": {
                  "type": "string",
                  "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the object."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of this object. Used for object versioning.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the object."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For objects, this is always storage#object.",
                  "default": "storage#object"
                },
                "md5Hash": {
                  "type": "string",
                  "description": "MD5 hash of the data; encoded using base64."
                },
                "mediaLink": {
                  "type": "string",
                  "description": "Media download link."
                },
                "metadata": {
                  "type": "object",
                  "description": "User-provided metadata, in key/value pairs.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "An individual metadata entry."
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of this object. Required if not specified by URL parameter."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the object. This will always be the uploader of the object.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form user-userId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this object."
                },
                "size": {
                  "type": "string",
                  "description": "Content-Length of the data in bytes.",
                  "format": "uint64"
                },
                "storageClass": {
                  "type": "string",
                  "description": "Storage class of the object."
                },
                "timeDeleted": {
                  "type": "string",
                  "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "The creation or modification time of the object in RFC 3339 format. For buckets with versioning enabled, changing an object's metadata does not change this property.",
                  "format": "date-time"
                }
              }
            }

+ Response 200

#### storage.objects.list [GET]

+ Parameters

    + bucket (required)
  
    + delimiter
  
    + maxResults
  
    + pageToken
  
    + prefix
  
    + projection
  
    + versions

+ Response 200

### Resource /b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject} [/storage/v1/b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}{?destinationPredefinedAcl,ifGenerationMatch,ifGenerationNotMatch,ifMetagenerationMatch,ifMetagenerationNotMatch,ifSourceGenerationMatch,ifSourceGenerationNotMatch,ifSourceMetagenerationMatch,ifSourceMetagenerationNotMatch,maxBytesRewrittenPerCall,projection,rewriteToken,sourceGeneration}]

#### storage.objects.rewrite [POST]

+ Parameters

    + sourceBucket (required)
  
    + sourceObject (required)
  
    + destinationBucket (required)
  
    + destinationObject (required)
  
    + destinationPredefinedAcl
  
    + ifGenerationMatch
  
    + ifGenerationNotMatch
  
    + ifMetagenerationMatch
  
    + ifMetagenerationNotMatch
  
    + ifSourceGenerationMatch
  
    + ifSourceGenerationNotMatch
  
    + ifSourceMetagenerationMatch
  
    + ifSourceMetagenerationNotMatch
  
    + maxBytesRewrittenPerCall
  
    + projection
  
    + rewriteToken
  
    + sourceGeneration

+ Request

    + Schema

            {
              "type": "object",
              "description": "An object.",
              "properties": {
                "acl": {
                  "type": "array",
                  "description": "Access controls on the object.",
                  "items": {
                    "type": "object",
                    "description": "An access-control entry.",
                    "properties": {
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- project-team-projectId \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "description": "The content generation of the object.",
                        "format": "int64"
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
                        "default": "storage#objectAccessControl"
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "description": "The project team associated with the entity, if any.",
                        "properties": {
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          },
                          "team": {
                            "type": "string",
                            "description": "The team. Can be owners, editors, or viewers."
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "description": "The access permission for the entity. Can be READER or OWNER."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      }
                    }
                  }
                },
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket containing this object."
                },
                "cacheControl": {
                  "type": "string",
                  "description": "Cache-Control directive for the object data."
                },
                "componentCount": {
                  "type": "integer",
                  "description": "Number of underlying components that make up this object. Components are accumulated by compose operations.",
                  "format": "int32"
                },
                "contentDisposition": {
                  "type": "string",
                  "description": "Content-Disposition of the object data."
                },
                "contentEncoding": {
                  "type": "string",
                  "description": "Content-Encoding of the object data."
                },
                "contentLanguage": {
                  "type": "string",
                  "description": "Content-Language of the object data."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content-Type of the object data."
                },
                "crc32c": {
                  "type": "string",
                  "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the object."
                },
                "generation": {
                  "type": "string",
                  "description": "The content generation of this object. Used for object versioning.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the object."
                },
                "kind": {
                  "type": "string",
                  "description": "The kind of item this is. For objects, this is always storage#object.",
                  "default": "storage#object"
                },
                "md5Hash": {
                  "type": "string",
                  "description": "MD5 hash of the data; encoded using base64."
                },
                "mediaLink": {
                  "type": "string",
                  "description": "Media download link."
                },
                "metadata": {
                  "type": "object",
                  "description": "User-provided metadata, in key/value pairs.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "An individual metadata entry."
                  }
                },
                "metageneration": {
                  "type": "string",
                  "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "description": "The name of this object. Required if not specified by URL parameter."
                },
                "owner": {
                  "type": "object",
                  "description": "The owner of the object. This will always be the uploader of the object.",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form user-userId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this object."
                },
                "size": {
                  "type": "string",
                  "description": "Content-Length of the data in bytes.",
                  "format": "uint64"
                },
                "storageClass": {
                  "type": "string",
                  "description": "Storage class of the object."
                },
                "timeDeleted": {
                  "type": "string",
                  "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "description": "The creation or modification time of the object in RFC 3339 format. For buckets with versioning enabled, changing an object's metadata does not change this property.",
                  "format": "date-time"
                }
              }
            }

+ Response 200

### Resource /b/{bucket}/o/watch [/storage/v1/b/{bucket}/o/watch{?delimiter,maxResults,pageToken,prefix,projection,versions}]

#### storage.objects.watchAll [POST]

+ Parameters

    + bucket (required)
  
    + delimiter
  
    + maxResults
  
    + pageToken
  
    + prefix
  
    + projection
  
    + versions

+ Request

    + Schema

            {
              "type": "object",
              "description": "An notification channel used to watch for resource changes.",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The address where notifications are delivered for this channel."
                },
                "expiration": {
                  "type": "string",
                  "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
                  "format": "int64"
                },
                "id": {
                  "type": "string",
                  "description": "A UUID or similar unique string that identifies this channel."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
                  "default": "api#channel"
                },
                "params": {
                  "type": "object",
                  "description": "Additional parameters controlling delivery channel behavior. Optional.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Declares a new parameter by name."
                  }
                },
                "payload": {
                  "type": "boolean",
                  "description": "A Boolean value to indicate whether payload is wanted. Optional."
                },
                "resourceId": {
                  "type": "string",
                  "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
                },
                "resourceUri": {
                  "type": "string",
                  "description": "A version-specific identifier for the watched resource."
                },
                "token": {
                  "type": "string",
                  "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
                },
                "type": {
                  "type": "string",
                  "description": "The type of delivery mechanism used for this channel."
                }
              }
            }

+ Response 200

