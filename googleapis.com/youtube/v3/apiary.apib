FORMAT: 1A

# YouTube Data API

Programmatic access to YouTube features.

### Resource /activities [/youtube/v3/activities{?part,channelId,home,maxResults,mine,pageToken,publishedAfter,publishedBefore,regionCode}]

#### youtube.activities.insert [POST]

+ Parameters

    + part (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "An activity resource contains information about an action that a particular channel, or user, has taken on YouTube.The actions reported in activity feeds include rating a video, sharing a video, marking a video as a favorite, commenting on a video, uploading a video, and so forth. Each activity resource identifies the type of action, the channel associated with the action, and the resource(s) associated with the action, such as the video that was rated or uploaded.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "description": "Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.",
                  "properties": {
                    "bulletin": {
                      "type": "object",
                      "description": "Details about a channel bulletin post.",
                      "properties": {
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "channelItem": {
                      "type": "object",
                      "description": "Details about a resource which was added to a channel.",
                      "properties": {
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "comment": {
                      "type": "object",
                      "description": "Information about a resource that received a comment.",
                      "properties": {
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "favorite": {
                      "type": "object",
                      "description": "Information about a video that was marked as a favorite video.",
                      "properties": {
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "like": {
                      "type": "object",
                      "description": "Information about a resource that received a positive (like) rating.",
                      "properties": {
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "playlistItem": {
                      "type": "object",
                      "description": "Information about a new playlist item.",
                      "properties": {
                        "playlistId": {
                          "type": "string",
                          "description": "The value that YouTube uses to uniquely identify the playlist."
                        },
                        "playlistItemId": {
                          "type": "string",
                          "description": "ID of the item within the playlist."
                        },
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "promotedItem": {
                      "type": "object",
                      "description": "Details about a resource which is being promoted.",
                      "properties": {
                        "adTag": {
                          "type": "string",
                          "description": "The URL the client should fetch to request a promoted item."
                        },
                        "clickTrackingUrl": {
                          "type": "string",
                          "description": "The URL the client should ping to indicate that the user clicked through on this promoted item."
                        },
                        "creativeViewUrl": {
                          "type": "string",
                          "description": "The URL the client should ping to indicate that the user was shown this promoted item."
                        },
                        "ctaType": {
                          "type": "string",
                          "description": "The type of call-to-action, a message to the user indicating action that can be taken.",
                          "enum": [
                            "unspecified",
                            "visitAdvertiserSite"
                          ]
                        },
                        "customCtaButtonText": {
                          "type": "string",
                          "description": "The custom call-to-action button text. If specified, it will override the default button text for the cta_type."
                        },
                        "descriptionText": {
                          "type": "string",
                          "description": "The text description to accompany the promoted item."
                        },
                        "destinationUrl": {
                          "type": "string",
                          "description": "The URL the client should direct the user to, if the user chooses to visit the advertiser's website."
                        },
                        "forecastingUrl": {
                          "type": "array",
                          "description": "The list of forecasting URLs. The client should ping all of these URLs when a promoted item is not available, to indicate that a promoted item could have been shown.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "impressionUrl": {
                          "type": "array",
                          "description": "The list of impression URLs. The client should ping all of these URLs to indicate that the user was shown this promoted item.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "videoId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the promoted video."
                        }
                      }
                    },
                    "recommendation": {
                      "type": "object",
                      "description": "Information that identifies the recommended resource.",
                      "properties": {
                        "reason": {
                          "type": "string",
                          "description": "The reason that the resource is recommended to the user.",
                          "enum": [
                            "unspecified",
                            "videoFavorited",
                            "videoLiked",
                            "videoWatched"
                          ]
                        },
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        },
                        "seedResourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "social": {
                      "type": "object",
                      "description": "Details about a social network post.",
                      "properties": {
                        "author": {
                          "type": "string",
                          "description": "The author of the social network post."
                        },
                        "imageUrl": {
                          "type": "string",
                          "description": "An image of the post's author."
                        },
                        "referenceUrl": {
                          "type": "string",
                          "description": "The URL of the social network post."
                        },
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "The name of the social network.",
                          "enum": [
                            "facebook",
                            "googlePlus",
                            "twitter",
                            "unspecified"
                          ]
                        }
                      }
                    },
                    "subscription": {
                      "type": "object",
                      "description": "Information about a channel that a user subscribed to.",
                      "properties": {
                        "resourceId": {
                          "type": "object",
                          "description": "A resource id is a generic reference that points to another YouTube resource.",
                          "properties": {
                            "channelId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                            },
                            "kind": {
                              "type": "string",
                              "description": "The type of the API resource."
                            },
                            "playlistId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                            }
                          }
                        }
                      }
                    },
                    "upload": {
                      "type": "object",
                      "description": "Information about the uploaded video.",
                      "properties": {
                        "videoId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the uploaded video."
                        }
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the activity."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#activity\".",
                  "default": "youtube#activity"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about an activity, including title, description, thumbnails, activity type and group.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel associated with the activity."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "Channel title for the channel responsible for this activity"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the resource primarily associated with the activity."
                    },
                    "groupId": {
                      "type": "string",
                      "description": "The group ID associated with the activity. A group ID identifies user events that are associated with the same user and resource. For example, if a user rates a video and marks the same video as a favorite, the entries for those events would have the same group ID in the user's activity feed. In your user interface, you can avoid repetition by grouping events with the same groupId value."
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the resource primarily associated with the activity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of activity that the resource describes.",
                      "enum": [
                        "bulletin",
                        "channelItem",
                        "comment",
                        "favorite",
                        "like",
                        "playlistItem",
                        "promotedItem",
                        "recommendation",
                        "social",
                        "subscription",
                        "upload"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.activities.list [GET]

+ Parameters

    + part (required)
  
    + channelId
  
    + home
  
    + maxResults
  
    + mine
  
    + pageToken
  
    + publishedAfter
  
    + publishedBefore
  
    + regionCode

+ Response 200

### Resource /captions [/youtube/v3/captions{?part,debugProjectIdOverride,onBehalfOf,onBehalfOfContentOwner,sync}]

#### youtube.captions.delete [DELETE]

+ Parameters

    + id (required)
  
    + debugProjectIdOverride
  
    + onBehalfOf
  
    + onBehalfOfContentOwner

+ Response 200

#### youtube.captions.insert [POST]

+ Parameters

    + part (required)
  
    + debugProjectIdOverride
  
    + onBehalfOf
  
    + onBehalfOfContentOwner
  
    + sync

+ Request

    + Schema

            {
              "type": "object",
              "description": "A caption resource represents a YouTube caption track. A caption track is associated with exactly one YouTube video.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the caption track."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#caption\".",
                  "default": "youtube#caption"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a caption track, such as its language and name.",
                  "properties": {
                    "audioTrackType": {
                      "type": "string",
                      "description": "The type of audio track associated with the caption track.",
                      "enum": [
                        "commentary",
                        "descriptive",
                        "primary",
                        "unknown"
                      ]
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed.",
                      "enum": [
                        "processingFailed",
                        "unknownFormat",
                        "unsupportedFormat"
                      ]
                    },
                    "isAutoSynced": {
                      "type": "boolean",
                      "description": "Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions."
                    },
                    "isCC": {
                      "type": "boolean",
                      "description": "Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false."
                    },
                    "isDraft": {
                      "type": "boolean",
                      "description": "Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false."
                    },
                    "isEasyReader": {
                      "type": "boolean",
                      "description": "Indicates whether caption track is formatted for \"easy reader,\" meaning it is at a third-grade level for language learners. The default value is false."
                    },
                    "isLarge": {
                      "type": "boolean",
                      "description": "Indicates whether the caption track uses large text for the vision-impaired. The default value is false."
                    },
                    "language": {
                      "type": "string",
                      "description": "The language of the caption track. The property value is a BCP-47 language tag."
                    },
                    "lastUpdated": {
                      "type": "string",
                      "description": "The date and time when the caption track was last updated. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the caption track. The name is intended to be visible to the user as an option during playback."
                    },
                    "status": {
                      "type": "string",
                      "description": "The caption track's status.",
                      "enum": [
                        "failed",
                        "serving",
                        "syncing"
                      ]
                    },
                    "trackKind": {
                      "type": "string",
                      "description": "The caption track's type.",
                      "enum": [
                        "ASR",
                        "forced",
                        "standard"
                      ]
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the video associated with the caption track."
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.captions.list [GET]

+ Parameters

    + part (required)
  
    + videoId (required)
  
    + debugProjectIdOverride
  
    + id
  
    + onBehalfOf
  
    + onBehalfOfContentOwner

+ Response 200

#### youtube.captions.update [PUT]

+ Parameters

    + part (required)
  
    + debugProjectIdOverride
  
    + onBehalfOf
  
    + onBehalfOfContentOwner
  
    + sync

+ Request

    + Schema

            {
              "type": "object",
              "description": "A caption resource represents a YouTube caption track. A caption track is associated with exactly one YouTube video.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the caption track."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#caption\".",
                  "default": "youtube#caption"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a caption track, such as its language and name.",
                  "properties": {
                    "audioTrackType": {
                      "type": "string",
                      "description": "The type of audio track associated with the caption track.",
                      "enum": [
                        "commentary",
                        "descriptive",
                        "primary",
                        "unknown"
                      ]
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed.",
                      "enum": [
                        "processingFailed",
                        "unknownFormat",
                        "unsupportedFormat"
                      ]
                    },
                    "isAutoSynced": {
                      "type": "boolean",
                      "description": "Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions."
                    },
                    "isCC": {
                      "type": "boolean",
                      "description": "Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false."
                    },
                    "isDraft": {
                      "type": "boolean",
                      "description": "Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false."
                    },
                    "isEasyReader": {
                      "type": "boolean",
                      "description": "Indicates whether caption track is formatted for \"easy reader,\" meaning it is at a third-grade level for language learners. The default value is false."
                    },
                    "isLarge": {
                      "type": "boolean",
                      "description": "Indicates whether the caption track uses large text for the vision-impaired. The default value is false."
                    },
                    "language": {
                      "type": "string",
                      "description": "The language of the caption track. The property value is a BCP-47 language tag."
                    },
                    "lastUpdated": {
                      "type": "string",
                      "description": "The date and time when the caption track was last updated. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the caption track. The name is intended to be visible to the user as an option during playback."
                    },
                    "status": {
                      "type": "string",
                      "description": "The caption track's status.",
                      "enum": [
                        "failed",
                        "serving",
                        "syncing"
                      ]
                    },
                    "trackKind": {
                      "type": "string",
                      "description": "The caption track's type.",
                      "enum": [
                        "ASR",
                        "forced",
                        "standard"
                      ]
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the video associated with the caption track."
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /captions/{id} [/youtube/v3/captions/{id}{?debugProjectIdOverride,onBehalfOf,onBehalfOfContentOwner,tfmt,tlang}]

#### youtube.captions.download [GET]

+ Parameters

    + id (required)
  
    + debugProjectIdOverride
  
    + onBehalfOf
  
    + onBehalfOfContentOwner
  
    + tfmt
  
    + tlang

+ Response 200

### Resource /channelBanners/insert [/youtube/v3/channelBanners/insert{?onBehalfOfContentOwner}]

#### youtube.channelBanners.insert [POST]

+ Parameters

    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "description": "A channel banner returned as the response to a channel_banner.insert call.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#channelBannerResource\".",
                  "default": "youtube#channelBannerResource"
                },
                "url": {
                  "type": "string",
                  "description": "The URL of this banner image."
                }
              }
            }

+ Response 200

### Resource /channelSections [/youtube/v3/channelSections{?part,onBehalfOfContentOwner}]

#### youtube.channelSections.delete [DELETE]

+ Parameters

    + id (required)
  
    + onBehalfOfContentOwner

+ Response 200

#### youtube.channelSections.insert [POST]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "description": "Details about a channelsection, including playlists and channels.",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "description": "The channel ids for type multiple_channels.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "playlists": {
                      "type": "array",
                      "description": "The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the channel section."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#channelSection\".",
                  "default": "youtube#channelSection"
                },
                "localizations": {
                  "type": "object",
                  "description": "Localizations for different languages",
                  "additionalProperties": {
                    "type": "object",
                    "description": "ChannelSection localization setting",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The localized strings for channel section's title."
                      }
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a channel section, including title, style and position.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that published the channel section."
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The language of the channel section's default title and description."
                    },
                    "localized": {
                      "type": "object",
                      "description": "ChannelSection localization setting",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The localized strings for channel section's title."
                        }
                      }
                    },
                    "position": {
                      "type": "integer",
                      "description": "The position of the channel section in the channel.",
                      "format": "uint32"
                    },
                    "style": {
                      "type": "string",
                      "description": "The style of the channel section.",
                      "enum": [
                        "channelsectionStyleUndefined",
                        "horizontalRow",
                        "verticalList"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The channel section's title for multiple_playlists and multiple_channels."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the channel section.",
                      "enum": [
                        "allPlaylists",
                        "channelsectionTypeUndefined",
                        "completedEvents",
                        "likedPlaylists",
                        "likes",
                        "liveEvents",
                        "multipleChannels",
                        "multiplePlaylists",
                        "popularUploads",
                        "postedPlaylists",
                        "postedVideos",
                        "recentActivity",
                        "recentPosts",
                        "recentUploads",
                        "singlePlaylist",
                        "subscriptions",
                        "upcomingEvents"
                      ]
                    }
                  }
                },
                "targeting": {
                  "type": "object",
                  "description": "ChannelSection targeting setting.",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "description": "The country the channel section is targeting.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "languages": {
                      "type": "array",
                      "description": "The language the channel section is targeting.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "regions": {
                      "type": "array",
                      "description": "The region the channel section is targeting.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.channelSections.list [GET]

+ Parameters

    + part (required)
  
    + channelId
  
    + hl
  
    + id
  
    + mine
  
    + onBehalfOfContentOwner

+ Response 200

#### youtube.channelSections.update [PUT]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "description": "Details about a channelsection, including playlists and channels.",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "description": "The channel ids for type multiple_channels.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "playlists": {
                      "type": "array",
                      "description": "The playlist ids for type single_playlist and multiple_playlists. For singlePlaylist, only one playlistId is allowed.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the channel section."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#channelSection\".",
                  "default": "youtube#channelSection"
                },
                "localizations": {
                  "type": "object",
                  "description": "Localizations for different languages",
                  "additionalProperties": {
                    "type": "object",
                    "description": "ChannelSection localization setting",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The localized strings for channel section's title."
                      }
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a channel section, including title, style and position.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that published the channel section."
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The language of the channel section's default title and description."
                    },
                    "localized": {
                      "type": "object",
                      "description": "ChannelSection localization setting",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The localized strings for channel section's title."
                        }
                      }
                    },
                    "position": {
                      "type": "integer",
                      "description": "The position of the channel section in the channel.",
                      "format": "uint32"
                    },
                    "style": {
                      "type": "string",
                      "description": "The style of the channel section.",
                      "enum": [
                        "channelsectionStyleUndefined",
                        "horizontalRow",
                        "verticalList"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The channel section's title for multiple_playlists and multiple_channels."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the channel section.",
                      "enum": [
                        "allPlaylists",
                        "channelsectionTypeUndefined",
                        "completedEvents",
                        "likedPlaylists",
                        "likes",
                        "liveEvents",
                        "multipleChannels",
                        "multiplePlaylists",
                        "popularUploads",
                        "postedPlaylists",
                        "postedVideos",
                        "recentActivity",
                        "recentPosts",
                        "recentUploads",
                        "singlePlaylist",
                        "subscriptions",
                        "upcomingEvents"
                      ]
                    }
                  }
                },
                "targeting": {
                  "type": "object",
                  "description": "ChannelSection targeting setting.",
                  "properties": {
                    "countries": {
                      "type": "array",
                      "description": "The country the channel section is targeting.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "languages": {
                      "type": "array",
                      "description": "The language the channel section is targeting.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "regions": {
                      "type": "array",
                      "description": "The region the channel section is targeting.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /channels [/youtube/v3/channels{?part,onBehalfOfContentOwner}]

#### youtube.channels.list [GET]

+ Parameters

    + part (required)
  
    + categoryId
  
    + forUsername
  
    + hl
  
    + id
  
    + managedByMe
  
    + maxResults
  
    + mine
  
    + mySubscribers
  
    + onBehalfOfContentOwner
  
    + pageToken

+ Response 200

#### youtube.channels.update [PUT]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "description": "A channel resource contains information about a YouTube channel.",
              "properties": {
                "auditDetails": {
                  "type": "object",
                  "description": "The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.",
                  "properties": {
                    "communityGuidelinesGoodStanding": {
                      "type": "boolean",
                      "description": "Whether or not the channel respects the community guidelines."
                    },
                    "contentIdClaimsGoodStanding": {
                      "type": "boolean",
                      "description": "Whether or not the channel has any unresolved claims."
                    },
                    "copyrightStrikesGoodStanding": {
                      "type": "boolean",
                      "description": "Whether or not the channel has any copyright strikes."
                    },
                    "overallGoodStanding": {
                      "type": "boolean",
                      "description": "Describes the general state of the channel. This field will always show if there are any issues whatsoever with the channel. Currently this field represents the result of the logical and operation over the community guidelines good standing, the copyright strikes good standing and the content ID claims good standing, but this may change in the future."
                    }
                  }
                },
                "brandingSettings": {
                  "type": "object",
                  "description": "Branding properties of a YouTube channel.",
                  "properties": {
                    "channel": {
                      "type": "object",
                      "description": "Branding properties for the channel view.",
                      "properties": {
                        "country": {
                          "type": "string",
                          "description": "The country of the channel."
                        },
                        "defaultLanguage": {
                          "type": "string"
                        },
                        "defaultTab": {
                          "type": "string",
                          "description": "Which content tab users should see when viewing the channel."
                        },
                        "description": {
                          "type": "string",
                          "description": "Specifies the channel description."
                        },
                        "featuredChannelsTitle": {
                          "type": "string",
                          "description": "Title for the featured channels tab."
                        },
                        "featuredChannelsUrls": {
                          "type": "array",
                          "description": "The list of featured channels.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "keywords": {
                          "type": "string",
                          "description": "Lists keywords associated with the channel, comma-separated."
                        },
                        "moderateComments": {
                          "type": "boolean",
                          "description": "Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible."
                        },
                        "profileColor": {
                          "type": "string",
                          "description": "A prominent color that can be rendered on this channel page."
                        },
                        "showBrowseView": {
                          "type": "boolean",
                          "description": "Whether the tab to browse the videos should be displayed."
                        },
                        "showRelatedChannels": {
                          "type": "boolean",
                          "description": "Whether related channels should be proposed."
                        },
                        "title": {
                          "type": "string",
                          "description": "Specifies the channel title."
                        },
                        "trackingAnalyticsAccountId": {
                          "type": "string",
                          "description": "The ID for a Google Analytics account to track and measure traffic to the channels."
                        },
                        "unsubscribedTrailer": {
                          "type": "string",
                          "description": "The trailer of the channel, for users that are not subscribers."
                        }
                      }
                    },
                    "hints": {
                      "type": "array",
                      "description": "Additional experimental branding properties.",
                      "items": {
                        "type": "object",
                        "description": "A pair Property / Value.",
                        "properties": {
                          "property": {
                            "type": "string",
                            "description": "A property."
                          },
                          "value": {
                            "type": "string",
                            "description": "The property's value."
                          }
                        }
                      }
                    },
                    "image": {
                      "type": "object",
                      "description": "Branding properties for images associated with the channel.",
                      "properties": {
                        "backgroundImageUrl": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string"
                            },
                            "defaultLanguage": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "localized": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "bannerExternalUrl": {
                          "type": "string",
                          "description": "This is used only in update requests; if it's set, we use this URL to generate all of the above banner URLs."
                        },
                        "bannerImageUrl": {
                          "type": "string",
                          "description": "Banner image. Desktop size (1060x175)."
                        },
                        "bannerMobileExtraHdImageUrl": {
                          "type": "string",
                          "description": "Banner image. Mobile size high resolution (1440x395)."
                        },
                        "bannerMobileHdImageUrl": {
                          "type": "string",
                          "description": "Banner image. Mobile size high resolution (1280x360)."
                        },
                        "bannerMobileImageUrl": {
                          "type": "string",
                          "description": "Banner image. Mobile size (640x175)."
                        },
                        "bannerMobileLowImageUrl": {
                          "type": "string",
                          "description": "Banner image. Mobile size low resolution (320x88)."
                        },
                        "bannerMobileMediumHdImageUrl": {
                          "type": "string",
                          "description": "Banner image. Mobile size medium/high resolution (960x263)."
                        },
                        "bannerTabletExtraHdImageUrl": {
                          "type": "string",
                          "description": "Banner image. Tablet size extra high resolution (2560x424)."
                        },
                        "bannerTabletHdImageUrl": {
                          "type": "string",
                          "description": "Banner image. Tablet size high resolution (2276x377)."
                        },
                        "bannerTabletImageUrl": {
                          "type": "string",
                          "description": "Banner image. Tablet size (1707x283)."
                        },
                        "bannerTabletLowImageUrl": {
                          "type": "string",
                          "description": "Banner image. Tablet size low resolution (1138x188)."
                        },
                        "bannerTvHighImageUrl": {
                          "type": "string",
                          "description": "Banner image. TV size high resolution (1920x1080)."
                        },
                        "bannerTvImageUrl": {
                          "type": "string",
                          "description": "Banner image. TV size extra high resolution (2120x1192)."
                        },
                        "bannerTvLowImageUrl": {
                          "type": "string",
                          "description": "Banner image. TV size low resolution (854x480)."
                        },
                        "bannerTvMediumImageUrl": {
                          "type": "string",
                          "description": "Banner image. TV size medium resolution (1280x720)."
                        },
                        "largeBrandedBannerImageImapScript": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string"
                            },
                            "defaultLanguage": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "localized": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "largeBrandedBannerImageUrl": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string"
                            },
                            "defaultLanguage": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "localized": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "smallBrandedBannerImageImapScript": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string"
                            },
                            "defaultLanguage": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "localized": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "smallBrandedBannerImageUrl": {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string"
                            },
                            "defaultLanguage": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "localized": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trackingImageUrl": {
                          "type": "string",
                          "description": "The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages."
                        },
                        "watchIconImageUrl": {
                          "type": "string",
                          "description": "The URL for the image that appears above the top-left corner of the video player. This is a 25-pixel-high image with a flexible width that cannot exceed 170 pixels."
                        }
                      }
                    },
                    "watch": {
                      "type": "object",
                      "description": "Branding properties for the watch.",
                      "properties": {
                        "backgroundColor": {
                          "type": "string",
                          "description": "The text color for the video watch page's branded area."
                        },
                        "featuredPlaylistId": {
                          "type": "string",
                          "description": "An ID that uniquely identifies a playlist that displays next to the video player."
                        },
                        "textColor": {
                          "type": "string",
                          "description": "The background color for the video watch page's branded area."
                        }
                      }
                    }
                  }
                },
                "contentDetails": {
                  "type": "object",
                  "description": "Details about the content of a channel.",
                  "properties": {
                    "googlePlusUserId": {
                      "type": "string",
                      "description": "The googlePlusUserId object identifies the Google+ profile ID associated with this channel."
                    },
                    "relatedPlaylists": {
                      "type": "object",
                      "properties": {
                        "favorites": {
                          "type": "string",
                          "description": "The ID of the playlist that contains the channel\"s favorite videos. Use the  playlistItems.insert and  playlistItems.delete to add or remove items from that list."
                        },
                        "likes": {
                          "type": "string",
                          "description": "The ID of the playlist that contains the channel\"s liked videos. Use the   playlistItems.insert and  playlistItems.delete to add or remove items from that list."
                        },
                        "uploads": {
                          "type": "string",
                          "description": "The ID of the playlist that contains the channel\"s uploaded videos. Use the  videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos."
                        },
                        "watchHistory": {
                          "type": "string",
                          "description": "The ID of the playlist that contains the channel\"s watch history. Use the  playlistItems.insert and  playlistItems.delete to add or remove items from that list."
                        },
                        "watchLater": {
                          "type": "string",
                          "description": "The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and  playlistItems.delete to add or remove items from that list."
                        }
                      }
                    }
                  }
                },
                "contentOwnerDetails": {
                  "type": "object",
                  "description": "The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.",
                  "properties": {
                    "contentOwner": {
                      "type": "string",
                      "description": "The ID of the content owner linked to the channel."
                    },
                    "timeLinked": {
                      "type": "string",
                      "description": "The date and time of when the channel was linked to the content owner. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    }
                  }
                },
                "conversionPings": {
                  "type": "object",
                  "description": "The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.",
                  "properties": {
                    "pings": {
                      "type": "array",
                      "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.",
                      "items": {
                        "type": "object",
                        "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.",
                        "properties": {
                          "context": {
                            "type": "string",
                            "description": "Defines the context of the ping.",
                            "enum": [
                              "cview",
                              "subscribe",
                              "unsubscribe"
                            ]
                          },
                          "conversionUrl": {
                            "type": "string",
                            "description": "The url (without the schema) that the player shall send the ping to. It's at caller's descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping."
                          }
                        }
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the channel."
                },
                "invideoPromotion": {
                  "type": "object",
                  "description": "Describes an invideo promotion campaign consisting of multiple promoted items. A campaign belongs to a single channel_id.",
                  "properties": {
                    "defaultTiming": {
                      "type": "object",
                      "description": "Describes a temporal position of a visual widget inside a video.",
                      "properties": {
                        "durationMs": {
                          "type": "string",
                          "description": "Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.",
                          "format": "uint64"
                        },
                        "offsetMs": {
                          "type": "string",
                          "description": "Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.",
                          "format": "uint64"
                        },
                        "type": {
                          "type": "string",
                          "description": "Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.",
                          "enum": [
                            "offsetFromEnd",
                            "offsetFromStart"
                          ]
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "description": "List of promoted items in decreasing priority.",
                      "items": {
                        "type": "object",
                        "description": "Describes a single promoted item.",
                        "properties": {
                          "customMessage": {
                            "type": "string",
                            "description": "A custom message to display for this promotion. This field is currently ignored unless the promoted item is a website."
                          },
                          "id": {
                            "type": "object",
                            "description": "Describes a single promoted item id. It is a union of various possible types.",
                            "properties": {
                              "recentlyUploadedBy": {
                                "type": "string",
                                "description": "If type is recentUpload, this field identifies the channel from which to take the recent upload. If missing, the channel is assumed to be the same channel for which the invideoPromotion is set."
                              },
                              "type": {
                                "type": "string",
                                "description": "Describes the type of the promoted item.",
                                "enum": [
                                  "recentUpload",
                                  "video",
                                  "website"
                                ]
                              },
                              "videoId": {
                                "type": "string",
                                "description": "If the promoted item represents a video, this field represents the unique YouTube ID identifying it. This field will be present only if type has the value video."
                              },
                              "websiteUrl": {
                                "type": "string",
                                "description": "If the promoted item represents a website, this field represents the url pointing to the website. This field will be present only if type has the value website."
                              }
                            }
                          },
                          "promotedByContentOwner": {
                            "type": "boolean",
                            "description": "If true, the content owner's name will be used when displaying the promotion. This field can only be set when the update is made on behalf of the content owner."
                          },
                          "timing": {
                            "type": "object",
                            "description": "Describes a temporal position of a visual widget inside a video.",
                            "properties": {
                              "durationMs": {
                                "type": "string",
                                "description": "Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.",
                                "format": "uint64"
                              },
                              "offsetMs": {
                                "type": "string",
                                "description": "Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.",
                                "format": "uint64"
                              },
                              "type": {
                                "type": "string",
                                "description": "Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.",
                                "enum": [
                                  "offsetFromEnd",
                                  "offsetFromStart"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "position": {
                      "type": "object",
                      "description": "Describes the spatial position of a visual widget inside a video. It is a union of various position types, out of which only will be set one.",
                      "properties": {
                        "cornerPosition": {
                          "type": "string",
                          "description": "Describes in which corner of the video the visual widget will appear.",
                          "enum": [
                            "bottomLeft",
                            "bottomRight",
                            "topLeft",
                            "topRight"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "description": "Defines the position type.",
                          "enum": [
                            "corner"
                          ]
                        }
                      }
                    },
                    "useSmartTiming": {
                      "type": "boolean",
                      "description": "Indicates whether the channel's promotional campaign uses \"smart timing.\" This feature attempts to show promotions at a point in the video when they are more likely to be clicked and less likely to disrupt the viewing experience. This feature also picks up a single promotion to show on each video."
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#channel\".",
                  "default": "youtube#channel"
                },
                "localizations": {
                  "type": "object",
                  "description": "Localizations for different languages",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Channel localization setting",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "The localized strings for channel's description."
                      },
                      "title": {
                        "type": "string",
                        "description": "The localized strings for channel's title."
                      }
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a channel, including title, description and thumbnails.",
                  "properties": {
                    "country": {
                      "type": "string",
                      "description": "The country of the channel."
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The language of the channel's default title and description."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the channel."
                    },
                    "localized": {
                      "type": "object",
                      "description": "Channel localization setting",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "The localized strings for channel's description."
                        },
                        "title": {
                          "type": "string",
                          "description": "The localized strings for channel's title."
                        }
                      }
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the channel was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The channel's title."
                    }
                  }
                },
                "statistics": {
                  "type": "object",
                  "description": "Statistics about a channel: number of subscribers, number of videos in the channel, etc.",
                  "properties": {
                    "commentCount": {
                      "type": "string",
                      "description": "The number of comments for the channel.",
                      "format": "uint64"
                    },
                    "hiddenSubscriberCount": {
                      "type": "boolean",
                      "description": "Whether or not the number of subscribers is shown for this user."
                    },
                    "subscriberCount": {
                      "type": "string",
                      "description": "The number of subscribers that the channel has.",
                      "format": "uint64"
                    },
                    "videoCount": {
                      "type": "string",
                      "description": "The number of videos uploaded to the channel.",
                      "format": "uint64"
                    },
                    "viewCount": {
                      "type": "string",
                      "description": "The number of times the channel has been viewed.",
                      "format": "uint64"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "JSON template for the status part of a channel.",
                  "properties": {
                    "isLinked": {
                      "type": "boolean",
                      "description": "If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity."
                    },
                    "longUploadsStatus": {
                      "type": "string",
                      "description": "The long uploads status of this channel. See",
                      "enum": [
                        "allowed",
                        "disallowed",
                        "eligible",
                        "longUploadsUnspecified"
                      ]
                    },
                    "privacyStatus": {
                      "type": "string",
                      "description": "Privacy status of the channel.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    }
                  }
                },
                "topicDetails": {
                  "type": "object",
                  "description": "Freebase topic information related to the channel.",
                  "properties": {
                    "topicIds": {
                      "type": "array",
                      "description": "A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /commentThreads [/youtube/v3/commentThreads{?part}]

#### youtube.commentThreads.insert [POST]

+ Parameters

    + part (required)
  
    + shareOnGooglePlus

+ Request

    + Schema

            {
              "type": "object",
              "description": "A comment thread represents information that applies to a top level comment and all its replies. It can also include the top level comment itself and some of the replies.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the comment thread."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#commentThread\".",
                  "default": "youtube#commentThread"
                },
                "replies": {
                  "type": "object",
                  "description": "Comments written in (direct or indirect) reply to the top level comment.",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "description": "A limited number of replies. Unless the number of replies returned equals total_reply_count in the snippet the returned replies are only a subset of the total number of replies.",
                      "items": {
                        "type": "object",
                        "description": "A comment represents a single YouTube comment.",
                        "properties": {
                          "etag": {
                            "type": "string",
                            "description": "Etag of this resource."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID that YouTube uses to uniquely identify the comment."
                          },
                          "kind": {
                            "type": "string",
                            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
                            "default": "youtube#comment"
                          },
                          "snippet": {
                            "type": "object",
                            "description": "Basic details about a comment, such as its author and text.",
                            "properties": {
                              "authorChannelId": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              "authorChannelUrl": {
                                "type": "string",
                                "description": "Link to the author's YouTube channel, if any."
                              },
                              "authorDisplayName": {
                                "type": "string",
                                "description": "The name of the user who posted the comment."
                              },
                              "authorGoogleplusProfileUrl": {
                                "type": "string",
                                "description": "Link to the author's Google+ profile, if any."
                              },
                              "authorProfileImageUrl": {
                                "type": "string",
                                "description": "The URL for the avatar of the user who posted the comment."
                              },
                              "canRate": {
                                "type": "boolean",
                                "description": "Whether the current viewer can rate this comment."
                              },
                              "channelId": {
                                "type": "string",
                                "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel."
                              },
                              "likeCount": {
                                "type": "integer",
                                "description": "The total number of likes this comment has received.",
                                "format": "uint32"
                              },
                              "moderationStatus": {
                                "type": "string",
                                "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                                "enum": [
                                  "heldForReview",
                                  "likelySpam",
                                  "published",
                                  "rejected"
                                ]
                              },
                              "parentId": {
                                "type": "string",
                                "description": "The unique id of the parent comment, only set for replies."
                              },
                              "publishedAt": {
                                "type": "string",
                                "description": "The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                                "format": "date-time"
                              },
                              "textDisplay": {
                                "type": "string",
                                "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc."
                              },
                              "textOriginal": {
                                "type": "string",
                                "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author."
                              },
                              "updatedAt": {
                                "type": "string",
                                "description": "The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                                "format": "date-time"
                              },
                              "videoId": {
                                "type": "string",
                                "description": "The ID of the video the comment refers to, if any."
                              },
                              "viewerRating": {
                                "type": "string",
                                "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
                                "enum": [
                                  "dislike",
                                  "like",
                                  "none",
                                  "unspecified"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a comment thread.",
                  "properties": {
                    "canReply": {
                      "type": "boolean",
                      "description": "Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field."
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself."
                    },
                    "isPublic": {
                      "type": "boolean",
                      "description": "Whether the thread (and therefore all its comments) is visible to all YouTube users."
                    },
                    "topLevelComment": {
                      "type": "object",
                      "description": "A comment represents a single YouTube comment.",
                      "properties": {
                        "etag": {
                          "type": "string",
                          "description": "Etag of this resource."
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the comment."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
                          "default": "youtube#comment"
                        },
                        "snippet": {
                          "type": "object",
                          "description": "Basic details about a comment, such as its author and text.",
                          "properties": {
                            "authorChannelId": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "authorChannelUrl": {
                              "type": "string",
                              "description": "Link to the author's YouTube channel, if any."
                            },
                            "authorDisplayName": {
                              "type": "string",
                              "description": "The name of the user who posted the comment."
                            },
                            "authorGoogleplusProfileUrl": {
                              "type": "string",
                              "description": "Link to the author's Google+ profile, if any."
                            },
                            "authorProfileImageUrl": {
                              "type": "string",
                              "description": "The URL for the avatar of the user who posted the comment."
                            },
                            "canRate": {
                              "type": "boolean",
                              "description": "Whether the current viewer can rate this comment."
                            },
                            "channelId": {
                              "type": "string",
                              "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel."
                            },
                            "likeCount": {
                              "type": "integer",
                              "description": "The total number of likes this comment has received.",
                              "format": "uint32"
                            },
                            "moderationStatus": {
                              "type": "string",
                              "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                              "enum": [
                                "heldForReview",
                                "likelySpam",
                                "published",
                                "rejected"
                              ]
                            },
                            "parentId": {
                              "type": "string",
                              "description": "The unique id of the parent comment, only set for replies."
                            },
                            "publishedAt": {
                              "type": "string",
                              "description": "The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                              "format": "date-time"
                            },
                            "textDisplay": {
                              "type": "string",
                              "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc."
                            },
                            "textOriginal": {
                              "type": "string",
                              "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author."
                            },
                            "updatedAt": {
                              "type": "string",
                              "description": "The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                              "format": "date-time"
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID of the video the comment refers to, if any."
                            },
                            "viewerRating": {
                              "type": "string",
                              "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
                              "enum": [
                                "dislike",
                                "like",
                                "none",
                                "unspecified"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "totalReplyCount": {
                      "type": "integer",
                      "description": "The total number of replies (not including the top level comment).",
                      "format": "uint32"
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment."
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.commentThreads.list [GET]

+ Parameters

    + part (required)
  
    + allThreadsRelatedToChannelId
  
    + channelId
  
    + id
  
    + maxResults
  
    + moderationStatus
  
    + order
  
    + pageToken
  
    + searchTerms
  
    + textFormat
  
    + videoId

+ Response 200

#### youtube.commentThreads.update [PUT]

+ Parameters

    + part (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A comment thread represents information that applies to a top level comment and all its replies. It can also include the top level comment itself and some of the replies.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the comment thread."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#commentThread\".",
                  "default": "youtube#commentThread"
                },
                "replies": {
                  "type": "object",
                  "description": "Comments written in (direct or indirect) reply to the top level comment.",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "description": "A limited number of replies. Unless the number of replies returned equals total_reply_count in the snippet the returned replies are only a subset of the total number of replies.",
                      "items": {
                        "type": "object",
                        "description": "A comment represents a single YouTube comment.",
                        "properties": {
                          "etag": {
                            "type": "string",
                            "description": "Etag of this resource."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID that YouTube uses to uniquely identify the comment."
                          },
                          "kind": {
                            "type": "string",
                            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
                            "default": "youtube#comment"
                          },
                          "snippet": {
                            "type": "object",
                            "description": "Basic details about a comment, such as its author and text.",
                            "properties": {
                              "authorChannelId": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              "authorChannelUrl": {
                                "type": "string",
                                "description": "Link to the author's YouTube channel, if any."
                              },
                              "authorDisplayName": {
                                "type": "string",
                                "description": "The name of the user who posted the comment."
                              },
                              "authorGoogleplusProfileUrl": {
                                "type": "string",
                                "description": "Link to the author's Google+ profile, if any."
                              },
                              "authorProfileImageUrl": {
                                "type": "string",
                                "description": "The URL for the avatar of the user who posted the comment."
                              },
                              "canRate": {
                                "type": "boolean",
                                "description": "Whether the current viewer can rate this comment."
                              },
                              "channelId": {
                                "type": "string",
                                "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel."
                              },
                              "likeCount": {
                                "type": "integer",
                                "description": "The total number of likes this comment has received.",
                                "format": "uint32"
                              },
                              "moderationStatus": {
                                "type": "string",
                                "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                                "enum": [
                                  "heldForReview",
                                  "likelySpam",
                                  "published",
                                  "rejected"
                                ]
                              },
                              "parentId": {
                                "type": "string",
                                "description": "The unique id of the parent comment, only set for replies."
                              },
                              "publishedAt": {
                                "type": "string",
                                "description": "The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                                "format": "date-time"
                              },
                              "textDisplay": {
                                "type": "string",
                                "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc."
                              },
                              "textOriginal": {
                                "type": "string",
                                "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author."
                              },
                              "updatedAt": {
                                "type": "string",
                                "description": "The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                                "format": "date-time"
                              },
                              "videoId": {
                                "type": "string",
                                "description": "The ID of the video the comment refers to, if any."
                              },
                              "viewerRating": {
                                "type": "string",
                                "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
                                "enum": [
                                  "dislike",
                                  "like",
                                  "none",
                                  "unspecified"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a comment thread.",
                  "properties": {
                    "canReply": {
                      "type": "boolean",
                      "description": "Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field."
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself."
                    },
                    "isPublic": {
                      "type": "boolean",
                      "description": "Whether the thread (and therefore all its comments) is visible to all YouTube users."
                    },
                    "topLevelComment": {
                      "type": "object",
                      "description": "A comment represents a single YouTube comment.",
                      "properties": {
                        "etag": {
                          "type": "string",
                          "description": "Etag of this resource."
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the comment."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
                          "default": "youtube#comment"
                        },
                        "snippet": {
                          "type": "object",
                          "description": "Basic details about a comment, such as its author and text.",
                          "properties": {
                            "authorChannelId": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "authorChannelUrl": {
                              "type": "string",
                              "description": "Link to the author's YouTube channel, if any."
                            },
                            "authorDisplayName": {
                              "type": "string",
                              "description": "The name of the user who posted the comment."
                            },
                            "authorGoogleplusProfileUrl": {
                              "type": "string",
                              "description": "Link to the author's Google+ profile, if any."
                            },
                            "authorProfileImageUrl": {
                              "type": "string",
                              "description": "The URL for the avatar of the user who posted the comment."
                            },
                            "canRate": {
                              "type": "boolean",
                              "description": "Whether the current viewer can rate this comment."
                            },
                            "channelId": {
                              "type": "string",
                              "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel."
                            },
                            "likeCount": {
                              "type": "integer",
                              "description": "The total number of likes this comment has received.",
                              "format": "uint32"
                            },
                            "moderationStatus": {
                              "type": "string",
                              "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                              "enum": [
                                "heldForReview",
                                "likelySpam",
                                "published",
                                "rejected"
                              ]
                            },
                            "parentId": {
                              "type": "string",
                              "description": "The unique id of the parent comment, only set for replies."
                            },
                            "publishedAt": {
                              "type": "string",
                              "description": "The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                              "format": "date-time"
                            },
                            "textDisplay": {
                              "type": "string",
                              "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc."
                            },
                            "textOriginal": {
                              "type": "string",
                              "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author."
                            },
                            "updatedAt": {
                              "type": "string",
                              "description": "The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                              "format": "date-time"
                            },
                            "videoId": {
                              "type": "string",
                              "description": "The ID of the video the comment refers to, if any."
                            },
                            "viewerRating": {
                              "type": "string",
                              "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
                              "enum": [
                                "dislike",
                                "like",
                                "none",
                                "unspecified"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "totalReplyCount": {
                      "type": "integer",
                      "description": "The total number of replies (not including the top level comment).",
                      "format": "uint32"
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment."
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /comments [/youtube/v3/comments{?part}]

#### youtube.comments.delete [DELETE]

+ Parameters

    + id (required)

+ Response 200

#### youtube.comments.insert [POST]

+ Parameters

    + part (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A comment represents a single YouTube comment.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the comment."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
                  "default": "youtube#comment"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a comment, such as its author and text.",
                  "properties": {
                    "authorChannelId": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "authorChannelUrl": {
                      "type": "string",
                      "description": "Link to the author's YouTube channel, if any."
                    },
                    "authorDisplayName": {
                      "type": "string",
                      "description": "The name of the user who posted the comment."
                    },
                    "authorGoogleplusProfileUrl": {
                      "type": "string",
                      "description": "Link to the author's Google+ profile, if any."
                    },
                    "authorProfileImageUrl": {
                      "type": "string",
                      "description": "The URL for the avatar of the user who posted the comment."
                    },
                    "canRate": {
                      "type": "boolean",
                      "description": "Whether the current viewer can rate this comment."
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel."
                    },
                    "likeCount": {
                      "type": "integer",
                      "description": "The total number of likes this comment has received.",
                      "format": "uint32"
                    },
                    "moderationStatus": {
                      "type": "string",
                      "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                      "enum": [
                        "heldForReview",
                        "likelySpam",
                        "published",
                        "rejected"
                      ]
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The unique id of the parent comment, only set for replies."
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "textDisplay": {
                      "type": "string",
                      "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc."
                    },
                    "textOriginal": {
                      "type": "string",
                      "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author."
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID of the video the comment refers to, if any."
                    },
                    "viewerRating": {
                      "type": "string",
                      "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
                      "enum": [
                        "dislike",
                        "like",
                        "none",
                        "unspecified"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.comments.list [GET]

+ Parameters

    + part (required)
  
    + id
  
    + maxResults
  
    + pageToken
  
    + parentId
  
    + textFormat

+ Response 200

#### youtube.comments.update [PUT]

+ Parameters

    + part (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A comment represents a single YouTube comment.",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the comment."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
                  "default": "youtube#comment"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a comment, such as its author and text.",
                  "properties": {
                    "authorChannelId": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "authorChannelUrl": {
                      "type": "string",
                      "description": "Link to the author's YouTube channel, if any."
                    },
                    "authorDisplayName": {
                      "type": "string",
                      "description": "The name of the user who posted the comment."
                    },
                    "authorGoogleplusProfileUrl": {
                      "type": "string",
                      "description": "Link to the author's Google+ profile, if any."
                    },
                    "authorProfileImageUrl": {
                      "type": "string",
                      "description": "The URL for the avatar of the user who posted the comment."
                    },
                    "canRate": {
                      "type": "boolean",
                      "description": "Whether the current viewer can rate this comment."
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel."
                    },
                    "likeCount": {
                      "type": "integer",
                      "description": "The total number of likes this comment has received.",
                      "format": "uint32"
                    },
                    "moderationStatus": {
                      "type": "string",
                      "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                      "enum": [
                        "heldForReview",
                        "likelySpam",
                        "published",
                        "rejected"
                      ]
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The unique id of the parent comment, only set for replies."
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "textDisplay": {
                      "type": "string",
                      "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc."
                    },
                    "textOriginal": {
                      "type": "string",
                      "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author."
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The date and time when was last updated . The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID of the video the comment refers to, if any."
                    },
                    "viewerRating": {
                      "type": "string",
                      "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
                      "enum": [
                        "dislike",
                        "like",
                        "none",
                        "unspecified"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /comments/markAsSpam [/youtube/v3/comments/markAsSpam{?id}]

#### youtube.comments.markAsSpam [POST]

+ Parameters

    + id (required)

+ Response 200

### Resource /comments/setModerationStatus [/youtube/v3/comments/setModerationStatus{?id,moderationStatus,banAuthor}]

#### youtube.comments.setModerationStatus [POST]

+ Parameters

    + id (required)
  
    + moderationStatus (required)
  
    + banAuthor

+ Response 200

### Resource /guideCategories [/youtube/v3/guideCategories{?part,hl,id,regionCode}]

#### youtube.guideCategories.list [GET]

+ Parameters

    + part (required)
  
    + hl
  
    + id
  
    + regionCode

+ Response 200

### Resource /i18nLanguages [/youtube/v3/i18nLanguages{?part,hl}]

#### youtube.i18nLanguages.list [GET]

+ Parameters

    + part (required)
  
    + hl

+ Response 200

### Resource /i18nRegions [/youtube/v3/i18nRegions{?part,hl}]

#### youtube.i18nRegions.list [GET]

+ Parameters

    + part (required)
  
    + hl

+ Response 200

### Resource /liveBroadcasts/bind [/youtube/v3/liveBroadcasts/bind{?id,part,onBehalfOfContentOwner,onBehalfOfContentOwnerChannel,streamId}]

#### youtube.liveBroadcasts.bind [POST]

+ Parameters

    + id (required)
  
    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel
  
    + streamId

+ Response 200

### Resource /liveBroadcasts/control [/youtube/v3/liveBroadcasts/control{?id,part,displaySlate,offsetTimeMs,onBehalfOfContentOwner,onBehalfOfContentOwnerChannel,walltime}]

#### youtube.liveBroadcasts.control [POST]

+ Parameters

    + id (required)
  
    + part (required)
  
    + displaySlate
  
    + offsetTimeMs
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel
  
    + walltime

+ Response 200

### Resource /liveBroadcasts [/youtube/v3/liveBroadcasts{?part,onBehalfOfContentOwner,onBehalfOfContentOwnerChannel}]

#### youtube.liveBroadcasts.delete [DELETE]

+ Parameters

    + id (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Response 200

#### youtube.liveBroadcasts.insert [POST]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Request

    + Schema

            {
              "type": "object",
              "description": "A liveBroadcast resource represents an event that will be streamed, via live video, on YouTube.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "description": "Detailed settings of a broadcast.",
                  "properties": {
                    "boundStreamId": {
                      "type": "string",
                      "description": "This value uniquely identifies the live stream bound to the broadcast."
                    },
                    "enableClosedCaptions": {
                      "type": "boolean",
                      "description": "This setting indicates whether closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API."
                    },
                    "enableContentEncryption": {
                      "type": "boolean",
                      "description": "This setting indicates whether YouTube should enable content encryption for the broadcast."
                    },
                    "enableDvr": {
                      "type": "boolean",
                      "description": "This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true.\n\n\n\nImportant: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends."
                    },
                    "enableEmbed": {
                      "type": "boolean",
                      "description": "This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video."
                    },
                    "enableLowLatency": {
                      "type": "boolean"
                    },
                    "monitorStream": {
                      "type": "object",
                      "description": "Settings and Info of the monitor stream",
                      "properties": {
                        "broadcastStreamDelayMs": {
                          "type": "integer",
                          "description": "If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay.",
                          "format": "uint32"
                        },
                        "embedHtml": {
                          "type": "string",
                          "description": "HTML code that embeds a player that plays the monitor stream."
                        },
                        "enableMonitorStream": {
                          "type": "boolean",
                          "description": "This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints.\n\nYou need to set this value to true if you intend to have a broadcast delay for your event.\n\nNote: This property cannot be updated once the broadcast is in the testing or live state."
                        }
                      }
                    },
                    "recordFromStart": {
                      "type": "boolean",
                      "description": "Automatically start recording after the event goes live. The default value for this property is true.\n\n\n\nImportant: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback."
                    },
                    "startWithSlate": {
                      "type": "boolean",
                      "description": "This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers."
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube assigns to uniquely identify the broadcast."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#liveBroadcast\".",
                  "default": "youtube#liveBroadcast"
                },
                "snippet": {
                  "type": "object",
                  "properties": {
                    "actualEndTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "actualStartTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast."
                    },
                    "description": {
                      "type": "string",
                      "description": "The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource."
                    },
                    "isDefaultBroadcast": {
                      "type": "boolean"
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the broadcast was added to YouTube's live broadcast schedule. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "scheduledEndTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "scheduledStartTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast is scheduled to start. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource."
                    }
                  }
                },
                "statistics": {
                  "type": "object",
                  "description": "Statistics about the live broadcast. These represent a snapshot of the values at the time of the request. Statistics are only returned for live broadcasts.",
                  "properties": {
                    "concurrentViewers": {
                      "type": "string",
                      "description": "The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.",
                      "format": "uint64"
                    },
                    "totalChatCount": {
                      "type": "string",
                      "description": "The total number of live chat messages currently on the broadcast. The property and its value will be present if the broadcast is public, has the live chat feature enabled, and has at least one message. Note that this field will not be filled after the broadcast ends. So this property would not identify the number of chat messages for an archived video of a completed live broadcast.",
                      "format": "uint64"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "lifeCycleStatus": {
                      "type": "string",
                      "description": "The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method.",
                      "enum": [
                        "abandoned",
                        "complete",
                        "completeStarting",
                        "created",
                        "live",
                        "liveStarting",
                        "ready",
                        "reclaimed",
                        "revoked",
                        "testStarting",
                        "testing"
                      ]
                    },
                    "liveBroadcastPriority": {
                      "type": "string",
                      "description": "Priority of the live broadcast event (internal state).",
                      "enum": [
                        "high",
                        "low",
                        "normal"
                      ]
                    },
                    "privacyStatus": {
                      "type": "string",
                      "description": "The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    },
                    "recordingStatus": {
                      "type": "string",
                      "description": "The broadcast's recording status.",
                      "enum": [
                        "notRecording",
                        "recorded",
                        "recording"
                      ]
                    }
                  }
                },
                "topicDetails": {
                  "type": "object",
                  "properties": {
                    "topics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "snippet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the topic."
                              },
                              "releaseDate": {
                                "type": "string",
                                "description": "The date at which the topic was released. Filled for types: videoGame"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the topic.",
                            "enum": [
                              "videoGame"
                            ]
                          },
                          "unmatched": {
                            "type": "boolean",
                            "description": "If this flag is set it means that we have not been able to match the topic title and type provided to a known entity."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.liveBroadcasts.list [GET]

+ Parameters

    + part (required)
  
    + broadcastStatus
  
    + id
  
    + maxResults
  
    + mine
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel
  
    + pageToken

+ Response 200

#### youtube.liveBroadcasts.update [PUT]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Request

    + Schema

            {
              "type": "object",
              "description": "A liveBroadcast resource represents an event that will be streamed, via live video, on YouTube.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "description": "Detailed settings of a broadcast.",
                  "properties": {
                    "boundStreamId": {
                      "type": "string",
                      "description": "This value uniquely identifies the live stream bound to the broadcast."
                    },
                    "enableClosedCaptions": {
                      "type": "boolean",
                      "description": "This setting indicates whether closed captioning is enabled for this broadcast. The ingestion URL of the closed captions is returned through the liveStreams API."
                    },
                    "enableContentEncryption": {
                      "type": "boolean",
                      "description": "This setting indicates whether YouTube should enable content encryption for the broadcast."
                    },
                    "enableDvr": {
                      "type": "boolean",
                      "description": "This setting determines whether viewers can access DVR controls while watching the video. DVR controls enable the viewer to control the video playback experience by pausing, rewinding, or fast forwarding content. The default value for this property is true.\n\n\n\nImportant: You must set the value to true and also set the enableArchive property's value to true if you want to make playback available immediately after the broadcast ends."
                    },
                    "enableEmbed": {
                      "type": "boolean",
                      "description": "This setting indicates whether the broadcast video can be played in an embedded player. If you choose to archive the video (using the enableArchive property), this setting will also apply to the archived video."
                    },
                    "enableLowLatency": {
                      "type": "boolean"
                    },
                    "monitorStream": {
                      "type": "object",
                      "description": "Settings and Info of the monitor stream",
                      "properties": {
                        "broadcastStreamDelayMs": {
                          "type": "integer",
                          "description": "If you have set the enableMonitorStream property to true, then this property determines the length of the live broadcast delay.",
                          "format": "uint32"
                        },
                        "embedHtml": {
                          "type": "string",
                          "description": "HTML code that embeds a player that plays the monitor stream."
                        },
                        "enableMonitorStream": {
                          "type": "boolean",
                          "description": "This value determines whether the monitor stream is enabled for the broadcast. If the monitor stream is enabled, then YouTube will broadcast the event content on a special stream intended only for the broadcaster's consumption. The broadcaster can use the stream to review the event content and also to identify the optimal times to insert cuepoints.\n\nYou need to set this value to true if you intend to have a broadcast delay for your event.\n\nNote: This property cannot be updated once the broadcast is in the testing or live state."
                        }
                      }
                    },
                    "recordFromStart": {
                      "type": "boolean",
                      "description": "Automatically start recording after the event goes live. The default value for this property is true.\n\n\n\nImportant: You must also set the enableDvr property's value to true if you want the playback to be available immediately after the broadcast ends. If you set this property's value to true but do not also set the enableDvr property to true, there may be a delay of around one day before the archived video will be available for playback."
                    },
                    "startWithSlate": {
                      "type": "boolean",
                      "description": "This setting indicates whether the broadcast should automatically begin with an in-stream slate when you update the broadcast's status to live. After updating the status, you then need to send a liveCuepoints.insert request that sets the cuepoint's eventState to end to remove the in-stream slate and make your broadcast stream visible to viewers."
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube assigns to uniquely identify the broadcast."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#liveBroadcast\".",
                  "default": "youtube#liveBroadcast"
                },
                "snippet": {
                  "type": "object",
                  "properties": {
                    "actualEndTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "actualStartTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast actually started. This information is only available once the broadcast's state is live. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast."
                    },
                    "description": {
                      "type": "string",
                      "description": "The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource."
                    },
                    "isDefaultBroadcast": {
                      "type": "boolean"
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the broadcast was added to YouTube's live broadcast schedule. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "scheduledEndTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "scheduledStartTime": {
                      "type": "string",
                      "description": "The date and time that the broadcast is scheduled to start. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource."
                    }
                  }
                },
                "statistics": {
                  "type": "object",
                  "description": "Statistics about the live broadcast. These represent a snapshot of the values at the time of the request. Statistics are only returned for live broadcasts.",
                  "properties": {
                    "concurrentViewers": {
                      "type": "string",
                      "description": "The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.",
                      "format": "uint64"
                    },
                    "totalChatCount": {
                      "type": "string",
                      "description": "The total number of live chat messages currently on the broadcast. The property and its value will be present if the broadcast is public, has the live chat feature enabled, and has at least one message. Note that this field will not be filled after the broadcast ends. So this property would not identify the number of chat messages for an archived video of a completed live broadcast.",
                      "format": "uint64"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "lifeCycleStatus": {
                      "type": "string",
                      "description": "The broadcast's status. The status can be updated using the API's liveBroadcasts.transition method.",
                      "enum": [
                        "abandoned",
                        "complete",
                        "completeStarting",
                        "created",
                        "live",
                        "liveStarting",
                        "ready",
                        "reclaimed",
                        "revoked",
                        "testStarting",
                        "testing"
                      ]
                    },
                    "liveBroadcastPriority": {
                      "type": "string",
                      "description": "Priority of the live broadcast event (internal state).",
                      "enum": [
                        "high",
                        "low",
                        "normal"
                      ]
                    },
                    "privacyStatus": {
                      "type": "string",
                      "description": "The broadcast's privacy status. Note that the broadcast represents exactly one YouTube video, so the privacy settings are identical to those supported for videos. In addition, you can set this field by modifying the broadcast resource or by setting the privacyStatus field of the corresponding video resource.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    },
                    "recordingStatus": {
                      "type": "string",
                      "description": "The broadcast's recording status.",
                      "enum": [
                        "notRecording",
                        "recorded",
                        "recording"
                      ]
                    }
                  }
                },
                "topicDetails": {
                  "type": "object",
                  "properties": {
                    "topics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "snippet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the topic."
                              },
                              "releaseDate": {
                                "type": "string",
                                "description": "The date at which the topic was released. Filled for types: videoGame"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the topic.",
                            "enum": [
                              "videoGame"
                            ]
                          },
                          "unmatched": {
                            "type": "boolean",
                            "description": "If this flag is set it means that we have not been able to match the topic title and type provided to a known entity."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /liveBroadcasts/transition [/youtube/v3/liveBroadcasts/transition{?broadcastStatus,id,part,onBehalfOfContentOwner,onBehalfOfContentOwnerChannel}]

#### youtube.liveBroadcasts.transition [POST]

+ Parameters

    + broadcastStatus (required)
  
    + id (required)
  
    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Response 200

### Resource /liveStreams [/youtube/v3/liveStreams{?part,onBehalfOfContentOwner,onBehalfOfContentOwnerChannel}]

#### youtube.liveStreams.delete [DELETE]

+ Parameters

    + id (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Response 200

#### youtube.liveStreams.insert [POST]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Request

    + Schema

            {
              "type": "object",
              "description": "A live stream describes a live ingestion point.",
              "properties": {
                "cdn": {
                  "type": "object",
                  "description": "Brief description of the live stream cdn settings.",
                  "properties": {
                    "format": {
                      "type": "string",
                      "description": "The format of the video stream that you are sending to Youtube."
                    },
                    "ingestionInfo": {
                      "type": "object",
                      "description": "Describes information necessary for ingesting an RTMP or an HTTP stream.",
                      "properties": {
                        "backupIngestionAddress": {
                          "type": "string",
                          "description": "The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL."
                        },
                        "ingestionAddress": {
                          "type": "string",
                          "description": "The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL.\n\nDepending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format:\n\nSTREAM_URL/STREAM_NAME"
                        },
                        "streamName": {
                          "type": "string",
                          "description": "The HTTP or RTMP stream name that YouTube assigns to the video stream."
                        }
                      }
                    },
                    "ingestionType": {
                      "type": "string",
                      "description": "The method or protocol used to transmit the video stream.",
                      "enum": [
                        "dash",
                        "rtmp"
                      ]
                    }
                  }
                },
                "contentDetails": {
                  "type": "object",
                  "description": "Detailed settings of a stream.",
                  "properties": {
                    "closedCaptionsIngestionUrl": {
                      "type": "string",
                      "description": "The ingestion URL where the closed captions of this stream are sent."
                    },
                    "isReusable": {
                      "type": "boolean",
                      "description": "Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times.\n\nIf you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways:  \n- A non-reusable stream can only be bound to one broadcast. \n- A non-reusable stream might be deleted by an automated process after the broadcast ends. \n- The  liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream."
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube assigns to uniquely identify the stream."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#liveStream\".",
                  "default": "youtube#liveStream"
                },
                "snippet": {
                  "type": "object",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that is transmitting the stream."
                    },
                    "description": {
                      "type": "string",
                      "description": "The stream's description. The value cannot be longer than 10000 characters."
                    },
                    "isDefaultStream": {
                      "type": "boolean"
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the stream was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "title": {
                      "type": "string",
                      "description": "The stream's title. The value must be between 1 and 128 characters long."
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "Brief description of the live stream status.",
                  "properties": {
                    "healthStatus": {
                      "type": "object",
                      "properties": {
                        "configurationIssues": {
                          "type": "array",
                          "description": "The configurations issues on this stream",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "The long-form description of the issue and how to resolve it."
                              },
                              "reason": {
                                "type": "string",
                                "description": "The short-form reason for this issue."
                              },
                              "severity": {
                                "type": "string",
                                "description": "How severe this issue is to the stream.",
                                "enum": [
                                  "error",
                                  "info",
                                  "warning"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "The kind of error happening.",
                                "enum": [
                                  "audioBitrate",
                                  "audioBitrateHigh",
                                  "audioBitrateLow",
                                  "audioCodec",
                                  "audioCodecMismatch",
                                  "audioSampleRate",
                                  "audioSampleRateMismatch",
                                  "audioStereoMismatch",
                                  "audioTooManyChannel",
                                  "badContainer",
                                  "bitrateHigh",
                                  "bitrateLow",
                                  "framerateHigh",
                                  "framerateMismatch",
                                  "gopMismatch",
                                  "gopSizeLong",
                                  "gopSizeOver",
                                  "gopSizeShort",
                                  "interlaceVideo",
                                  "multipleAudioStreams",
                                  "multipleVideoStreams",
                                  "noAudioStream",
                                  "noVideoStream",
                                  "openGop",
                                  "resolutionMismatch",
                                  "videoBitrateMismatch",
                                  "videoCodec",
                                  "videoCodecMismatch",
                                  "videoIngestionStarved",
                                  "videoInterlaceMismatch",
                                  "videoProfileMismatch",
                                  "videoResolutionSuboptimal",
                                  "videoResolutionUnsupported"
                                ]
                              }
                            }
                          }
                        },
                        "lastUpdateTimeS": {
                          "type": "string",
                          "description": "The last time this status was updated (in seconds)",
                          "format": "uint64"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status code of this stream",
                          "enum": [
                            "bad",
                            "good",
                            "noData",
                            "ok",
                            "revoked"
                          ]
                        }
                      }
                    },
                    "streamStatus": {
                      "type": "string",
                      "enum": [
                        "active",
                        "created",
                        "error",
                        "inactive",
                        "ready"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.liveStreams.list [GET]

+ Parameters

    + part (required)
  
    + id
  
    + maxResults
  
    + mine
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel
  
    + pageToken

+ Response 200

#### youtube.liveStreams.update [PUT]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Request

    + Schema

            {
              "type": "object",
              "description": "A live stream describes a live ingestion point.",
              "properties": {
                "cdn": {
                  "type": "object",
                  "description": "Brief description of the live stream cdn settings.",
                  "properties": {
                    "format": {
                      "type": "string",
                      "description": "The format of the video stream that you are sending to Youtube."
                    },
                    "ingestionInfo": {
                      "type": "object",
                      "description": "Describes information necessary for ingesting an RTMP or an HTTP stream.",
                      "properties": {
                        "backupIngestionAddress": {
                          "type": "string",
                          "description": "The backup ingestion URL that you should use to stream video to YouTube. You have the option of simultaneously streaming the content that you are sending to the ingestionAddress to this URL."
                        },
                        "ingestionAddress": {
                          "type": "string",
                          "description": "The primary ingestion URL that you should use to stream video to YouTube. You must stream video to this URL.\n\nDepending on which application or tool you use to encode your video stream, you may need to enter the stream URL and stream name separately or you may need to concatenate them in the following format:\n\nSTREAM_URL/STREAM_NAME"
                        },
                        "streamName": {
                          "type": "string",
                          "description": "The HTTP or RTMP stream name that YouTube assigns to the video stream."
                        }
                      }
                    },
                    "ingestionType": {
                      "type": "string",
                      "description": "The method or protocol used to transmit the video stream.",
                      "enum": [
                        "dash",
                        "rtmp"
                      ]
                    }
                  }
                },
                "contentDetails": {
                  "type": "object",
                  "description": "Detailed settings of a stream.",
                  "properties": {
                    "closedCaptionsIngestionUrl": {
                      "type": "string",
                      "description": "The ingestion URL where the closed captions of this stream are sent."
                    },
                    "isReusable": {
                      "type": "boolean",
                      "description": "Indicates whether the stream is reusable, which means that it can be bound to multiple broadcasts. It is common for broadcasters to reuse the same stream for many different broadcasts if those broadcasts occur at different times.\n\nIf you set this value to false, then the stream will not be reusable, which means that it can only be bound to one broadcast. Non-reusable streams differ from reusable streams in the following ways:  \n- A non-reusable stream can only be bound to one broadcast. \n- A non-reusable stream might be deleted by an automated process after the broadcast ends. \n- The  liveStreams.list method does not list non-reusable streams if you call the method and set the mine parameter to true. The only way to use that method to retrieve the resource for a non-reusable stream is to use the id parameter to identify the stream."
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube assigns to uniquely identify the stream."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#liveStream\".",
                  "default": "youtube#liveStream"
                },
                "snippet": {
                  "type": "object",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that is transmitting the stream."
                    },
                    "description": {
                      "type": "string",
                      "description": "The stream's description. The value cannot be longer than 10000 characters."
                    },
                    "isDefaultStream": {
                      "type": "boolean"
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the stream was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "title": {
                      "type": "string",
                      "description": "The stream's title. The value must be between 1 and 128 characters long."
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "Brief description of the live stream status.",
                  "properties": {
                    "healthStatus": {
                      "type": "object",
                      "properties": {
                        "configurationIssues": {
                          "type": "array",
                          "description": "The configurations issues on this stream",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "The long-form description of the issue and how to resolve it."
                              },
                              "reason": {
                                "type": "string",
                                "description": "The short-form reason for this issue."
                              },
                              "severity": {
                                "type": "string",
                                "description": "How severe this issue is to the stream.",
                                "enum": [
                                  "error",
                                  "info",
                                  "warning"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "The kind of error happening.",
                                "enum": [
                                  "audioBitrate",
                                  "audioBitrateHigh",
                                  "audioBitrateLow",
                                  "audioCodec",
                                  "audioCodecMismatch",
                                  "audioSampleRate",
                                  "audioSampleRateMismatch",
                                  "audioStereoMismatch",
                                  "audioTooManyChannel",
                                  "badContainer",
                                  "bitrateHigh",
                                  "bitrateLow",
                                  "framerateHigh",
                                  "framerateMismatch",
                                  "gopMismatch",
                                  "gopSizeLong",
                                  "gopSizeOver",
                                  "gopSizeShort",
                                  "interlaceVideo",
                                  "multipleAudioStreams",
                                  "multipleVideoStreams",
                                  "noAudioStream",
                                  "noVideoStream",
                                  "openGop",
                                  "resolutionMismatch",
                                  "videoBitrateMismatch",
                                  "videoCodec",
                                  "videoCodecMismatch",
                                  "videoIngestionStarved",
                                  "videoInterlaceMismatch",
                                  "videoProfileMismatch",
                                  "videoResolutionSuboptimal",
                                  "videoResolutionUnsupported"
                                ]
                              }
                            }
                          }
                        },
                        "lastUpdateTimeS": {
                          "type": "string",
                          "description": "The last time this status was updated (in seconds)",
                          "format": "uint64"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status code of this stream",
                          "enum": [
                            "bad",
                            "good",
                            "noData",
                            "ok",
                            "revoked"
                          ]
                        }
                      }
                    },
                    "streamStatus": {
                      "type": "string",
                      "enum": [
                        "active",
                        "created",
                        "error",
                        "inactive",
                        "ready"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /playlistItems [/youtube/v3/playlistItems{?part}]

#### youtube.playlistItems.delete [DELETE]

+ Parameters

    + id (required)

+ Response 200

#### youtube.playlistItems.insert [POST]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "description": "A playlistItem resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem  resource contains details about the included resource that pertain specifically to how that resource is used in that playlist.\n\nYouTube uses playlists to identify special collections of videos for a channel, such as:  \n- uploaded videos \n- favorite videos \n- positively rated (liked) videos \n- watch history \n- watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information.\n\nYou can retrieve the playlist IDs for each of these lists from the  channel resource  for a given channel. You can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user's channel.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "properties": {
                    "endAt": {
                      "type": "string",
                      "description": "The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video."
                    },
                    "note": {
                      "type": "string",
                      "description": "A user-generated note for this item."
                    },
                    "startAt": {
                      "type": "string",
                      "description": "The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0."
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request."
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the playlist item."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\".",
                  "default": "youtube#playlistItem"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a playlist, including title, description and thumbnails.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the user that added the item to the playlist."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "Channel title for the channel that the playlist item belongs to."
                    },
                    "description": {
                      "type": "string",
                      "description": "The item's description."
                    },
                    "playlistId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the playlist that the playlist item is in."
                    },
                    "position": {
                      "type": "integer",
                      "description": "The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.",
                      "format": "uint32"
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the item was added to the playlist. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "resourceId": {
                      "type": "object",
                      "description": "A resource id is a generic reference that points to another YouTube resource.",
                      "properties": {
                        "channelId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                        },
                        "kind": {
                          "type": "string",
                          "description": "The type of the API resource."
                        },
                        "playlistId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                        },
                        "videoId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                        }
                      }
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The item's title."
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "Information about the playlist item's privacy status.",
                  "properties": {
                    "privacyStatus": {
                      "type": "string",
                      "description": "This resource's privacy status.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.playlistItems.list [GET]

+ Parameters

    + part (required)
  
    + id
  
    + maxResults
  
    + onBehalfOfContentOwner
  
    + pageToken
  
    + playlistId
  
    + videoId

+ Response 200

#### youtube.playlistItems.update [PUT]

+ Parameters

    + part (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A playlistItem resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem  resource contains details about the included resource that pertain specifically to how that resource is used in that playlist.\n\nYouTube uses playlists to identify special collections of videos for a channel, such as:  \n- uploaded videos \n- favorite videos \n- positively rated (liked) videos \n- watch history \n- watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information.\n\nYou can retrieve the playlist IDs for each of these lists from the  channel resource  for a given channel. You can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user's channel.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "properties": {
                    "endAt": {
                      "type": "string",
                      "description": "The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video."
                    },
                    "note": {
                      "type": "string",
                      "description": "A user-generated note for this item."
                    },
                    "startAt": {
                      "type": "string",
                      "description": "The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0."
                    },
                    "videoId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request."
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the playlist item."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\".",
                  "default": "youtube#playlistItem"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a playlist, including title, description and thumbnails.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the user that added the item to the playlist."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "Channel title for the channel that the playlist item belongs to."
                    },
                    "description": {
                      "type": "string",
                      "description": "The item's description."
                    },
                    "playlistId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the playlist that the playlist item is in."
                    },
                    "position": {
                      "type": "integer",
                      "description": "The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.",
                      "format": "uint32"
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the item was added to the playlist. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "resourceId": {
                      "type": "object",
                      "description": "A resource id is a generic reference that points to another YouTube resource.",
                      "properties": {
                        "channelId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                        },
                        "kind": {
                          "type": "string",
                          "description": "The type of the API resource."
                        },
                        "playlistId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                        },
                        "videoId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                        }
                      }
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The item's title."
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "Information about the playlist item's privacy status.",
                  "properties": {
                    "privacyStatus": {
                      "type": "string",
                      "description": "This resource's privacy status.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /playlists [/youtube/v3/playlists{?part,onBehalfOfContentOwner}]

#### youtube.playlists.delete [DELETE]

+ Parameters

    + id (required)
  
    + onBehalfOfContentOwner

+ Response 200

#### youtube.playlists.insert [POST]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel

+ Request

    + Schema

            {
              "type": "object",
              "description": "A playlist resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. A playlist can contain up to 200 videos, and YouTube does not limit the number of playlists that each user creates. By default, playlists are publicly visible to other users, but playlists can be public or private.\n\nYouTube also uses playlists to identify special collections of videos for a channel, such as:  \n- uploaded videos \n- favorite videos \n- positively rated (liked) videos \n- watch history \n- watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the  channel resource for a given channel.\n\nYou can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "properties": {
                    "itemCount": {
                      "type": "integer",
                      "description": "The number of videos in the playlist.",
                      "format": "uint32"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the playlist."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#playlist\".",
                  "default": "youtube#playlist"
                },
                "localizations": {
                  "type": "object",
                  "description": "Localizations for different languages",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Playlist localization setting",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "The localized strings for playlist's description."
                      },
                      "title": {
                        "type": "string",
                        "description": "The localized strings for playlist's title."
                      }
                    }
                  }
                },
                "player": {
                  "type": "object",
                  "properties": {
                    "embedHtml": {
                      "type": "string",
                      "description": "An <iframe> tag that embeds a player that will play the playlist."
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a playlist, including title, description and thumbnails.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that published the playlist."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "The channel title of the channel that the video belongs to."
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The language of the playlist's default title and description."
                    },
                    "description": {
                      "type": "string",
                      "description": "The playlist's description."
                    },
                    "localized": {
                      "type": "object",
                      "description": "Playlist localization setting",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "The localized strings for playlist's description."
                        },
                        "title": {
                          "type": "string",
                          "description": "The localized strings for playlist's title."
                        }
                      }
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the playlist was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "tags": {
                      "type": "array",
                      "description": "Keyword tags associated with the playlist.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The playlist's title."
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "privacyStatus": {
                      "type": "string",
                      "description": "The playlist's privacy status.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.playlists.list [GET]

+ Parameters

    + part (required)
  
    + channelId
  
    + hl
  
    + id
  
    + maxResults
  
    + mine
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel
  
    + pageToken

+ Response 200

#### youtube.playlists.update [PUT]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "description": "A playlist resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. A playlist can contain up to 200 videos, and YouTube does not limit the number of playlists that each user creates. By default, playlists are publicly visible to other users, but playlists can be public or private.\n\nYouTube also uses playlists to identify special collections of videos for a channel, such as:  \n- uploaded videos \n- favorite videos \n- positively rated (liked) videos \n- watch history \n- watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the  channel resource for a given channel.\n\nYou can then use the   playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the   playlistItems.insert and   playlistItems.delete methods.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "properties": {
                    "itemCount": {
                      "type": "integer",
                      "description": "The number of videos in the playlist.",
                      "format": "uint32"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the playlist."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#playlist\".",
                  "default": "youtube#playlist"
                },
                "localizations": {
                  "type": "object",
                  "description": "Localizations for different languages",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Playlist localization setting",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "The localized strings for playlist's description."
                      },
                      "title": {
                        "type": "string",
                        "description": "The localized strings for playlist's title."
                      }
                    }
                  }
                },
                "player": {
                  "type": "object",
                  "properties": {
                    "embedHtml": {
                      "type": "string",
                      "description": "An <iframe> tag that embeds a player that will play the playlist."
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a playlist, including title, description and thumbnails.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that published the playlist."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "The channel title of the channel that the video belongs to."
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The language of the playlist's default title and description."
                    },
                    "description": {
                      "type": "string",
                      "description": "The playlist's description."
                    },
                    "localized": {
                      "type": "object",
                      "description": "Playlist localization setting",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "The localized strings for playlist's description."
                        },
                        "title": {
                          "type": "string",
                          "description": "The localized strings for playlist's title."
                        }
                      }
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the playlist was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "tags": {
                      "type": "array",
                      "description": "Keyword tags associated with the playlist.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The playlist's title."
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "privacyStatus": {
                      "type": "string",
                      "description": "The playlist's privacy status.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /search [/youtube/v3/search{?part,channelId,channelType,eventType,forContentOwner,forDeveloper,forMine,location,locationRadius,maxResults,onBehalfOfContentOwner,order,pageToken,publishedAfter,publishedBefore,q,regionCode,relatedToVideoId,relevanceLanguage,safeSearch,topicId,type,videoCaption,videoCategoryId,videoDefinition,videoDimension,videoDuration,videoEmbeddable,videoLicense,videoSyndicated,videoType}]

#### youtube.search.list [GET]

+ Parameters

    + part (required)
  
    + channelId
  
    + channelType
  
    + eventType
  
    + forContentOwner
  
    + forDeveloper
  
    + forMine
  
    + location
  
    + locationRadius
  
    + maxResults
  
    + onBehalfOfContentOwner
  
    + order
  
    + pageToken
  
    + publishedAfter
  
    + publishedBefore
  
    + q
  
    + regionCode
  
    + relatedToVideoId
  
    + relevanceLanguage
  
    + safeSearch
  
    + topicId
  
    + type
  
    + videoCaption
  
    + videoCategoryId
  
    + videoDefinition
  
    + videoDimension
  
    + videoDuration
  
    + videoEmbeddable
  
    + videoLicense
  
    + videoSyndicated
  
    + videoType

+ Response 200

### Resource /subscriptions [/youtube/v3/subscriptions{?part,channelId,forChannelId,id,maxResults,mine,mySubscribers,onBehalfOfContentOwner,onBehalfOfContentOwnerChannel,order,pageToken}]

#### youtube.subscriptions.delete [DELETE]

+ Parameters

    + id (required)

+ Response 200

#### youtube.subscriptions.insert [POST]

+ Parameters

    + part (required)

+ Request

    + Schema

            {
              "type": "object",
              "description": "A subscription resource contains information about a YouTube user subscription. A subscription notifies a user when new videos are added to a channel or when another user takes one of several actions on YouTube, such as uploading a video, rating a video, or commenting on a video.",
              "properties": {
                "contentDetails": {
                  "type": "object",
                  "description": "Details about the content to witch a subscription refers.",
                  "properties": {
                    "activityType": {
                      "type": "string",
                      "description": "The type of activity this subscription is for (only uploads, everything).",
                      "enum": [
                        "all",
                        "uploads"
                      ]
                    },
                    "newItemCount": {
                      "type": "integer",
                      "description": "The number of new items in the subscription since its content was last read.",
                      "format": "uint32"
                    },
                    "totalItemCount": {
                      "type": "integer",
                      "description": "The approximate number of items that the subscription points to.",
                      "format": "uint32"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the subscription."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#subscription\".",
                  "default": "youtube#subscription"
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a subscription, including title, description and thumbnails of the subscribed item.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the subscriber's channel."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "Channel title for the channel that the subscription belongs to."
                    },
                    "description": {
                      "type": "string",
                      "description": "The subscription's details."
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the subscription was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "resourceId": {
                      "type": "object",
                      "description": "A resource id is a generic reference that points to another YouTube resource.",
                      "properties": {
                        "channelId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel."
                        },
                        "kind": {
                          "type": "string",
                          "description": "The type of the API resource."
                        },
                        "playlistId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist."
                        },
                        "videoId": {
                          "type": "string",
                          "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                        }
                      }
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The subscription's title."
                    }
                  }
                },
                "subscriberSnippet": {
                  "type": "object",
                  "description": "Basic details about a subscription's subscriber including title, description, channel ID and thumbnails.",
                  "properties": {
                    "channelId": {
                      "type": "string",
                      "description": "The channel ID of the subscriber."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the subscriber."
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the subscriber."
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.subscriptions.list [GET]

+ Parameters

    + part (required)
  
    + channelId
  
    + forChannelId
  
    + id
  
    + maxResults
  
    + mine
  
    + mySubscribers
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel
  
    + order
  
    + pageToken

+ Response 200

### Resource /thumbnails/set [/youtube/v3/thumbnails/set{?videoId,onBehalfOfContentOwner}]

#### youtube.thumbnails.set [POST]

+ Parameters

    + videoId (required)
  
    + onBehalfOfContentOwner

+ Response 200

### Resource /videoAbuseReportReasons [/youtube/v3/videoAbuseReportReasons{?part,hl}]

#### youtube.videoAbuseReportReasons.list [GET]

+ Parameters

    + part (required)
  
    + hl

+ Response 200

### Resource /videoCategories [/youtube/v3/videoCategories{?part,hl,id,regionCode}]

#### youtube.videoCategories.list [GET]

+ Parameters

    + part (required)
  
    + hl
  
    + id
  
    + regionCode

+ Response 200

### Resource /videos [/youtube/v3/videos{?part,onBehalfOfContentOwner}]

#### youtube.videos.delete [DELETE]

+ Parameters

    + id (required)
  
    + onBehalfOfContentOwner

+ Response 200

#### youtube.videos.insert [POST]

+ Parameters

    + part (required)
  
    + autoLevels
  
    + notifySubscribers
  
    + onBehalfOfContentOwner
  
    + onBehalfOfContentOwnerChannel
  
    + stabilize

+ Request

    + Schema

            {
              "type": "object",
              "description": "A video resource represents a YouTube video.",
              "properties": {
                "ageGating": {
                  "type": "object",
                  "properties": {
                    "alcoholContent": {
                      "type": "boolean",
                      "description": "Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content."
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present."
                    },
                    "videoGameRating": {
                      "type": "string",
                      "description": "Video game rating, if any.",
                      "enum": [
                        "anyone",
                        "m15Plus",
                        "m16Plus",
                        "m17Plus"
                      ]
                    }
                  }
                },
                "contentDetails": {
                  "type": "object",
                  "description": "Details about the content of a YouTube Video.",
                  "properties": {
                    "caption": {
                      "type": "string",
                      "description": "The value of captions indicates whether the video has captions or not.",
                      "enum": [
                        "false",
                        "true"
                      ]
                    },
                    "contentRating": {
                      "type": "object",
                      "description": "Ratings schemes. The country-specific ratings are mostly for movies and shows. NEXT_ID: 65",
                      "properties": {
                        "acbRating": {
                          "type": "string",
                          "description": "Rating system in Australia - Australian Classification Board",
                          "enum": [
                            "acbC",
                            "acbE",
                            "acbG",
                            "acbM",
                            "acbMa15plus",
                            "acbP",
                            "acbPg",
                            "acbR18plus",
                            "acbUnrated"
                          ]
                        },
                        "agcomRating": {
                          "type": "string",
                          "description": "Rating system for Italy - Autorit� per le Garanzie nelle Comunicazioni",
                          "enum": [
                            "agcomT",
                            "agcomUnrated",
                            "agcomVm14",
                            "agcomVm18"
                          ]
                        },
                        "anatelRating": {
                          "type": "string",
                          "description": "Rating system for Chile - Asociaci�n Nacional de Televisi�n",
                          "enum": [
                            "anatelA",
                            "anatelF",
                            "anatelI",
                            "anatelI10",
                            "anatelI12",
                            "anatelI7",
                            "anatelR",
                            "anatelUnrated"
                          ]
                        },
                        "bbfcRating": {
                          "type": "string",
                          "description": "British Board of Film Classification",
                          "enum": [
                            "bbfc12",
                            "bbfc12a",
                            "bbfc15",
                            "bbfc18",
                            "bbfcPg",
                            "bbfcR18",
                            "bbfcU",
                            "bbfcUnrated"
                          ]
                        },
                        "bfvcRating": {
                          "type": "string",
                          "description": "Rating system for Thailand - Board of Filmand Video Censors",
                          "enum": [
                            "bfvc13",
                            "bfvc15",
                            "bfvc18",
                            "bfvc20",
                            "bfvcB",
                            "bfvcE",
                            "bfvcG",
                            "bfvcUnrated"
                          ]
                        },
                        "bmukkRating": {
                          "type": "string",
                          "description": "Rating system for Austria - Bundesministeriums f�r Unterricht, Kunst und Kultur!",
                          "enum": [
                            "bmukk10",
                            "bmukk12",
                            "bmukk14",
                            "bmukk16",
                            "bmukk6",
                            "bmukk8",
                            "bmukkAa",
                            "bmukkUnrated"
                          ]
                        },
                        "catvRating": {
                          "type": "string",
                          "description": "Rating system for Canadian TV - Canadian TV Classification System",
                          "enum": [
                            "catv14plus",
                            "catv18plus",
                            "catvC",
                            "catvC8",
                            "catvG",
                            "catvPg",
                            "catvUnrated"
                          ]
                        },
                        "catvfrRating": {
                          "type": "string",
                          "description": "Rating system for French Canadian TV - Regie du cinema",
                          "enum": [
                            "catvfr13plus",
                            "catvfr16plus",
                            "catvfr18plus",
                            "catvfr8plus",
                            "catvfrG",
                            "catvfrUnrated"
                          ]
                        },
                        "cbfcRating": {
                          "type": "string",
                          "description": "Rating system in India - Central Board of Film Certification",
                          "enum": [
                            "cbfcA",
                            "cbfcS",
                            "cbfcU",
                            "cbfcUA",
                            "cbfcUnrated"
                          ]
                        },
                        "cccRating": {
                          "type": "string",
                          "description": "Rating system for Chile - Consejo de Calificaci�n Cinematogr�fica",
                          "enum": [
                            "ccc14",
                            "ccc18",
                            "ccc18s",
                            "ccc18v",
                            "ccc6",
                            "cccTe",
                            "cccUnrated"
                          ]
                        },
                        "cceRating": {
                          "type": "string",
                          "description": "Rating system for Portugal - Comiss�o de Classifica��o de Espect�culos",
                          "enum": [
                            "cceM12",
                            "cceM16",
                            "cceM18",
                            "cceM4",
                            "cceM6",
                            "cceUnrated"
                          ]
                        },
                        "chfilmRating": {
                          "type": "string",
                          "description": "Rating system for Switzerland - Switzerland Rating System",
                          "enum": [
                            "chfilm0",
                            "chfilm12",
                            "chfilm16",
                            "chfilm18",
                            "chfilm6",
                            "chfilmUnrated"
                          ]
                        },
                        "chvrsRating": {
                          "type": "string",
                          "description": "Canadian Home Video Rating System",
                          "enum": [
                            "chvrs14a",
                            "chvrs18a",
                            "chvrsE",
                            "chvrsG",
                            "chvrsPg",
                            "chvrsR",
                            "chvrsUnrated"
                          ]
                        },
                        "cicfRating": {
                          "type": "string",
                          "description": "Rating system for Belgium - Belgium Rating System",
                          "enum": [
                            "cicfE",
                            "cicfKntEna",
                            "cicfKtEa",
                            "cicfUnrated"
                          ]
                        },
                        "cnaRating": {
                          "type": "string",
                          "description": "Rating system for Romania - CONSILIUL NATIONAL AL AUDIOVIZUALULUI - CNA",
                          "enum": [
                            "cna12",
                            "cna15",
                            "cna18",
                            "cna18plus",
                            "cnaAp",
                            "cnaUnrated"
                          ]
                        },
                        "csaRating": {
                          "type": "string",
                          "description": "Rating system for France - Conseil sup�rieur de l?audiovisuel",
                          "enum": [
                            "csa10",
                            "csa12",
                            "csa16",
                            "csa18",
                            "csaInterdiction",
                            "csaUnrated"
                          ]
                        },
                        "cscfRating": {
                          "type": "string",
                          "description": "Rating system for Luxembourg - Commission de surveillance de la classification des films",
                          "enum": [
                            "cscf12",
                            "cscf16",
                            "cscf18",
                            "cscf6",
                            "cscf9",
                            "cscfA",
                            "cscfAl",
                            "cscfUnrated"
                          ]
                        },
                        "czfilmRating": {
                          "type": "string",
                          "description": "Rating system for Czech republic - Czech republic Rating System",
                          "enum": [
                            "czfilm12",
                            "czfilm14",
                            "czfilm18",
                            "czfilmU",
                            "czfilmUnrated"
                          ]
                        },
                        "djctqRating": {
                          "type": "string",
                          "description": "Rating system in Brazil - Department of Justice, Rating, Titles and Qualification",
                          "enum": [
                            "djctq10",
                            "djctq12",
                            "djctq14",
                            "djctq16",
                            "djctq18",
                            "djctqL",
                            "djctqUnrated"
                          ]
                        },
                        "djctqRatingReasons": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "djctqCriminalActs",
                              "djctqDrugs",
                              "djctqExplicitSex",
                              "djctqExtremeViolence",
                              "djctqIllegalDrugs",
                              "djctqImpactingContent",
                              "djctqInappropriateLanguage",
                              "djctqLegalDrugs",
                              "djctqNudity",
                              "djctqSex",
                              "djctqSexualContent",
                              "djctqViolence"
                            ]
                          }
                        },
                        "eefilmRating": {
                          "type": "string",
                          "description": "Rating system for Estonia - Estonia Rating System",
                          "enum": [
                            "eefilmK12",
                            "eefilmK14",
                            "eefilmK16",
                            "eefilmK6",
                            "eefilmL",
                            "eefilmMs12",
                            "eefilmMs6",
                            "eefilmPere",
                            "eefilmUnrated"
                          ]
                        },
                        "egfilmRating": {
                          "type": "string",
                          "description": "Rating system for Egypt - Egypt Rating System",
                          "enum": [
                            "egfilm18",
                            "egfilmBn",
                            "egfilmGn",
                            "egfilmUnrated"
                          ]
                        },
                        "eirinRating": {
                          "type": "string",
                          "description": "Rating system in Japan - Eiga Rinri Kanri Iinkai",
                          "enum": [
                            "eirinG",
                            "eirinPg12",
                            "eirinR15plus",
                            "eirinR18plus",
                            "eirinUnrated"
                          ]
                        },
                        "fcbmRating": {
                          "type": "string",
                          "description": "Rating system for Malaysia - Film Censorship Board of Malaysia",
                          "enum": [
                            "fcbm18",
                            "fcbm18pa",
                            "fcbm18pl",
                            "fcbm18sg",
                            "fcbm18sx",
                            "fcbmP13",
                            "fcbmU",
                            "fcbmUnrated"
                          ]
                        },
                        "fcoRating": {
                          "type": "string",
                          "description": "Rating system for Hong kong - Office for Film, Newspaper and Article Administration",
                          "enum": [
                            "fcoI",
                            "fcoIia",
                            "fcoIib",
                            "fcoIii",
                            "fcoUnrated"
                          ]
                        },
                        "fmocRating": {
                          "type": "string",
                          "description": "Rating system in France - French Minister of Culture",
                          "enum": [
                            "fmoc10",
                            "fmoc12",
                            "fmoc16",
                            "fmoc18",
                            "fmocE",
                            "fmocU",
                            "fmocUnrated"
                          ]
                        },
                        "fpbRating": {
                          "type": "string",
                          "description": "Rating system for South africa - Film & Publication Board",
                          "enum": [
                            "fpb1012Pg",
                            "fpb13",
                            "fpb16",
                            "fpb18",
                            "fpb79Pg",
                            "fpbA",
                            "fpbPg",
                            "fpbUnrated",
                            "fpbX18",
                            "fpbXx"
                          ]
                        },
                        "fskRating": {
                          "type": "string",
                          "description": "Rating system in Germany - Voluntary Self Regulation of the Movie Industry",
                          "enum": [
                            "fsk0",
                            "fsk12",
                            "fsk16",
                            "fsk18",
                            "fsk6",
                            "fskUnrated"
                          ]
                        },
                        "grfilmRating": {
                          "type": "string",
                          "description": "Rating system for Greece - Greece Rating System",
                          "enum": [
                            "grfilmE",
                            "grfilmK",
                            "grfilmK13",
                            "grfilmK17",
                            "grfilmUnrated"
                          ]
                        },
                        "icaaRating": {
                          "type": "string",
                          "description": "Rating system in Spain - Instituto de Cinematografia y de las Artes Audiovisuales",
                          "enum": [
                            "icaa12",
                            "icaa13",
                            "icaa16",
                            "icaa18",
                            "icaa7",
                            "icaaApta",
                            "icaaUnrated",
                            "icaaX"
                          ]
                        },
                        "ifcoRating": {
                          "type": "string",
                          "description": "Rating system in Ireland - Irish Film Classification Office",
                          "enum": [
                            "ifco12",
                            "ifco12a",
                            "ifco15",
                            "ifco15a",
                            "ifco16",
                            "ifco18",
                            "ifcoG",
                            "ifcoPg",
                            "ifcoUnrated"
                          ]
                        },
                        "ilfilmRating": {
                          "type": "string",
                          "description": "Rating system for Israel - Israel Rating System",
                          "enum": [
                            "ilfilm12",
                            "ilfilm16",
                            "ilfilm18",
                            "ilfilmAa",
                            "ilfilmUnrated"
                          ]
                        },
                        "incaaRating": {
                          "type": "string",
                          "description": "Rating system for Argentina - Instituto Nacional de Cine y Artes Audiovisuales",
                          "enum": [
                            "incaaAtp",
                            "incaaC",
                            "incaaSam13",
                            "incaaSam16",
                            "incaaSam18",
                            "incaaUnrated"
                          ]
                        },
                        "kfcbRating": {
                          "type": "string",
                          "description": "Rating system for Kenya - Kenya Film Classification Board",
                          "enum": [
                            "kfcb16plus",
                            "kfcbG",
                            "kfcbPg",
                            "kfcbR",
                            "kfcbUnrated"
                          ]
                        },
                        "kijkwijzerRating": {
                          "type": "string",
                          "description": "Rating system for Netherlands - Nederlands Instituut voor de Classificatie van Audiovisuele Media",
                          "enum": [
                            "kijkwijzer12",
                            "kijkwijzer16",
                            "kijkwijzer18",
                            "kijkwijzer6",
                            "kijkwijzer9",
                            "kijkwijzerAl",
                            "kijkwijzerUnrated"
                          ]
                        },
                        "kmrbRating": {
                          "type": "string",
                          "description": "Rating system in South Korea - Korea Media Rating Board",
                          "enum": [
                            "kmrb12plus",
                            "kmrb15plus",
                            "kmrbAll",
                            "kmrbR",
                            "kmrbTeenr",
                            "kmrbUnrated"
                          ]
                        },
                        "lsfRating": {
                          "type": "string",
                          "description": "Rating system for Indonesia - Lembaga Sensor Film",
                          "enum": [
                            "lsfA",
                            "lsfBo",
                            "lsfD",
                            "lsfR",
                            "lsfSu",
                            "lsfUnrated"
                          ]
                        },
                        "mccaaRating": {
                          "type": "string",
                          "description": "Rating system for Malta - Film Age-Classification Board",
                          "enum": [
                            "mccaa12",
                            "mccaa12a",
                            "mccaa14",
                            "mccaa15",
                            "mccaa16",
                            "mccaa18",
                            "mccaaPg",
                            "mccaaU",
                            "mccaaUnrated"
                          ]
                        },
                        "mccypRating": {
                          "type": "string",
                          "description": "Rating system for Denmark - The Media Council for Children and Young People",
                          "enum": [
                            "mccyp11",
                            "mccyp15",
                            "mccyp7",
                            "mccypA",
                            "mccypUnrated"
                          ]
                        },
                        "mdaRating": {
                          "type": "string",
                          "description": "Rating system for Singapore - Media Development Authority",
                          "enum": [
                            "mdaG",
                            "mdaM18",
                            "mdaNc16",
                            "mdaPg",
                            "mdaPg13",
                            "mdaR21",
                            "mdaUnrated"
                          ]
                        },
                        "medietilsynetRating": {
                          "type": "string",
                          "description": "Rating system for Norway - Medietilsynet",
                          "enum": [
                            "medietilsynet11",
                            "medietilsynet15",
                            "medietilsynet18",
                            "medietilsynet7",
                            "medietilsynetA",
                            "medietilsynetUnrated"
                          ]
                        },
                        "mekuRating": {
                          "type": "string",
                          "description": "Rating system for Finland - Finnish Centre for Media Education and Audiovisual Media",
                          "enum": [
                            "meku12",
                            "meku16",
                            "meku18",
                            "meku7",
                            "mekuS",
                            "mekuUnrated"
                          ]
                        },
                        "mibacRating": {
                          "type": "string",
                          "description": "Rating system in Italy - Ministero dei Beni e delle Attivita Culturali e del Turismo",
                          "enum": [
                            "mibacT",
                            "mibacUnrated",
                            "mibacVap",
                            "mibacVm12",
                            "mibacVm14",
                            "mibacVm18"
                          ]
                        },
                        "mocRating": {
                          "type": "string",
                          "description": "Rating system for Colombia - MoC",
                          "enum": [
                            "moc12",
                            "moc15",
                            "moc18",
                            "moc7",
                            "mocBanned",
                            "mocE",
                            "mocT",
                            "mocUnrated",
                            "mocX"
                          ]
                        },
                        "moctwRating": {
                          "type": "string",
                          "description": "Rating system for Taiwan - Ministry of Culture - Tawan",
                          "enum": [
                            "moctwG",
                            "moctwP",
                            "moctwPg",
                            "moctwR",
                            "moctwUnrated"
                          ]
                        },
                        "mpaaRating": {
                          "type": "string",
                          "description": "Motion Picture Association of America rating for the content.",
                          "enum": [
                            "mpaaG",
                            "mpaaNc17",
                            "mpaaPg",
                            "mpaaPg13",
                            "mpaaR",
                            "mpaaUnrated"
                          ]
                        },
                        "mtrcbRating": {
                          "type": "string",
                          "description": "Rating system for Philippines - MOVIE AND TELEVISION REVIEW AND CLASSIFICATION BOARD",
                          "enum": [
                            "mtrcbG",
                            "mtrcbPg",
                            "mtrcbR13",
                            "mtrcbR16",
                            "mtrcbR18",
                            "mtrcbUnrated",
                            "mtrcbX"
                          ]
                        },
                        "nbcRating": {
                          "type": "string",
                          "description": "Rating system for Maldives - National Bureau of Classification",
                          "enum": [
                            "nbc12plus",
                            "nbc15plus",
                            "nbc18plus",
                            "nbc18plusr",
                            "nbcG",
                            "nbcPg",
                            "nbcPu",
                            "nbcUnrated"
                          ]
                        },
                        "nbcplRating": {
                          "type": "string",
                          "description": "Rating system for Poland - National Broadcasting Council",
                          "enum": [
                            "nbcpl18plus",
                            "nbcplI",
                            "nbcplIi",
                            "nbcplIii",
                            "nbcplIv",
                            "nbcplUnrated"
                          ]
                        },
                        "nfrcRating": {
                          "type": "string",
                          "description": "Rating system for Bulgaria - National Film Centre",
                          "enum": [
                            "nfrcA",
                            "nfrcB",
                            "nfrcC",
                            "nfrcD",
                            "nfrcUnrated",
                            "nfrcX"
                          ]
                        },
                        "nfvcbRating": {
                          "type": "string",
                          "description": "Rating system for Nigeria - National Film and Video Censors Board",
                          "enum": [
                            "nfvcb12",
                            "nfvcb12a",
                            "nfvcb15",
                            "nfvcb18",
                            "nfvcbG",
                            "nfvcbPg",
                            "nfvcbRe",
                            "nfvcbUnrated"
                          ]
                        },
                        "nkclvRating": {
                          "type": "string",
                          "description": "Rating system for Latvia - National Film Center of Latvia",
                          "enum": [
                            "nkclv12plus",
                            "nkclv18plus",
                            "nkclv7plus",
                            "nkclvU",
                            "nkclvUnrated"
                          ]
                        },
                        "oflcRating": {
                          "type": "string",
                          "description": "Rating system in New Zealand - Office of Film and Literature Classification",
                          "enum": [
                            "oflcG",
                            "oflcM",
                            "oflcPg",
                            "oflcR13",
                            "oflcR15",
                            "oflcR16",
                            "oflcR18",
                            "oflcRp13",
                            "oflcRp16",
                            "oflcUnrated"
                          ]
                        },
                        "pefilmRating": {
                          "type": "string",
                          "description": "Rating system for Peru - Peru Rating System",
                          "enum": [
                            "pefilm14",
                            "pefilm18",
                            "pefilmPg",
                            "pefilmPt",
                            "pefilmUnrated"
                          ]
                        },
                        "rcnofRating": {
                          "type": "string",
                          "description": "Rating system for Hungary - Rating Committee of the National Office of Film",
                          "enum": [
                            "rcnofI",
                            "rcnofIi",
                            "rcnofIii",
                            "rcnofIv",
                            "rcnofUnrated",
                            "rcnofV",
                            "rcnofVi"
                          ]
                        },
                        "resorteviolenciaRating": {
                          "type": "string",
                          "description": "Rating system for Venezuela - SiBCI",
                          "enum": [
                            "resorteviolenciaA",
                            "resorteviolenciaB",
                            "resorteviolenciaC",
                            "resorteviolenciaD",
                            "resorteviolenciaE",
                            "resorteviolenciaUnrated"
                          ]
                        },
                        "rtcRating": {
                          "type": "string",
                          "description": "Rating system in Mexico - General Directorate of Radio, Television and Cinematography",
                          "enum": [
                            "rtcA",
                            "rtcAa",
                            "rtcB",
                            "rtcB15",
                            "rtcC",
                            "rtcD",
                            "rtcUnrated"
                          ]
                        },
                        "rteRating": {
                          "type": "string",
                          "description": "Rating system for Ireland - Raidi� Teilif�s �ireann",
                          "enum": [
                            "rteCh",
                            "rteGa",
                            "rteMa",
                            "rtePs",
                            "rteUnrated"
                          ]
                        },
                        "russiaRating": {
                          "type": "string",
                          "description": "Rating system in Russia",
                          "enum": [
                            "russia0",
                            "russia12",
                            "russia16",
                            "russia18",
                            "russia6",
                            "russiaUnrated"
                          ]
                        },
                        "skfilmRating": {
                          "type": "string",
                          "description": "Rating system for Slovakia - Slovakia Rating System",
                          "enum": [
                            "skfilmG",
                            "skfilmP2",
                            "skfilmP5",
                            "skfilmP8",
                            "skfilmUnrated"
                          ]
                        },
                        "smaisRating": {
                          "type": "string",
                          "description": "Rating system for Iceland - SMAIS",
                          "enum": [
                            "smais12",
                            "smais14",
                            "smais16",
                            "smais18",
                            "smais7",
                            "smaisL",
                            "smaisUnrated"
                          ]
                        },
                        "smsaRating": {
                          "type": "string",
                          "description": "Rating system for Sweden - Statens medier�d (National Media Council)",
                          "enum": [
                            "smsa11",
                            "smsa15",
                            "smsa7",
                            "smsaA",
                            "smsaUnrated"
                          ]
                        },
                        "tvpgRating": {
                          "type": "string",
                          "description": "TV Parental Guidelines rating of the content.",
                          "enum": [
                            "pg14",
                            "tvpgG",
                            "tvpgMa",
                            "tvpgPg",
                            "tvpgUnrated",
                            "tvpgY",
                            "tvpgY7",
                            "tvpgY7Fv"
                          ]
                        },
                        "ytRating": {
                          "type": "string",
                          "description": "Internal YouTube rating.",
                          "enum": [
                            "ytAgeRestricted"
                          ]
                        }
                      }
                    },
                    "countryRestriction": {
                      "type": "object",
                      "description": "Rights management policy for YouTube resources.",
                      "properties": {
                        "allowed": {
                          "type": "boolean",
                          "description": "The value of allowed indicates whether the access to the policy is allowed or denied by default."
                        },
                        "exception": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the default policy do not apply.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "definition": {
                      "type": "string",
                      "description": "The value of definition indicates whether the video is available in high definition or only in standard definition.",
                      "enum": [
                        "hd",
                        "sd"
                      ]
                    },
                    "dimension": {
                      "type": "string",
                      "description": "The value of dimension indicates whether the video is available in 3D or in 2D."
                    },
                    "duration": {
                      "type": "string",
                      "description": "The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long."
                    },
                    "licensedContent": {
                      "type": "boolean",
                      "description": "The value of is_license_content indicates whether the video is licensed content."
                    },
                    "regionRestriction": {
                      "type": "object",
                      "description": "DEPRECATED Region restriction of the video.",
                      "properties": {
                        "allowed": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "blocked": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "conversionPings": {
                  "type": "object",
                  "properties": {
                    "pings": {
                      "type": "array",
                      "description": "Pings that the app shall fire for a video (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "context": {
                            "type": "string",
                            "description": "Defines the context of the ping.",
                            "enum": [
                              "comment",
                              "dislike",
                              "like",
                              "share"
                            ]
                          },
                          "conversionUrl": {
                            "type": "string",
                            "description": "The url (without the schema) that the app shall send the ping to. It's at caller's descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D like%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA%3Bytvid%3DUrIaJUvIQDg&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping."
                          }
                        }
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "fileDetails": {
                  "type": "object",
                  "description": "Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.",
                  "properties": {
                    "audioStreams": {
                      "type": "array",
                      "description": "A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.",
                      "items": {
                        "type": "object",
                        "description": "Information about an audio stream.",
                        "properties": {
                          "bitrateBps": {
                            "type": "string",
                            "description": "The audio stream's bitrate, in bits per second.",
                            "format": "uint64"
                          },
                          "channelCount": {
                            "type": "integer",
                            "description": "The number of audio channels that the stream contains.",
                            "format": "uint32"
                          },
                          "codec": {
                            "type": "string",
                            "description": "The audio codec that the stream uses."
                          },
                          "vendor": {
                            "type": "string",
                            "description": "A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code."
                          }
                        }
                      }
                    },
                    "bitrateBps": {
                      "type": "string",
                      "description": "The uploaded video file's combined (video and audio) bitrate in bits per second.",
                      "format": "uint64"
                    },
                    "container": {
                      "type": "string",
                      "description": "The uploaded video file's container format."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported:  \n- Date only: YYYY-MM-DD \n- Naive time: YYYY-MM-DDTHH:MM:SS \n- Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM"
                    },
                    "durationMs": {
                      "type": "string",
                      "description": "The length of the uploaded video in milliseconds.",
                      "format": "uint64"
                    },
                    "fileName": {
                      "type": "string",
                      "description": "The uploaded file's name. This field is present whether a video file or another type of file was uploaded."
                    },
                    "fileSize": {
                      "type": "string",
                      "description": "The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.",
                      "format": "uint64"
                    },
                    "fileType": {
                      "type": "string",
                      "description": "The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.",
                      "enum": [
                        "archive",
                        "audio",
                        "document",
                        "image",
                        "other",
                        "project",
                        "video"
                      ]
                    },
                    "recordingLocation": {
                      "type": "object",
                      "description": "Geographical coordinates of a point, in WGS84.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "Altitude above the reference ellipsoid, in meters.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "Latitude in degrees.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "Longitude in degrees.",
                          "format": "double"
                        }
                      }
                    },
                    "videoStreams": {
                      "type": "array",
                      "description": "A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.",
                      "items": {
                        "type": "object",
                        "description": "Information about a video stream.",
                        "properties": {
                          "aspectRatio": {
                            "type": "number",
                            "description": "The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.",
                            "format": "double"
                          },
                          "bitrateBps": {
                            "type": "string",
                            "description": "The video stream's bitrate, in bits per second.",
                            "format": "uint64"
                          },
                          "codec": {
                            "type": "string",
                            "description": "The video codec that the stream uses."
                          },
                          "frameRateFps": {
                            "type": "number",
                            "description": "The video stream's frame rate, in frames per second.",
                            "format": "double"
                          },
                          "heightPixels": {
                            "type": "integer",
                            "description": "The encoded video content's height in pixels.",
                            "format": "uint32"
                          },
                          "rotation": {
                            "type": "string",
                            "description": "The amount that YouTube needs to rotate the original source content to properly display the video.",
                            "enum": [
                              "clockwise",
                              "counterClockwise",
                              "none",
                              "other",
                              "upsideDown"
                            ]
                          },
                          "vendor": {
                            "type": "string",
                            "description": "A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code."
                          },
                          "widthPixels": {
                            "type": "integer",
                            "description": "The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels.",
                            "format": "uint32"
                          }
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the video."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#video\".",
                  "default": "youtube#video"
                },
                "liveStreamingDetails": {
                  "type": "object",
                  "description": "Details about the live streaming metadata.",
                  "properties": {
                    "actualEndTime": {
                      "type": "string",
                      "description": "The time that the broadcast actually ended. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast is over.",
                      "format": "date-time"
                    },
                    "actualStartTime": {
                      "type": "string",
                      "description": "The time that the broadcast actually started. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast begins.",
                      "format": "date-time"
                    },
                    "concurrentViewers": {
                      "type": "string",
                      "description": "The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.",
                      "format": "uint64"
                    },
                    "scheduledEndTime": {
                      "type": "string",
                      "description": "The time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. If the value is empty or the property is not present, then the broadcast is scheduled to continue indefinitely.",
                      "format": "date-time"
                    },
                    "scheduledStartTime": {
                      "type": "string",
                      "description": "The time that the broadcast is scheduled to begin. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    }
                  }
                },
                "localizations": {
                  "type": "object",
                  "description": "List with all localizations.",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Localized versions of certain video properties (e.g. title).",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Localized version of the video's description."
                      },
                      "title": {
                        "type": "string",
                        "description": "Localized version of the video's title."
                      }
                    }
                  }
                },
                "monetizationDetails": {
                  "type": "object",
                  "description": "Details about monetization of a YouTube Video.",
                  "properties": {
                    "access": {
                      "type": "object",
                      "description": "Rights management policy for YouTube resources.",
                      "properties": {
                        "allowed": {
                          "type": "boolean",
                          "description": "The value of allowed indicates whether the access to the policy is allowed or denied by default."
                        },
                        "exception": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the default policy do not apply.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "player": {
                  "type": "object",
                  "description": "Player to be used for a video playback.",
                  "properties": {
                    "embedHtml": {
                      "type": "string",
                      "description": "An <iframe> tag that embeds a player that will play the video."
                    }
                  }
                },
                "processingDetails": {
                  "type": "object",
                  "description": "Describes processing status and progress and availability of some other Video resource parts.",
                  "properties": {
                    "editorSuggestionsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request."
                    },
                    "fileDetailsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request."
                    },
                    "processingFailureReason": {
                      "type": "string",
                      "description": "The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed.",
                      "enum": [
                        "other",
                        "streamingFailed",
                        "transcodeFailed",
                        "uploadFailed"
                      ]
                    },
                    "processingIssuesAvailability": {
                      "type": "string",
                      "description": "This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request."
                    },
                    "processingProgress": {
                      "type": "object",
                      "description": "Video processing progress and completion time estimate.",
                      "properties": {
                        "partsProcessed": {
                          "type": "string",
                          "description": "The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating:\n100 * parts_processed / parts_total\n\nNote that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video.",
                          "format": "uint64"
                        },
                        "partsTotal": {
                          "type": "string",
                          "description": "An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video.",
                          "format": "uint64"
                        },
                        "timeLeftMs": {
                          "type": "string",
                          "description": "An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video.",
                          "format": "uint64"
                        }
                      }
                    },
                    "processingStatus": {
                      "type": "string",
                      "description": "The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed.",
                      "enum": [
                        "failed",
                        "processing",
                        "succeeded",
                        "terminated"
                      ]
                    },
                    "tagSuggestionsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request."
                    },
                    "thumbnailsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether thumbnail images have been generated for the video."
                    }
                  }
                },
                "projectDetails": {
                  "type": "object",
                  "description": "Project specific details about the content of a YouTube Video.",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "description": "A list of project tags associated with the video during the upload.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "recordingDetails": {
                  "type": "object",
                  "description": "Recording information associated with the video.",
                  "properties": {
                    "location": {
                      "type": "object",
                      "description": "Geographical coordinates of a point, in WGS84.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "Altitude above the reference ellipsoid, in meters.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "Latitude in degrees.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "Longitude in degrees.",
                          "format": "double"
                        }
                      }
                    },
                    "locationDescription": {
                      "type": "string",
                      "description": "The text description of the location where the video was recorded."
                    },
                    "recordingDate": {
                      "type": "string",
                      "description": "The date and time when the video was recorded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.",
                      "format": "date-time"
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a video, including title, description, uploader, thumbnails and category.",
                  "properties": {
                    "categoryId": {
                      "type": "string",
                      "description": "The YouTube video category associated with the video."
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that the video was uploaded to."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "Channel title for the channel that the video belongs to."
                    },
                    "defaultAudioLanguage": {
                      "type": "string",
                      "description": "The default_audio_language property specifies the language spoken in the video's default audio track."
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The language of the videos's default snippet."
                    },
                    "description": {
                      "type": "string",
                      "description": "The video's description."
                    },
                    "liveBroadcastContent": {
                      "type": "string",
                      "description": "Indicates if the video is an upcoming/active live broadcast. Or it's \"none\" if the video is not an upcoming/active live broadcast.",
                      "enum": [
                        "live",
                        "none",
                        "upcoming"
                      ]
                    },
                    "localized": {
                      "type": "object",
                      "description": "Localized versions of certain video properties (e.g. title).",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Localized version of the video's description."
                        },
                        "title": {
                          "type": "string",
                          "description": "Localized version of the video's title."
                        }
                      }
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "tags": {
                      "type": "array",
                      "description": "A list of keyword tags associated with the video. Tags may contain spaces. This field is only visible to the video's uploader.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The video's title."
                    }
                  }
                },
                "statistics": {
                  "type": "object",
                  "description": "Statistics about the video, such as the number of times the video was viewed or liked.",
                  "properties": {
                    "commentCount": {
                      "type": "string",
                      "description": "The number of comments for the video.",
                      "format": "uint64"
                    },
                    "dislikeCount": {
                      "type": "string",
                      "description": "The number of users who have indicated that they disliked the video by giving it a negative rating.",
                      "format": "uint64"
                    },
                    "favoriteCount": {
                      "type": "string",
                      "description": "The number of users who currently have the video marked as a favorite video.",
                      "format": "uint64"
                    },
                    "likeCount": {
                      "type": "string",
                      "description": "The number of users who have indicated that they liked the video by giving it a positive rating.",
                      "format": "uint64"
                    },
                    "viewCount": {
                      "type": "string",
                      "description": "The number of times the video has been viewed.",
                      "format": "uint64"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "Basic details about a video category, such as its localized title.",
                  "properties": {
                    "embeddable": {
                      "type": "boolean",
                      "description": "This value indicates if the video can be embedded on another website."
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed.",
                      "enum": [
                        "codec",
                        "conversion",
                        "emptyFile",
                        "invalidFile",
                        "tooSmall",
                        "uploadAborted"
                      ]
                    },
                    "license": {
                      "type": "string",
                      "description": "The video's license.",
                      "enum": [
                        "creativeCommon",
                        "youtube"
                      ]
                    },
                    "privacyStatus": {
                      "type": "string",
                      "description": "The video's privacy status.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    },
                    "publicStatsViewable": {
                      "type": "boolean",
                      "description": "This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled."
                    },
                    "publishAt": {
                      "type": "string",
                      "description": "The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "rejectionReason": {
                      "type": "string",
                      "description": "This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected.",
                      "enum": [
                        "claim",
                        "copyright",
                        "duplicate",
                        "inappropriate",
                        "length",
                        "termsOfUse",
                        "trademark",
                        "uploaderAccountClosed",
                        "uploaderAccountSuspended"
                      ]
                    },
                    "uploadStatus": {
                      "type": "string",
                      "description": "The status of the uploaded video.",
                      "enum": [
                        "deleted",
                        "failed",
                        "processed",
                        "rejected",
                        "uploaded"
                      ]
                    }
                  }
                },
                "suggestions": {
                  "type": "object",
                  "description": "Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.",
                  "properties": {
                    "editorSuggestions": {
                      "type": "array",
                      "description": "A list of video editing operations that might improve the video quality or playback experience of the uploaded video.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "audioQuietAudioSwap",
                          "videoAutoLevels",
                          "videoCrop",
                          "videoStabilize"
                        ]
                      }
                    },
                    "processingErrors": {
                      "type": "array",
                      "description": "A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "archiveFile",
                          "audioFile",
                          "docFile",
                          "imageFile",
                          "notAVideoFile",
                          "projectFile"
                        ]
                      }
                    },
                    "processingHints": {
                      "type": "array",
                      "description": "A list of suggestions that may improve YouTube's ability to process the video.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "nonStreamableMov",
                          "sendBestQualityVideo"
                        ]
                      }
                    },
                    "processingWarnings": {
                      "type": "array",
                      "description": "A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "hasEditlist",
                          "inconsistentResolution",
                          "problematicAudioCodec",
                          "problematicVideoCodec",
                          "unknownAudioCodec",
                          "unknownContainer",
                          "unknownVideoCodec"
                        ]
                      }
                    },
                    "tagSuggestions": {
                      "type": "array",
                      "description": "A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.",
                      "items": {
                        "type": "object",
                        "description": "A single tag suggestion with it's relevance information.",
                        "properties": {
                          "categoryRestricts": {
                            "type": "array",
                            "description": "A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tag": {
                            "type": "string",
                            "description": "The keyword tag suggested for the video."
                          }
                        }
                      }
                    }
                  }
                },
                "topicDetails": {
                  "type": "object",
                  "description": "Freebase topic information related to the video.",
                  "properties": {
                    "relevantTopicIds": {
                      "type": "array",
                      "description": "Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "topicIds": {
                      "type": "array",
                      "description": "A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the Freebase Topic API.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

#### youtube.videos.list [GET]

+ Parameters

    + part (required)
  
    + chart
  
    + debugProjectIdOverride
  
    + hl
  
    + id
  
    + locale
  
    + maxResults
  
    + myRating
  
    + onBehalfOfContentOwner
  
    + pageToken
  
    + regionCode
  
    + videoCategoryId

+ Response 200

#### youtube.videos.update [PUT]

+ Parameters

    + part (required)
  
    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "description": "A video resource represents a YouTube video.",
              "properties": {
                "ageGating": {
                  "type": "object",
                  "properties": {
                    "alcoholContent": {
                      "type": "boolean",
                      "description": "Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content."
                    },
                    "restricted": {
                      "type": "boolean",
                      "description": "Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present."
                    },
                    "videoGameRating": {
                      "type": "string",
                      "description": "Video game rating, if any.",
                      "enum": [
                        "anyone",
                        "m15Plus",
                        "m16Plus",
                        "m17Plus"
                      ]
                    }
                  }
                },
                "contentDetails": {
                  "type": "object",
                  "description": "Details about the content of a YouTube Video.",
                  "properties": {
                    "caption": {
                      "type": "string",
                      "description": "The value of captions indicates whether the video has captions or not.",
                      "enum": [
                        "false",
                        "true"
                      ]
                    },
                    "contentRating": {
                      "type": "object",
                      "description": "Ratings schemes. The country-specific ratings are mostly for movies and shows. NEXT_ID: 65",
                      "properties": {
                        "acbRating": {
                          "type": "string",
                          "description": "Rating system in Australia - Australian Classification Board",
                          "enum": [
                            "acbC",
                            "acbE",
                            "acbG",
                            "acbM",
                            "acbMa15plus",
                            "acbP",
                            "acbPg",
                            "acbR18plus",
                            "acbUnrated"
                          ]
                        },
                        "agcomRating": {
                          "type": "string",
                          "description": "Rating system for Italy - Autorit� per le Garanzie nelle Comunicazioni",
                          "enum": [
                            "agcomT",
                            "agcomUnrated",
                            "agcomVm14",
                            "agcomVm18"
                          ]
                        },
                        "anatelRating": {
                          "type": "string",
                          "description": "Rating system for Chile - Asociaci�n Nacional de Televisi�n",
                          "enum": [
                            "anatelA",
                            "anatelF",
                            "anatelI",
                            "anatelI10",
                            "anatelI12",
                            "anatelI7",
                            "anatelR",
                            "anatelUnrated"
                          ]
                        },
                        "bbfcRating": {
                          "type": "string",
                          "description": "British Board of Film Classification",
                          "enum": [
                            "bbfc12",
                            "bbfc12a",
                            "bbfc15",
                            "bbfc18",
                            "bbfcPg",
                            "bbfcR18",
                            "bbfcU",
                            "bbfcUnrated"
                          ]
                        },
                        "bfvcRating": {
                          "type": "string",
                          "description": "Rating system for Thailand - Board of Filmand Video Censors",
                          "enum": [
                            "bfvc13",
                            "bfvc15",
                            "bfvc18",
                            "bfvc20",
                            "bfvcB",
                            "bfvcE",
                            "bfvcG",
                            "bfvcUnrated"
                          ]
                        },
                        "bmukkRating": {
                          "type": "string",
                          "description": "Rating system for Austria - Bundesministeriums f�r Unterricht, Kunst und Kultur!",
                          "enum": [
                            "bmukk10",
                            "bmukk12",
                            "bmukk14",
                            "bmukk16",
                            "bmukk6",
                            "bmukk8",
                            "bmukkAa",
                            "bmukkUnrated"
                          ]
                        },
                        "catvRating": {
                          "type": "string",
                          "description": "Rating system for Canadian TV - Canadian TV Classification System",
                          "enum": [
                            "catv14plus",
                            "catv18plus",
                            "catvC",
                            "catvC8",
                            "catvG",
                            "catvPg",
                            "catvUnrated"
                          ]
                        },
                        "catvfrRating": {
                          "type": "string",
                          "description": "Rating system for French Canadian TV - Regie du cinema",
                          "enum": [
                            "catvfr13plus",
                            "catvfr16plus",
                            "catvfr18plus",
                            "catvfr8plus",
                            "catvfrG",
                            "catvfrUnrated"
                          ]
                        },
                        "cbfcRating": {
                          "type": "string",
                          "description": "Rating system in India - Central Board of Film Certification",
                          "enum": [
                            "cbfcA",
                            "cbfcS",
                            "cbfcU",
                            "cbfcUA",
                            "cbfcUnrated"
                          ]
                        },
                        "cccRating": {
                          "type": "string",
                          "description": "Rating system for Chile - Consejo de Calificaci�n Cinematogr�fica",
                          "enum": [
                            "ccc14",
                            "ccc18",
                            "ccc18s",
                            "ccc18v",
                            "ccc6",
                            "cccTe",
                            "cccUnrated"
                          ]
                        },
                        "cceRating": {
                          "type": "string",
                          "description": "Rating system for Portugal - Comiss�o de Classifica��o de Espect�culos",
                          "enum": [
                            "cceM12",
                            "cceM16",
                            "cceM18",
                            "cceM4",
                            "cceM6",
                            "cceUnrated"
                          ]
                        },
                        "chfilmRating": {
                          "type": "string",
                          "description": "Rating system for Switzerland - Switzerland Rating System",
                          "enum": [
                            "chfilm0",
                            "chfilm12",
                            "chfilm16",
                            "chfilm18",
                            "chfilm6",
                            "chfilmUnrated"
                          ]
                        },
                        "chvrsRating": {
                          "type": "string",
                          "description": "Canadian Home Video Rating System",
                          "enum": [
                            "chvrs14a",
                            "chvrs18a",
                            "chvrsE",
                            "chvrsG",
                            "chvrsPg",
                            "chvrsR",
                            "chvrsUnrated"
                          ]
                        },
                        "cicfRating": {
                          "type": "string",
                          "description": "Rating system for Belgium - Belgium Rating System",
                          "enum": [
                            "cicfE",
                            "cicfKntEna",
                            "cicfKtEa",
                            "cicfUnrated"
                          ]
                        },
                        "cnaRating": {
                          "type": "string",
                          "description": "Rating system for Romania - CONSILIUL NATIONAL AL AUDIOVIZUALULUI - CNA",
                          "enum": [
                            "cna12",
                            "cna15",
                            "cna18",
                            "cna18plus",
                            "cnaAp",
                            "cnaUnrated"
                          ]
                        },
                        "csaRating": {
                          "type": "string",
                          "description": "Rating system for France - Conseil sup�rieur de l?audiovisuel",
                          "enum": [
                            "csa10",
                            "csa12",
                            "csa16",
                            "csa18",
                            "csaInterdiction",
                            "csaUnrated"
                          ]
                        },
                        "cscfRating": {
                          "type": "string",
                          "description": "Rating system for Luxembourg - Commission de surveillance de la classification des films",
                          "enum": [
                            "cscf12",
                            "cscf16",
                            "cscf18",
                            "cscf6",
                            "cscf9",
                            "cscfA",
                            "cscfAl",
                            "cscfUnrated"
                          ]
                        },
                        "czfilmRating": {
                          "type": "string",
                          "description": "Rating system for Czech republic - Czech republic Rating System",
                          "enum": [
                            "czfilm12",
                            "czfilm14",
                            "czfilm18",
                            "czfilmU",
                            "czfilmUnrated"
                          ]
                        },
                        "djctqRating": {
                          "type": "string",
                          "description": "Rating system in Brazil - Department of Justice, Rating, Titles and Qualification",
                          "enum": [
                            "djctq10",
                            "djctq12",
                            "djctq14",
                            "djctq16",
                            "djctq18",
                            "djctqL",
                            "djctqUnrated"
                          ]
                        },
                        "djctqRatingReasons": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "djctqCriminalActs",
                              "djctqDrugs",
                              "djctqExplicitSex",
                              "djctqExtremeViolence",
                              "djctqIllegalDrugs",
                              "djctqImpactingContent",
                              "djctqInappropriateLanguage",
                              "djctqLegalDrugs",
                              "djctqNudity",
                              "djctqSex",
                              "djctqSexualContent",
                              "djctqViolence"
                            ]
                          }
                        },
                        "eefilmRating": {
                          "type": "string",
                          "description": "Rating system for Estonia - Estonia Rating System",
                          "enum": [
                            "eefilmK12",
                            "eefilmK14",
                            "eefilmK16",
                            "eefilmK6",
                            "eefilmL",
                            "eefilmMs12",
                            "eefilmMs6",
                            "eefilmPere",
                            "eefilmUnrated"
                          ]
                        },
                        "egfilmRating": {
                          "type": "string",
                          "description": "Rating system for Egypt - Egypt Rating System",
                          "enum": [
                            "egfilm18",
                            "egfilmBn",
                            "egfilmGn",
                            "egfilmUnrated"
                          ]
                        },
                        "eirinRating": {
                          "type": "string",
                          "description": "Rating system in Japan - Eiga Rinri Kanri Iinkai",
                          "enum": [
                            "eirinG",
                            "eirinPg12",
                            "eirinR15plus",
                            "eirinR18plus",
                            "eirinUnrated"
                          ]
                        },
                        "fcbmRating": {
                          "type": "string",
                          "description": "Rating system for Malaysia - Film Censorship Board of Malaysia",
                          "enum": [
                            "fcbm18",
                            "fcbm18pa",
                            "fcbm18pl",
                            "fcbm18sg",
                            "fcbm18sx",
                            "fcbmP13",
                            "fcbmU",
                            "fcbmUnrated"
                          ]
                        },
                        "fcoRating": {
                          "type": "string",
                          "description": "Rating system for Hong kong - Office for Film, Newspaper and Article Administration",
                          "enum": [
                            "fcoI",
                            "fcoIia",
                            "fcoIib",
                            "fcoIii",
                            "fcoUnrated"
                          ]
                        },
                        "fmocRating": {
                          "type": "string",
                          "description": "Rating system in France - French Minister of Culture",
                          "enum": [
                            "fmoc10",
                            "fmoc12",
                            "fmoc16",
                            "fmoc18",
                            "fmocE",
                            "fmocU",
                            "fmocUnrated"
                          ]
                        },
                        "fpbRating": {
                          "type": "string",
                          "description": "Rating system for South africa - Film & Publication Board",
                          "enum": [
                            "fpb1012Pg",
                            "fpb13",
                            "fpb16",
                            "fpb18",
                            "fpb79Pg",
                            "fpbA",
                            "fpbPg",
                            "fpbUnrated",
                            "fpbX18",
                            "fpbXx"
                          ]
                        },
                        "fskRating": {
                          "type": "string",
                          "description": "Rating system in Germany - Voluntary Self Regulation of the Movie Industry",
                          "enum": [
                            "fsk0",
                            "fsk12",
                            "fsk16",
                            "fsk18",
                            "fsk6",
                            "fskUnrated"
                          ]
                        },
                        "grfilmRating": {
                          "type": "string",
                          "description": "Rating system for Greece - Greece Rating System",
                          "enum": [
                            "grfilmE",
                            "grfilmK",
                            "grfilmK13",
                            "grfilmK17",
                            "grfilmUnrated"
                          ]
                        },
                        "icaaRating": {
                          "type": "string",
                          "description": "Rating system in Spain - Instituto de Cinematografia y de las Artes Audiovisuales",
                          "enum": [
                            "icaa12",
                            "icaa13",
                            "icaa16",
                            "icaa18",
                            "icaa7",
                            "icaaApta",
                            "icaaUnrated",
                            "icaaX"
                          ]
                        },
                        "ifcoRating": {
                          "type": "string",
                          "description": "Rating system in Ireland - Irish Film Classification Office",
                          "enum": [
                            "ifco12",
                            "ifco12a",
                            "ifco15",
                            "ifco15a",
                            "ifco16",
                            "ifco18",
                            "ifcoG",
                            "ifcoPg",
                            "ifcoUnrated"
                          ]
                        },
                        "ilfilmRating": {
                          "type": "string",
                          "description": "Rating system for Israel - Israel Rating System",
                          "enum": [
                            "ilfilm12",
                            "ilfilm16",
                            "ilfilm18",
                            "ilfilmAa",
                            "ilfilmUnrated"
                          ]
                        },
                        "incaaRating": {
                          "type": "string",
                          "description": "Rating system for Argentina - Instituto Nacional de Cine y Artes Audiovisuales",
                          "enum": [
                            "incaaAtp",
                            "incaaC",
                            "incaaSam13",
                            "incaaSam16",
                            "incaaSam18",
                            "incaaUnrated"
                          ]
                        },
                        "kfcbRating": {
                          "type": "string",
                          "description": "Rating system for Kenya - Kenya Film Classification Board",
                          "enum": [
                            "kfcb16plus",
                            "kfcbG",
                            "kfcbPg",
                            "kfcbR",
                            "kfcbUnrated"
                          ]
                        },
                        "kijkwijzerRating": {
                          "type": "string",
                          "description": "Rating system for Netherlands - Nederlands Instituut voor de Classificatie van Audiovisuele Media",
                          "enum": [
                            "kijkwijzer12",
                            "kijkwijzer16",
                            "kijkwijzer18",
                            "kijkwijzer6",
                            "kijkwijzer9",
                            "kijkwijzerAl",
                            "kijkwijzerUnrated"
                          ]
                        },
                        "kmrbRating": {
                          "type": "string",
                          "description": "Rating system in South Korea - Korea Media Rating Board",
                          "enum": [
                            "kmrb12plus",
                            "kmrb15plus",
                            "kmrbAll",
                            "kmrbR",
                            "kmrbTeenr",
                            "kmrbUnrated"
                          ]
                        },
                        "lsfRating": {
                          "type": "string",
                          "description": "Rating system for Indonesia - Lembaga Sensor Film",
                          "enum": [
                            "lsfA",
                            "lsfBo",
                            "lsfD",
                            "lsfR",
                            "lsfSu",
                            "lsfUnrated"
                          ]
                        },
                        "mccaaRating": {
                          "type": "string",
                          "description": "Rating system for Malta - Film Age-Classification Board",
                          "enum": [
                            "mccaa12",
                            "mccaa12a",
                            "mccaa14",
                            "mccaa15",
                            "mccaa16",
                            "mccaa18",
                            "mccaaPg",
                            "mccaaU",
                            "mccaaUnrated"
                          ]
                        },
                        "mccypRating": {
                          "type": "string",
                          "description": "Rating system for Denmark - The Media Council for Children and Young People",
                          "enum": [
                            "mccyp11",
                            "mccyp15",
                            "mccyp7",
                            "mccypA",
                            "mccypUnrated"
                          ]
                        },
                        "mdaRating": {
                          "type": "string",
                          "description": "Rating system for Singapore - Media Development Authority",
                          "enum": [
                            "mdaG",
                            "mdaM18",
                            "mdaNc16",
                            "mdaPg",
                            "mdaPg13",
                            "mdaR21",
                            "mdaUnrated"
                          ]
                        },
                        "medietilsynetRating": {
                          "type": "string",
                          "description": "Rating system for Norway - Medietilsynet",
                          "enum": [
                            "medietilsynet11",
                            "medietilsynet15",
                            "medietilsynet18",
                            "medietilsynet7",
                            "medietilsynetA",
                            "medietilsynetUnrated"
                          ]
                        },
                        "mekuRating": {
                          "type": "string",
                          "description": "Rating system for Finland - Finnish Centre for Media Education and Audiovisual Media",
                          "enum": [
                            "meku12",
                            "meku16",
                            "meku18",
                            "meku7",
                            "mekuS",
                            "mekuUnrated"
                          ]
                        },
                        "mibacRating": {
                          "type": "string",
                          "description": "Rating system in Italy - Ministero dei Beni e delle Attivita Culturali e del Turismo",
                          "enum": [
                            "mibacT",
                            "mibacUnrated",
                            "mibacVap",
                            "mibacVm12",
                            "mibacVm14",
                            "mibacVm18"
                          ]
                        },
                        "mocRating": {
                          "type": "string",
                          "description": "Rating system for Colombia - MoC",
                          "enum": [
                            "moc12",
                            "moc15",
                            "moc18",
                            "moc7",
                            "mocBanned",
                            "mocE",
                            "mocT",
                            "mocUnrated",
                            "mocX"
                          ]
                        },
                        "moctwRating": {
                          "type": "string",
                          "description": "Rating system for Taiwan - Ministry of Culture - Tawan",
                          "enum": [
                            "moctwG",
                            "moctwP",
                            "moctwPg",
                            "moctwR",
                            "moctwUnrated"
                          ]
                        },
                        "mpaaRating": {
                          "type": "string",
                          "description": "Motion Picture Association of America rating for the content.",
                          "enum": [
                            "mpaaG",
                            "mpaaNc17",
                            "mpaaPg",
                            "mpaaPg13",
                            "mpaaR",
                            "mpaaUnrated"
                          ]
                        },
                        "mtrcbRating": {
                          "type": "string",
                          "description": "Rating system for Philippines - MOVIE AND TELEVISION REVIEW AND CLASSIFICATION BOARD",
                          "enum": [
                            "mtrcbG",
                            "mtrcbPg",
                            "mtrcbR13",
                            "mtrcbR16",
                            "mtrcbR18",
                            "mtrcbUnrated",
                            "mtrcbX"
                          ]
                        },
                        "nbcRating": {
                          "type": "string",
                          "description": "Rating system for Maldives - National Bureau of Classification",
                          "enum": [
                            "nbc12plus",
                            "nbc15plus",
                            "nbc18plus",
                            "nbc18plusr",
                            "nbcG",
                            "nbcPg",
                            "nbcPu",
                            "nbcUnrated"
                          ]
                        },
                        "nbcplRating": {
                          "type": "string",
                          "description": "Rating system for Poland - National Broadcasting Council",
                          "enum": [
                            "nbcpl18plus",
                            "nbcplI",
                            "nbcplIi",
                            "nbcplIii",
                            "nbcplIv",
                            "nbcplUnrated"
                          ]
                        },
                        "nfrcRating": {
                          "type": "string",
                          "description": "Rating system for Bulgaria - National Film Centre",
                          "enum": [
                            "nfrcA",
                            "nfrcB",
                            "nfrcC",
                            "nfrcD",
                            "nfrcUnrated",
                            "nfrcX"
                          ]
                        },
                        "nfvcbRating": {
                          "type": "string",
                          "description": "Rating system for Nigeria - National Film and Video Censors Board",
                          "enum": [
                            "nfvcb12",
                            "nfvcb12a",
                            "nfvcb15",
                            "nfvcb18",
                            "nfvcbG",
                            "nfvcbPg",
                            "nfvcbRe",
                            "nfvcbUnrated"
                          ]
                        },
                        "nkclvRating": {
                          "type": "string",
                          "description": "Rating system for Latvia - National Film Center of Latvia",
                          "enum": [
                            "nkclv12plus",
                            "nkclv18plus",
                            "nkclv7plus",
                            "nkclvU",
                            "nkclvUnrated"
                          ]
                        },
                        "oflcRating": {
                          "type": "string",
                          "description": "Rating system in New Zealand - Office of Film and Literature Classification",
                          "enum": [
                            "oflcG",
                            "oflcM",
                            "oflcPg",
                            "oflcR13",
                            "oflcR15",
                            "oflcR16",
                            "oflcR18",
                            "oflcRp13",
                            "oflcRp16",
                            "oflcUnrated"
                          ]
                        },
                        "pefilmRating": {
                          "type": "string",
                          "description": "Rating system for Peru - Peru Rating System",
                          "enum": [
                            "pefilm14",
                            "pefilm18",
                            "pefilmPg",
                            "pefilmPt",
                            "pefilmUnrated"
                          ]
                        },
                        "rcnofRating": {
                          "type": "string",
                          "description": "Rating system for Hungary - Rating Committee of the National Office of Film",
                          "enum": [
                            "rcnofI",
                            "rcnofIi",
                            "rcnofIii",
                            "rcnofIv",
                            "rcnofUnrated",
                            "rcnofV",
                            "rcnofVi"
                          ]
                        },
                        "resorteviolenciaRating": {
                          "type": "string",
                          "description": "Rating system for Venezuela - SiBCI",
                          "enum": [
                            "resorteviolenciaA",
                            "resorteviolenciaB",
                            "resorteviolenciaC",
                            "resorteviolenciaD",
                            "resorteviolenciaE",
                            "resorteviolenciaUnrated"
                          ]
                        },
                        "rtcRating": {
                          "type": "string",
                          "description": "Rating system in Mexico - General Directorate of Radio, Television and Cinematography",
                          "enum": [
                            "rtcA",
                            "rtcAa",
                            "rtcB",
                            "rtcB15",
                            "rtcC",
                            "rtcD",
                            "rtcUnrated"
                          ]
                        },
                        "rteRating": {
                          "type": "string",
                          "description": "Rating system for Ireland - Raidi� Teilif�s �ireann",
                          "enum": [
                            "rteCh",
                            "rteGa",
                            "rteMa",
                            "rtePs",
                            "rteUnrated"
                          ]
                        },
                        "russiaRating": {
                          "type": "string",
                          "description": "Rating system in Russia",
                          "enum": [
                            "russia0",
                            "russia12",
                            "russia16",
                            "russia18",
                            "russia6",
                            "russiaUnrated"
                          ]
                        },
                        "skfilmRating": {
                          "type": "string",
                          "description": "Rating system for Slovakia - Slovakia Rating System",
                          "enum": [
                            "skfilmG",
                            "skfilmP2",
                            "skfilmP5",
                            "skfilmP8",
                            "skfilmUnrated"
                          ]
                        },
                        "smaisRating": {
                          "type": "string",
                          "description": "Rating system for Iceland - SMAIS",
                          "enum": [
                            "smais12",
                            "smais14",
                            "smais16",
                            "smais18",
                            "smais7",
                            "smaisL",
                            "smaisUnrated"
                          ]
                        },
                        "smsaRating": {
                          "type": "string",
                          "description": "Rating system for Sweden - Statens medier�d (National Media Council)",
                          "enum": [
                            "smsa11",
                            "smsa15",
                            "smsa7",
                            "smsaA",
                            "smsaUnrated"
                          ]
                        },
                        "tvpgRating": {
                          "type": "string",
                          "description": "TV Parental Guidelines rating of the content.",
                          "enum": [
                            "pg14",
                            "tvpgG",
                            "tvpgMa",
                            "tvpgPg",
                            "tvpgUnrated",
                            "tvpgY",
                            "tvpgY7",
                            "tvpgY7Fv"
                          ]
                        },
                        "ytRating": {
                          "type": "string",
                          "description": "Internal YouTube rating.",
                          "enum": [
                            "ytAgeRestricted"
                          ]
                        }
                      }
                    },
                    "countryRestriction": {
                      "type": "object",
                      "description": "Rights management policy for YouTube resources.",
                      "properties": {
                        "allowed": {
                          "type": "boolean",
                          "description": "The value of allowed indicates whether the access to the policy is allowed or denied by default."
                        },
                        "exception": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the default policy do not apply.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "definition": {
                      "type": "string",
                      "description": "The value of definition indicates whether the video is available in high definition or only in standard definition.",
                      "enum": [
                        "hd",
                        "sd"
                      ]
                    },
                    "dimension": {
                      "type": "string",
                      "description": "The value of dimension indicates whether the video is available in 3D or in 2D."
                    },
                    "duration": {
                      "type": "string",
                      "description": "The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long."
                    },
                    "licensedContent": {
                      "type": "boolean",
                      "description": "The value of is_license_content indicates whether the video is licensed content."
                    },
                    "regionRestriction": {
                      "type": "object",
                      "description": "DEPRECATED Region restriction of the video.",
                      "properties": {
                        "allowed": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "blocked": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "conversionPings": {
                  "type": "object",
                  "properties": {
                    "pings": {
                      "type": "array",
                      "description": "Pings that the app shall fire for a video (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "context": {
                            "type": "string",
                            "description": "Defines the context of the ping.",
                            "enum": [
                              "comment",
                              "dislike",
                              "like",
                              "share"
                            ]
                          },
                          "conversionUrl": {
                            "type": "string",
                            "description": "The url (without the schema) that the app shall send the ping to. It's at caller's descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D like%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA%3Bytvid%3DUrIaJUvIQDg&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping."
                          }
                        }
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Etag of this resource."
                },
                "fileDetails": {
                  "type": "object",
                  "description": "Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.",
                  "properties": {
                    "audioStreams": {
                      "type": "array",
                      "description": "A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.",
                      "items": {
                        "type": "object",
                        "description": "Information about an audio stream.",
                        "properties": {
                          "bitrateBps": {
                            "type": "string",
                            "description": "The audio stream's bitrate, in bits per second.",
                            "format": "uint64"
                          },
                          "channelCount": {
                            "type": "integer",
                            "description": "The number of audio channels that the stream contains.",
                            "format": "uint32"
                          },
                          "codec": {
                            "type": "string",
                            "description": "The audio codec that the stream uses."
                          },
                          "vendor": {
                            "type": "string",
                            "description": "A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code."
                          }
                        }
                      }
                    },
                    "bitrateBps": {
                      "type": "string",
                      "description": "The uploaded video file's combined (video and audio) bitrate in bits per second.",
                      "format": "uint64"
                    },
                    "container": {
                      "type": "string",
                      "description": "The uploaded video file's container format."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported:  \n- Date only: YYYY-MM-DD \n- Naive time: YYYY-MM-DDTHH:MM:SS \n- Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM"
                    },
                    "durationMs": {
                      "type": "string",
                      "description": "The length of the uploaded video in milliseconds.",
                      "format": "uint64"
                    },
                    "fileName": {
                      "type": "string",
                      "description": "The uploaded file's name. This field is present whether a video file or another type of file was uploaded."
                    },
                    "fileSize": {
                      "type": "string",
                      "description": "The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.",
                      "format": "uint64"
                    },
                    "fileType": {
                      "type": "string",
                      "description": "The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.",
                      "enum": [
                        "archive",
                        "audio",
                        "document",
                        "image",
                        "other",
                        "project",
                        "video"
                      ]
                    },
                    "recordingLocation": {
                      "type": "object",
                      "description": "Geographical coordinates of a point, in WGS84.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "Altitude above the reference ellipsoid, in meters.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "Latitude in degrees.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "Longitude in degrees.",
                          "format": "double"
                        }
                      }
                    },
                    "videoStreams": {
                      "type": "array",
                      "description": "A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.",
                      "items": {
                        "type": "object",
                        "description": "Information about a video stream.",
                        "properties": {
                          "aspectRatio": {
                            "type": "number",
                            "description": "The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.",
                            "format": "double"
                          },
                          "bitrateBps": {
                            "type": "string",
                            "description": "The video stream's bitrate, in bits per second.",
                            "format": "uint64"
                          },
                          "codec": {
                            "type": "string",
                            "description": "The video codec that the stream uses."
                          },
                          "frameRateFps": {
                            "type": "number",
                            "description": "The video stream's frame rate, in frames per second.",
                            "format": "double"
                          },
                          "heightPixels": {
                            "type": "integer",
                            "description": "The encoded video content's height in pixels.",
                            "format": "uint32"
                          },
                          "rotation": {
                            "type": "string",
                            "description": "The amount that YouTube needs to rotate the original source content to properly display the video.",
                            "enum": [
                              "clockwise",
                              "counterClockwise",
                              "none",
                              "other",
                              "upsideDown"
                            ]
                          },
                          "vendor": {
                            "type": "string",
                            "description": "A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code."
                          },
                          "widthPixels": {
                            "type": "integer",
                            "description": "The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels.",
                            "format": "uint32"
                          }
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the video."
                },
                "kind": {
                  "type": "string",
                  "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#video\".",
                  "default": "youtube#video"
                },
                "liveStreamingDetails": {
                  "type": "object",
                  "description": "Details about the live streaming metadata.",
                  "properties": {
                    "actualEndTime": {
                      "type": "string",
                      "description": "The time that the broadcast actually ended. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast is over.",
                      "format": "date-time"
                    },
                    "actualStartTime": {
                      "type": "string",
                      "description": "The time that the broadcast actually started. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast begins.",
                      "format": "date-time"
                    },
                    "concurrentViewers": {
                      "type": "string",
                      "description": "The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.",
                      "format": "uint64"
                    },
                    "scheduledEndTime": {
                      "type": "string",
                      "description": "The time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. If the value is empty or the property is not present, then the broadcast is scheduled to continue indefinitely.",
                      "format": "date-time"
                    },
                    "scheduledStartTime": {
                      "type": "string",
                      "description": "The time that the broadcast is scheduled to begin. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    }
                  }
                },
                "localizations": {
                  "type": "object",
                  "description": "List with all localizations.",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Localized versions of certain video properties (e.g. title).",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Localized version of the video's description."
                      },
                      "title": {
                        "type": "string",
                        "description": "Localized version of the video's title."
                      }
                    }
                  }
                },
                "monetizationDetails": {
                  "type": "object",
                  "description": "Details about monetization of a YouTube Video.",
                  "properties": {
                    "access": {
                      "type": "object",
                      "description": "Rights management policy for YouTube resources.",
                      "properties": {
                        "allowed": {
                          "type": "boolean",
                          "description": "The value of allowed indicates whether the access to the policy is allowed or denied by default."
                        },
                        "exception": {
                          "type": "array",
                          "description": "A list of region codes that identify countries where the default policy do not apply.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "player": {
                  "type": "object",
                  "description": "Player to be used for a video playback.",
                  "properties": {
                    "embedHtml": {
                      "type": "string",
                      "description": "An <iframe> tag that embeds a player that will play the video."
                    }
                  }
                },
                "processingDetails": {
                  "type": "object",
                  "description": "Describes processing status and progress and availability of some other Video resource parts.",
                  "properties": {
                    "editorSuggestionsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request."
                    },
                    "fileDetailsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request."
                    },
                    "processingFailureReason": {
                      "type": "string",
                      "description": "The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed.",
                      "enum": [
                        "other",
                        "streamingFailed",
                        "transcodeFailed",
                        "uploadFailed"
                      ]
                    },
                    "processingIssuesAvailability": {
                      "type": "string",
                      "description": "This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request."
                    },
                    "processingProgress": {
                      "type": "object",
                      "description": "Video processing progress and completion time estimate.",
                      "properties": {
                        "partsProcessed": {
                          "type": "string",
                          "description": "The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating:\n100 * parts_processed / parts_total\n\nNote that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video.",
                          "format": "uint64"
                        },
                        "partsTotal": {
                          "type": "string",
                          "description": "An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video.",
                          "format": "uint64"
                        },
                        "timeLeftMs": {
                          "type": "string",
                          "description": "An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video.",
                          "format": "uint64"
                        }
                      }
                    },
                    "processingStatus": {
                      "type": "string",
                      "description": "The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed.",
                      "enum": [
                        "failed",
                        "processing",
                        "succeeded",
                        "terminated"
                      ]
                    },
                    "tagSuggestionsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request."
                    },
                    "thumbnailsAvailability": {
                      "type": "string",
                      "description": "This value indicates whether thumbnail images have been generated for the video."
                    }
                  }
                },
                "projectDetails": {
                  "type": "object",
                  "description": "Project specific details about the content of a YouTube Video.",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "description": "A list of project tags associated with the video during the upload.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "recordingDetails": {
                  "type": "object",
                  "description": "Recording information associated with the video.",
                  "properties": {
                    "location": {
                      "type": "object",
                      "description": "Geographical coordinates of a point, in WGS84.",
                      "properties": {
                        "altitude": {
                          "type": "number",
                          "description": "Altitude above the reference ellipsoid, in meters.",
                          "format": "double"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "Latitude in degrees.",
                          "format": "double"
                        },
                        "longitude": {
                          "type": "number",
                          "description": "Longitude in degrees.",
                          "format": "double"
                        }
                      }
                    },
                    "locationDescription": {
                      "type": "string",
                      "description": "The text description of the location where the video was recorded."
                    },
                    "recordingDate": {
                      "type": "string",
                      "description": "The date and time when the video was recorded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.",
                      "format": "date-time"
                    }
                  }
                },
                "snippet": {
                  "type": "object",
                  "description": "Basic details about a video, including title, description, uploader, thumbnails and category.",
                  "properties": {
                    "categoryId": {
                      "type": "string",
                      "description": "The YouTube video category associated with the video."
                    },
                    "channelId": {
                      "type": "string",
                      "description": "The ID that YouTube uses to uniquely identify the channel that the video was uploaded to."
                    },
                    "channelTitle": {
                      "type": "string",
                      "description": "Channel title for the channel that the video belongs to."
                    },
                    "defaultAudioLanguage": {
                      "type": "string",
                      "description": "The default_audio_language property specifies the language spoken in the video's default audio track."
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The language of the videos's default snippet."
                    },
                    "description": {
                      "type": "string",
                      "description": "The video's description."
                    },
                    "liveBroadcastContent": {
                      "type": "string",
                      "description": "Indicates if the video is an upcoming/active live broadcast. Or it's \"none\" if the video is not an upcoming/active live broadcast.",
                      "enum": [
                        "live",
                        "none",
                        "upcoming"
                      ]
                    },
                    "localized": {
                      "type": "object",
                      "description": "Localized versions of certain video properties (e.g. title).",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Localized version of the video's description."
                        },
                        "title": {
                          "type": "string",
                          "description": "Localized version of the video's title."
                        }
                      }
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "tags": {
                      "type": "array",
                      "description": "A list of keyword tags associated with the video. Tags may contain spaces. This field is only visible to the video's uploader.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "thumbnails": {
                      "type": "object",
                      "description": "Internal representation of thumbnails for a YouTube resource.",
                      "properties": {
                        "default": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "high": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "maxres": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "medium": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        },
                        "standard": {
                          "type": "object",
                          "description": "A thumbnail is an image representing a YouTube resource.",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "description": "(Optional) Height of the thumbnail image.",
                              "format": "uint32"
                            },
                            "url": {
                              "type": "string",
                              "description": "The thumbnail image's URL."
                            },
                            "width": {
                              "type": "integer",
                              "description": "(Optional) Width of the thumbnail image.",
                              "format": "uint32"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string",
                      "description": "The video's title."
                    }
                  }
                },
                "statistics": {
                  "type": "object",
                  "description": "Statistics about the video, such as the number of times the video was viewed or liked.",
                  "properties": {
                    "commentCount": {
                      "type": "string",
                      "description": "The number of comments for the video.",
                      "format": "uint64"
                    },
                    "dislikeCount": {
                      "type": "string",
                      "description": "The number of users who have indicated that they disliked the video by giving it a negative rating.",
                      "format": "uint64"
                    },
                    "favoriteCount": {
                      "type": "string",
                      "description": "The number of users who currently have the video marked as a favorite video.",
                      "format": "uint64"
                    },
                    "likeCount": {
                      "type": "string",
                      "description": "The number of users who have indicated that they liked the video by giving it a positive rating.",
                      "format": "uint64"
                    },
                    "viewCount": {
                      "type": "string",
                      "description": "The number of times the video has been viewed.",
                      "format": "uint64"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "description": "Basic details about a video category, such as its localized title.",
                  "properties": {
                    "embeddable": {
                      "type": "boolean",
                      "description": "This value indicates if the video can be embedded on another website."
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed.",
                      "enum": [
                        "codec",
                        "conversion",
                        "emptyFile",
                        "invalidFile",
                        "tooSmall",
                        "uploadAborted"
                      ]
                    },
                    "license": {
                      "type": "string",
                      "description": "The video's license.",
                      "enum": [
                        "creativeCommon",
                        "youtube"
                      ]
                    },
                    "privacyStatus": {
                      "type": "string",
                      "description": "The video's privacy status.",
                      "enum": [
                        "private",
                        "public",
                        "unlisted"
                      ]
                    },
                    "publicStatsViewable": {
                      "type": "boolean",
                      "description": "This value indicates if the extended video statistics on the watch page can be viewed by everyone. Note that the view count, likes, etc will still be visible if this is disabled."
                    },
                    "publishAt": {
                      "type": "string",
                      "description": "The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
                      "format": "date-time"
                    },
                    "rejectionReason": {
                      "type": "string",
                      "description": "This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected.",
                      "enum": [
                        "claim",
                        "copyright",
                        "duplicate",
                        "inappropriate",
                        "length",
                        "termsOfUse",
                        "trademark",
                        "uploaderAccountClosed",
                        "uploaderAccountSuspended"
                      ]
                    },
                    "uploadStatus": {
                      "type": "string",
                      "description": "The status of the uploaded video.",
                      "enum": [
                        "deleted",
                        "failed",
                        "processed",
                        "rejected",
                        "uploaded"
                      ]
                    }
                  }
                },
                "suggestions": {
                  "type": "object",
                  "description": "Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.",
                  "properties": {
                    "editorSuggestions": {
                      "type": "array",
                      "description": "A list of video editing operations that might improve the video quality or playback experience of the uploaded video.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "audioQuietAudioSwap",
                          "videoAutoLevels",
                          "videoCrop",
                          "videoStabilize"
                        ]
                      }
                    },
                    "processingErrors": {
                      "type": "array",
                      "description": "A list of errors that will prevent YouTube from successfully processing the uploaded video video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "archiveFile",
                          "audioFile",
                          "docFile",
                          "imageFile",
                          "notAVideoFile",
                          "projectFile"
                        ]
                      }
                    },
                    "processingHints": {
                      "type": "array",
                      "description": "A list of suggestions that may improve YouTube's ability to process the video.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "nonStreamableMov",
                          "sendBestQualityVideo"
                        ]
                      }
                    },
                    "processingWarnings": {
                      "type": "array",
                      "description": "A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that are unlikely to cause the video processing to fail but that might cause problems such as sync issues, video artifacts, or a missing audio track.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "hasEditlist",
                          "inconsistentResolution",
                          "problematicAudioCodec",
                          "problematicVideoCodec",
                          "unknownAudioCodec",
                          "unknownContainer",
                          "unknownVideoCodec"
                        ]
                      }
                    },
                    "tagSuggestions": {
                      "type": "array",
                      "description": "A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.",
                      "items": {
                        "type": "object",
                        "description": "A single tag suggestion with it's relevance information.",
                        "properties": {
                          "categoryRestricts": {
                            "type": "array",
                            "description": "A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tag": {
                            "type": "string",
                            "description": "The keyword tag suggested for the video."
                          }
                        }
                      }
                    }
                  }
                },
                "topicDetails": {
                  "type": "object",
                  "description": "Freebase topic information related to the video.",
                  "properties": {
                    "relevantTopicIds": {
                      "type": "array",
                      "description": "Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "topicIds": {
                      "type": "array",
                      "description": "A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the Freebase Topic API.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /videos/getRating [/youtube/v3/videos/getRating{?id,onBehalfOfContentOwner}]

#### youtube.videos.getRating [GET]

+ Parameters

    + id (required)
  
    + onBehalfOfContentOwner

+ Response 200

### Resource /videos/rate [/youtube/v3/videos/rate{?id,rating,onBehalfOfContentOwner}]

#### youtube.videos.rate [POST]

+ Parameters

    + id (required)
  
    + rating (required)
  
    + onBehalfOfContentOwner

+ Response 200

### Resource /videos/reportAbuse [/youtube/v3/videos/reportAbuse{?onBehalfOfContentOwner}]

#### youtube.videos.reportAbuse [POST]

+ Parameters

    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "string",
                  "description": "Additional comments regarding the abuse report."
                },
                "language": {
                  "type": "string",
                  "description": "The language that the content was viewed in."
                },
                "reasonId": {
                  "type": "string",
                  "description": "The high-level, or primary, reason that the content is abusive. The value is an abuse report reason ID."
                },
                "secondaryReasonId": {
                  "type": "string",
                  "description": "The specific, or secondary, reason that this content is abusive (if available). The value is an abuse report reason ID that is a valid secondary reason for the primary reason."
                },
                "videoId": {
                  "type": "string",
                  "description": "The ID that YouTube uses to uniquely identify the video."
                }
              }
            }

+ Response 200

### Resource /watermarks/set [/youtube/v3/watermarks/set{?channelId,onBehalfOfContentOwner}]

#### youtube.watermarks.set [POST]

+ Parameters

    + channelId (required)
  
    + onBehalfOfContentOwner

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "imageBytes": {
                  "type": "string",
                  "format": "byte"
                },
                "imageUrl": {
                  "type": "string"
                },
                "position": {
                  "type": "object",
                  "description": "Describes the spatial position of a visual widget inside a video. It is a union of various position types, out of which only will be set one.",
                  "properties": {
                    "cornerPosition": {
                      "type": "string",
                      "description": "Describes in which corner of the video the visual widget will appear.",
                      "enum": [
                        "bottomLeft",
                        "bottomRight",
                        "topLeft",
                        "topRight"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Defines the position type.",
                      "enum": [
                        "corner"
                      ]
                    }
                  }
                },
                "targetChannelId": {
                  "type": "string"
                },
                "timing": {
                  "type": "object",
                  "description": "Describes a temporal position of a visual widget inside a video.",
                  "properties": {
                    "durationMs": {
                      "type": "string",
                      "description": "Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.",
                      "format": "uint64"
                    },
                    "offsetMs": {
                      "type": "string",
                      "description": "Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.",
                      "format": "uint64"
                    },
                    "type": {
                      "type": "string",
                      "description": "Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.",
                      "enum": [
                        "offsetFromEnd",
                        "offsetFromStart"
                      ]
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /watermarks/unset [/youtube/v3/watermarks/unset{?channelId,onBehalfOfContentOwner}]

#### youtube.watermarks.unset [POST]

+ Parameters

    + channelId (required)
  
    + onBehalfOfContentOwner

+ Response 200

