FORMAT: 1A

# Prediction API

Lets you access a cloud hosted machine learning service that makes it easy to build smart apps

### Resource /hostedmodels/{hostedModelName}/predict [/hostedmodels/{hostedModelName}/predict]

#### prediction.hostedmodels.predict [POST]

+ Parameters

    + hostedModelName (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "description": "Input to the model for a prediction",
                  "properties": {
                    "csvInstance": {
                      "type": "array",
                      "description": "A list of input features, these can be strings or doubles.",
                      "items": {}
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /trainedmodels/{id} [/trainedmodels/{id}]

#### prediction.trainedmodels.delete [DELETE]

+ Parameters

    + id (required)

+ Response 200

#### prediction.trainedmodels.get [GET]

+ Parameters

    + id (required)

+ Response 200

#### prediction.trainedmodels.update [PUT]

+ Parameters

    + id (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "csvInstance": {
                  "type": "array",
                  "description": "The input features for this instance",
                  "items": {}
                },
                "label": {
                  "type": "string",
                  "description": "The class label of this instance"
                },
                "output": {
                  "type": "string",
                  "description": "The generic output value - could be regression value or class label"
                }
              }
            }

+ Response 200

### Resource /trainedmodels [/trainedmodels]

#### prediction.trainedmodels.insert [POST]

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "dataAnalysis": {
                  "type": "object",
                  "description": "Data Analysis.",
                  "properties": {
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The unique name for the predictive model."
                },
                "kind": {
                  "type": "string",
                  "description": "What kind of resource this is.",
                  "default": "prediction#training"
                },
                "modelInfo": {
                  "type": "object",
                  "description": "Model metadata.",
                  "properties": {
                    "classWeightedAccuracy": {
                      "type": "number",
                      "description": "Estimated accuracy of model taking utility weights into account [Categorical models only].",
                      "format": "double"
                    },
                    "classificationAccuracy": {
                      "type": "number",
                      "description": "A number between 0.0 and 1.0, where 1.0 is 100% accurate. This is an estimate, based on the amount and quality of the training data, of the estimated prediction accuracy. You can use this is a guide to decide whether the results are accurate enough for your needs. This estimate will be more reliable if your real input data is similar to your training data [Categorical models only].",
                      "format": "double"
                    },
                    "confusionMatrix": {
                      "type": "object",
                      "description": "An output confusion matrix. This shows an estimate for how this model will do in predictions. This is first indexed by the true class label. For each true class label, this provides a pair {predicted_label, count}, where count is the estimated number of times the model will predict the predicted label given the true label. Will not output if more then 100 classes [Categorical models only].",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "confusionMatrixRowTotals": {
                      "type": "object",
                      "description": "A list of the confusion matrix row totals",
                      "additionalProperties": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "meanSquaredError": {
                      "type": "number",
                      "description": "An estimated mean squared error. The can be used to measure the quality of the predicted model [Regression models only].",
                      "format": "double"
                    },
                    "modelType": {
                      "type": "string",
                      "description": "Type of predictive model (CLASSIFICATION or REGRESSION)"
                    },
                    "numberInstances": {
                      "type": "string",
                      "description": "Number of valid data instances used in the trained model.",
                      "format": "int64"
                    },
                    "numberLabels": {
                      "type": "string",
                      "description": "Number of class labels in the trained model [Categorical models only].",
                      "format": "int64"
                    }
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "A URL to re-request this resource."
                },
                "storageDataLocation": {
                  "type": "string",
                  "description": "Google storage location of the training data file."
                },
                "storagePMMLLocation": {
                  "type": "string",
                  "description": "Google storage location of the preprocessing pmml file."
                },
                "storagePMMLModelLocation": {
                  "type": "string",
                  "description": "Google storage location of the pmml model file."
                },
                "trainingStatus": {
                  "type": "string",
                  "description": "The current status of the training job. This can be one of following: RUNNING; DONE; ERROR; ERROR: TRAINING JOB NOT FOUND"
                },
                "utility": {
                  "type": "array",
                  "description": "A class weighting function, which allows the importance weights for class labels to be specified [Categorical models only].",
                  "items": {
                    "type": "object",
                    "description": "Class label (string).",
                    "additionalProperties": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }

+ Response 200

### Resource /trainedmodels/{id}/predict [/trainedmodels/{id}/predict]

#### prediction.trainedmodels.predict [POST]

+ Parameters

    + id (required)

+ Request

    + Schema

            {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "description": "Input to the model for a prediction",
                  "properties": {
                    "csvInstance": {
                      "type": "array",
                      "description": "A list of input features, these can be strings or doubles.",
                      "items": {}
                    }
                  }
                }
              }
            }

+ Response 200

